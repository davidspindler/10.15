{"version":3,"sources":["js/three.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","THREE","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","EventDispatcher","type","listener","_listeners","undefined","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_seed","DEG2RAD","Math","PI","RAD2DEG","_lut","toString","hasRandomUUID","crypto","generateUUID","randomUUID","toUpperCase","d0","random","d1","d2","d3","uuid","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","MathUtils","Object","freeze","__proto__","Vector2","scalar","Error","constructor","v","w","addVectors","subVectors","multiplyScalar","e","elements","minVal","maxVal","divideScalar","round","sqrt","angle","atan2","distanceToSquared","dx","dy","normalize","alpha","v1","v2","offset","attribute","getX","getY","center","Symbol","iterator","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","fromArray","isMatrix3","arrayMax","Infinity","TYPED_ARRAYS","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","getTypedArray","buffer","createElementNS","name","document","_canvas","ImageUtils","image","test","src","HTMLCanvasElement","canvas","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","defineProperty","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","isRenderTargetTexture","setUvTransform","copy","source","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","isDataTexture","serializeImage","dispatchEvent","uv","applyMatrix3","isTexture","HTMLImageElement","ImageBitmap","getDataURL","data","Vector4","z","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","dispose","clone","isWebGLRenderTarget","WebGLMultipleRenderTargets","count","il","isWebGLMultipleRenderTargets","WebGLMultisampleRenderTarget","samples","isWebGLMultisampleRenderTarget","Quaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","euler","update","isEuler","_order","c1","c3","s1","s3","axis","halfAngle","trace","vFrom","vTo","dot","Number","EPSILON","step","angleTo","slerp","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","qa","u1","sqrt1u1","sqrtu1","u2","u3","callback","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","isQuaternion","Vector3","multiplyVectors","applyQuaternion","_quaternion$4","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","u","isVector3","Box3","minX","minY","minZ","maxX","maxY","maxZ","points","makeEmpty","expandByPoint","size","halfSize","_vector$b","add","object","expandByObject","box","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box$3","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","clampedPoint","getSize","_points","setFromPoints","equals","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","position","scale","x2","y2","z2","wx","wy","wz","determinant","_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","optionalResult","RotationOrders","Layers","mask","channel","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","updateMatrix","premultiply","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","isObject3D","remove","id","getObjectByProperty","child","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","JSON","stringify","toArray","isInstancedMesh","instanceMatrix","toJSON","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","parse","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","i0","i1","i2","fromBufferAttribute","getNormal","setFromCoplanarPoints","getBarycoord","uv1","uv2","uv3","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","addScaledVector","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","onBeforeCompile","newValue","flatShading","currentValue","isRoot","color","getHex","roughness","metalness","sheen","sheenTint","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularTint","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularTintMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationTint","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","srcPlanes","dstPlanes","isMaterial","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","charAt","setColorName","toLowerCase","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","hue","saturation","lightness","delta","getHSL","color1","color2","normalized","NAMES","MeshBasicMaterial","setValues","isMeshBasicMaterial","_vector$9","_vector2$1","BufferAttribute","itemSize","TypeError","usage","updateRange","index1","index2","colors","vectors","setXY","setXYZ","applyNormalMatrix","onUploadCallback","isBufferAttribute","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","_id","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","materialIndex","needsUpdate","getNormalMatrix","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","makeTranslation","makeScale","negate","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","getAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","isBufferGeometry","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","addGroup","keys","hasMorphAttributes","attributeArray","setIndex","assign","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","morphTargets","raycaster","intersects","intersectsBox","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","isGeometry","checkIntersection","intersect","intersectTriangle","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","tan","fullWidth","fullHeight","enabled","offsetX","offsetY","skew","getFilmWidth","makePerspective","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","_needsFlipEnvMap","shader","tEquirect","mesh","currentMinFilter","stencil","clear","_vector1","_vector2","_normalMatrix","Plane","setFromNormalAndCoplanarPoint","inverseNormalLength","line","startSign","endSign","intersectsPlane","optionalNormalMatrix","referencePoint","coplanarPoint","isPlane","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","getParameter","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","location","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","fromEquirectangularTexture","addEventListener","onTextureDispose","removeEventListener","OrthographicCamera","scaleW","scaleH","makeOrthographic","isOrthographicCamera","RawShaderMaterial","isRawShaderMaterial","LOD_MIN","LOD_MAX","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","ENCODINGS","_flatCamera","_createPlanes","_lodPlanes","_sizeLods","_sigmas","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_blurMaterial","_getBlurShader","_equirectShader","_cubemapShader","_compileMaterial","sigma","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","equirectangular","_fromTexture","_getCubemapShader","_getEquirectShader","outputTarget","_setViewport","_textureToCubeUV","params","_isLDR","_createRenderTarget","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","outputEncoding","backgroundMaterial","backgroundBox","useSolidColor","col","_setEncoding","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lod","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","_getEncodings","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","fromEquirectangular","fromCubemap","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","DataTexture2DArray","wrapR","isDataTexture2DArray","numericalSort","absNumericalSort","denormalize","morph","WebGLMorphtargets","influencesList","morphTextures","workInfluences","objectInfluences","numberOfMorphTargets","entry","hasMorphNormals","morphNormals","numberOfVertexData","vertexDataStride","morphTarget","morphNormal","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","hasAttribute","WebGLObjects","updateMap","buffergeometry","hasEventListener","onInstancedMeshDispose","instancedMesh","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","safeSetTexture2D","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT6Array","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","updateCache","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","addLineNumbers","split","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","WebGLProgram","cacheKey","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","morphTargetsCount","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","specularTintMapEncoding","lightMapEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","WebGLPrograms","cubeuvmaps","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getMaxBones","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","getParameters","shadows","isMeshStandardMaterial","useAlphaTest","useClearcoat","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","transmissive","defaultProgram","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","mapPass","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","VSMPass","blurSamples","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","intersectsObject","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","enable","DEPTH_TEST","disable","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindXRFramebuffer","framebuffer","bindFramebuffer","FRAMEBUFFER","DRAW_FRAMEBUFFER","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","textureProperties","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","RED","R32F","R16F","R8","RGB","RGB32F","RGB16F","RGB8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","filterFallback","LINEAR","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","__webglInit","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","TEXTURE_2D_ARRAY","TEXTURE_3D","setTextureCube","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","convert","glInternalFormat","mipmap","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressedTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isMultipleRenderTargets","isRenderTarget3D","createFramebuffer","COLOR_ATTACHMENT0","glTextureType","isTexture3D","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","warnedTexture2D","warnedTextureCube","WebGLUtils","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","RED_INTEGER","RG","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","glBinding","glFramebuffer","glProjLayer","glBaseLayer","glMultisampledFramebuffer","glColorRenderbuffer","glDepthRenderbuffer","xrFrame","depthStyle","clearStyle","msaartcSupported","msaaExt","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","onSessionEvent","onSessionEnd","forEach","disconnect","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","getBaseLayer","getBinding","getFrame","setSession","onInputSourcesChange","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","WebGLRenderingContext","depthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","requestReferenceSpace","inputSources","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","setFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","glSubImage","getViewSubImage","depthStencilTexture","framebufferTexture2DMultisampleEXT","colorTexture","invalidateFramebuffer","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","display","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_currentDrawBuffers","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","DYNAMIC_DRAW","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","material2","getProgram","window","setFromProjectionMatrix","projectObject","camera2","renderScene","onAfterRender","isLOD","intersectsSprite","isImmediateRenderObject","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","needsAntialias","renderTargetType","currentToneMapping","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","markUniformsLightsNeedsUpdate","framebufferBound","drawBuffersWEBGL","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","texSubImage3D","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","setFromMatrixScale","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","addLevel","getObjectForDistance","raycast","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","getComponent","boneIndex","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","json","boneInverse","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","raycastTimes","instanceId","getMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","distanceSqToSegment","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","CircleGeometry","segments","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","computeVertexNormals","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","getIndex","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Curve","arcLengthDivisions","optionalTarget","getUtoTmapping","getPoint","divisions","getPointAt","lengths","getLengths","cacheArcLengths","current","last","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","t2","pt1","pt2","getTangent","closed","binormals","vec","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","curveType","intPoint","isCatmullRomCurve3","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","getPoints","fromJSON","Path","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","concat","absarc","absellipse","firstPoint","lastPoint","Shape","holes","holesPts","getPointsHoles","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","isClockWise","hl","ahole","triangulateShape","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","LatheGeometry","phiStart","phiLength","inverseSegments","base","n1","OctahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","Set","o","ol","isUniqueEdge","hash1","hash2","Geometries","BoxBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","_sheen","_clearcoat","_transmission","Materials","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","getInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","validate","optimize","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","Promise","resolve","reject","load","loading","FileLoader","setTimeout","dataUriRegex","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","setRequestHeader","send","AnimationLoader","setPath","setWithCredentials","text","CompressedTextureLoader","setResponseType","loaded","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","setCrossOrigin","DataTextureLoader","texData","TextureLoader","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","coeff","shBasis","isSphericalHarmonics3","LightProbe","MaterialLoader","getTexture","shading","LoaderUtils","TextDecoder","decode","fromCharCode","escape","lastIndexOf","InstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","arrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","extractUrlBase","loadAsync","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","setTextures","loadImage","deserializeImage","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","objectAnimations","bind","setResourcePath","ImageBitmapLoader","createImageBitmap","fetch","fetchOptions","credentials","headers","then","res","blob","colorSpaceConversion","imageBitmap","catch","isImageBitmapLoader","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setPosition","setOrientation","Audio","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","getFilters","setFilters","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","refDistance","rolloffFactor","distanceModel","maxDistance","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","targetObject","resolvedProperty","propertyIndex","dest","targetArray","sourceArray","objectName","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","matches","results","lastDot","substring","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","action","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","coords","unproject","intersectObject","ascSort","Spherical","other","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","ImmediateRenderObject","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","rotateY","GridHelper","PolarGridHelper","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box","BoxHelper","setFromObject","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setLength","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","_floatView","_int32View","DataUtils","val","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","isMultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","fromPoints","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","Handlers","XHRLoader","BinaryTextureLoader","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","setRotationFromQuaternion","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateX","rotateZ","rotateByAxis","makeFrustum","isIntersectionLine","intersectsLine","isIntersectionPlane","getArea","barycoordFromPoint","midpoint","getMidpoint","prototypenormal","getPlane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","manhattanDistanceTo","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","getObjectByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","setFocalLength","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","clearGroups","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","WebGLRenderTargetCube","audioLoader","setBuffer","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CanvasRenderer","JSONLoader","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","ParametricGeometry","TextGeometry","FontLoader","Font","revision","__THREE__","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","body","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"three.bf944244.js","sourceRoot":"..\\src","sourcesContent":["/**\r\n * @license\r\n * Copyright 2010-2021 Three.js Authors\r\n * SPDX-License-Identifier: MIT\r\n */\r\n (function (global, factory) {\r\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.THREE = {}));\r\n}(this, (function (exports) { 'use strict';\r\n\r\n\tconst REVISION = '133';\r\n\tconst MOUSE = {\r\n\t\tLEFT: 0,\r\n\t\tMIDDLE: 1,\r\n\t\tRIGHT: 2,\r\n\t\tROTATE: 0,\r\n\t\tDOLLY: 1,\r\n\t\tPAN: 2\r\n\t};\r\n\tconst TOUCH = {\r\n\t\tROTATE: 0,\r\n\t\tPAN: 1,\r\n\t\tDOLLY_PAN: 2,\r\n\t\tDOLLY_ROTATE: 3\r\n\t};\r\n\tconst CullFaceNone = 0;\r\n\tconst CullFaceBack = 1;\r\n\tconst CullFaceFront = 2;\r\n\tconst CullFaceFrontBack = 3;\r\n\tconst BasicShadowMap = 0;\r\n\tconst PCFShadowMap = 1;\r\n\tconst PCFSoftShadowMap = 2;\r\n\tconst VSMShadowMap = 3;\r\n\tconst FrontSide = 0;\r\n\tconst BackSide = 1;\r\n\tconst DoubleSide = 2;\r\n\tconst FlatShading = 1;\r\n\tconst SmoothShading = 2;\r\n\tconst NoBlending = 0;\r\n\tconst NormalBlending = 1;\r\n\tconst AdditiveBlending = 2;\r\n\tconst SubtractiveBlending = 3;\r\n\tconst MultiplyBlending = 4;\r\n\tconst CustomBlending = 5;\r\n\tconst AddEquation = 100;\r\n\tconst SubtractEquation = 101;\r\n\tconst ReverseSubtractEquation = 102;\r\n\tconst MinEquation = 103;\r\n\tconst MaxEquation = 104;\r\n\tconst ZeroFactor = 200;\r\n\tconst OneFactor = 201;\r\n\tconst SrcColorFactor = 202;\r\n\tconst OneMinusSrcColorFactor = 203;\r\n\tconst SrcAlphaFactor = 204;\r\n\tconst OneMinusSrcAlphaFactor = 205;\r\n\tconst DstAlphaFactor = 206;\r\n\tconst OneMinusDstAlphaFactor = 207;\r\n\tconst DstColorFactor = 208;\r\n\tconst OneMinusDstColorFactor = 209;\r\n\tconst SrcAlphaSaturateFactor = 210;\r\n\tconst NeverDepth = 0;\r\n\tconst AlwaysDepth = 1;\r\n\tconst LessDepth = 2;\r\n\tconst LessEqualDepth = 3;\r\n\tconst EqualDepth = 4;\r\n\tconst GreaterEqualDepth = 5;\r\n\tconst GreaterDepth = 6;\r\n\tconst NotEqualDepth = 7;\r\n\tconst MultiplyOperation = 0;\r\n\tconst MixOperation = 1;\r\n\tconst AddOperation = 2;\r\n\tconst NoToneMapping = 0;\r\n\tconst LinearToneMapping = 1;\r\n\tconst ReinhardToneMapping = 2;\r\n\tconst CineonToneMapping = 3;\r\n\tconst ACESFilmicToneMapping = 4;\r\n\tconst CustomToneMapping = 5;\r\n\tconst UVMapping = 300;\r\n\tconst CubeReflectionMapping = 301;\r\n\tconst CubeRefractionMapping = 302;\r\n\tconst EquirectangularReflectionMapping = 303;\r\n\tconst EquirectangularRefractionMapping = 304;\r\n\tconst CubeUVReflectionMapping = 306;\r\n\tconst CubeUVRefractionMapping = 307;\r\n\tconst RepeatWrapping = 1000;\r\n\tconst ClampToEdgeWrapping = 1001;\r\n\tconst MirroredRepeatWrapping = 1002;\r\n\tconst NearestFilter = 1003;\r\n\tconst NearestMipmapNearestFilter = 1004;\r\n\tconst NearestMipMapNearestFilter = 1004;\r\n\tconst NearestMipmapLinearFilter = 1005;\r\n\tconst NearestMipMapLinearFilter = 1005;\r\n\tconst LinearFilter = 1006;\r\n\tconst LinearMipmapNearestFilter = 1007;\r\n\tconst LinearMipMapNearestFilter = 1007;\r\n\tconst LinearMipmapLinearFilter = 1008;\r\n\tconst LinearMipMapLinearFilter = 1008;\r\n\tconst UnsignedByteType = 1009;\r\n\tconst ByteType = 1010;\r\n\tconst ShortType = 1011;\r\n\tconst UnsignedShortType = 1012;\r\n\tconst IntType = 1013;\r\n\tconst UnsignedIntType = 1014;\r\n\tconst FloatType = 1015;\r\n\tconst HalfFloatType = 1016;\r\n\tconst UnsignedShort4444Type = 1017;\r\n\tconst UnsignedShort5551Type = 1018;\r\n\tconst UnsignedShort565Type = 1019;\r\n\tconst UnsignedInt248Type = 1020;\r\n\tconst AlphaFormat = 1021;\r\n\tconst RGBFormat = 1022;\r\n\tconst RGBAFormat = 1023;\r\n\tconst LuminanceFormat = 1024;\r\n\tconst LuminanceAlphaFormat = 1025;\r\n\tconst RGBEFormat = RGBAFormat;\r\n\tconst DepthFormat = 1026;\r\n\tconst DepthStencilFormat = 1027;\r\n\tconst RedFormat = 1028;\r\n\tconst RedIntegerFormat = 1029;\r\n\tconst RGFormat = 1030;\r\n\tconst RGIntegerFormat = 1031;\r\n\tconst RGBIntegerFormat = 1032;\r\n\tconst RGBAIntegerFormat = 1033;\r\n\tconst RGB_S3TC_DXT1_Format = 33776;\r\n\tconst RGBA_S3TC_DXT1_Format = 33777;\r\n\tconst RGBA_S3TC_DXT3_Format = 33778;\r\n\tconst RGBA_S3TC_DXT5_Format = 33779;\r\n\tconst RGB_PVRTC_4BPPV1_Format = 35840;\r\n\tconst RGB_PVRTC_2BPPV1_Format = 35841;\r\n\tconst RGBA_PVRTC_4BPPV1_Format = 35842;\r\n\tconst RGBA_PVRTC_2BPPV1_Format = 35843;\r\n\tconst RGB_ETC1_Format = 36196;\r\n\tconst RGB_ETC2_Format = 37492;\r\n\tconst RGBA_ETC2_EAC_Format = 37496;\r\n\tconst RGBA_ASTC_4x4_Format = 37808;\r\n\tconst RGBA_ASTC_5x4_Format = 37809;\r\n\tconst RGBA_ASTC_5x5_Format = 37810;\r\n\tconst RGBA_ASTC_6x5_Format = 37811;\r\n\tconst RGBA_ASTC_6x6_Format = 37812;\r\n\tconst RGBA_ASTC_8x5_Format = 37813;\r\n\tconst RGBA_ASTC_8x6_Format = 37814;\r\n\tconst RGBA_ASTC_8x8_Format = 37815;\r\n\tconst RGBA_ASTC_10x5_Format = 37816;\r\n\tconst RGBA_ASTC_10x6_Format = 37817;\r\n\tconst RGBA_ASTC_10x8_Format = 37818;\r\n\tconst RGBA_ASTC_10x10_Format = 37819;\r\n\tconst RGBA_ASTC_12x10_Format = 37820;\r\n\tconst RGBA_ASTC_12x12_Format = 37821;\r\n\tconst RGBA_BPTC_Format = 36492;\r\n\tconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\r\n\tconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\r\n\tconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\r\n\tconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\r\n\tconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\r\n\tconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\r\n\tconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\r\n\tconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\r\n\tconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\r\n\tconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\r\n\tconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\r\n\tconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\r\n\tconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\r\n\tconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\r\n\tconst LoopOnce = 2200;\r\n\tconst LoopRepeat = 2201;\r\n\tconst LoopPingPong = 2202;\r\n\tconst InterpolateDiscrete = 2300;\r\n\tconst InterpolateLinear = 2301;\r\n\tconst InterpolateSmooth = 2302;\r\n\tconst ZeroCurvatureEnding = 2400;\r\n\tconst ZeroSlopeEnding = 2401;\r\n\tconst WrapAroundEnding = 2402;\r\n\tconst NormalAnimationBlendMode = 2500;\r\n\tconst AdditiveAnimationBlendMode = 2501;\r\n\tconst TrianglesDrawMode = 0;\r\n\tconst TriangleStripDrawMode = 1;\r\n\tconst TriangleFanDrawMode = 2;\r\n\tconst LinearEncoding = 3000;\r\n\tconst sRGBEncoding = 3001;\r\n\tconst GammaEncoding = 3007;\r\n\tconst RGBEEncoding = 3002;\r\n\tconst LogLuvEncoding = 3003;\r\n\tconst RGBM7Encoding = 3004;\r\n\tconst RGBM16Encoding = 3005;\r\n\tconst RGBDEncoding = 3006;\r\n\tconst BasicDepthPacking = 3200;\r\n\tconst RGBADepthPacking = 3201;\r\n\tconst TangentSpaceNormalMap = 0;\r\n\tconst ObjectSpaceNormalMap = 1;\r\n\tconst ZeroStencilOp = 0;\r\n\tconst KeepStencilOp = 7680;\r\n\tconst ReplaceStencilOp = 7681;\r\n\tconst IncrementStencilOp = 7682;\r\n\tconst DecrementStencilOp = 7683;\r\n\tconst IncrementWrapStencilOp = 34055;\r\n\tconst DecrementWrapStencilOp = 34056;\r\n\tconst InvertStencilOp = 5386;\r\n\tconst NeverStencilFunc = 512;\r\n\tconst LessStencilFunc = 513;\r\n\tconst EqualStencilFunc = 514;\r\n\tconst LessEqualStencilFunc = 515;\r\n\tconst GreaterStencilFunc = 516;\r\n\tconst NotEqualStencilFunc = 517;\r\n\tconst GreaterEqualStencilFunc = 518;\r\n\tconst AlwaysStencilFunc = 519;\r\n\tconst StaticDrawUsage = 35044;\r\n\tconst DynamicDrawUsage = 35048;\r\n\tconst StreamDrawUsage = 35040;\r\n\tconst StaticReadUsage = 35045;\r\n\tconst DynamicReadUsage = 35049;\r\n\tconst StreamReadUsage = 35041;\r\n\tconst StaticCopyUsage = 35046;\r\n\tconst DynamicCopyUsage = 35050;\r\n\tconst StreamCopyUsage = 35042;\r\n\tconst GLSL1 = '100';\r\n\tconst GLSL3 = '300 es';\r\n\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\tclass EventDispatcher {\r\n\t\taddEventListener(type, listener) {\r\n\t\t\tif (this._listeners === undefined) this._listeners = {};\r\n\t\t\tconst listeners = this._listeners;\r\n\r\n\t\t\tif (listeners[type] === undefined) {\r\n\t\t\t\tlisteners[type] = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (listeners[type].indexOf(listener) === -1) {\r\n\t\t\t\tlisteners[type].push(listener);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\thasEventListener(type, listener) {\r\n\t\t\tif (this._listeners === undefined) return false;\r\n\t\t\tconst listeners = this._listeners;\r\n\t\t\treturn listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\r\n\t\t}\r\n\r\n\t\tremoveEventListener(type, listener) {\r\n\t\t\tif (this._listeners === undefined) return;\r\n\t\t\tconst listeners = this._listeners;\r\n\t\t\tconst listenerArray = listeners[type];\r\n\r\n\t\t\tif (listenerArray !== undefined) {\r\n\t\t\t\tconst index = listenerArray.indexOf(listener);\r\n\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\tlistenerArray.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdispatchEvent(event) {\r\n\t\t\tif (this._listeners === undefined) return;\r\n\t\t\tconst listeners = this._listeners;\r\n\t\t\tconst listenerArray = listeners[event.type];\r\n\r\n\t\t\tif (listenerArray !== undefined) {\r\n\t\t\t\tevent.target = this; // Make a copy, in case listeners are removed while iterating.\r\n\r\n\t\t\t\tconst array = listenerArray.slice(0);\r\n\r\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\t\tarray[i].call(this, event);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tevent.target = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet _seed = 1234567;\r\n\tconst DEG2RAD = Math.PI / 180;\r\n\tconst RAD2DEG = 180 / Math.PI; //\r\n\r\n\tconst _lut = [];\r\n\r\n\tfor (let i = 0; i < 256; i++) {\r\n\t\t_lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n\t}\r\n\r\n\tconst hasRandomUUID = typeof crypto !== 'undefined' && 'randomUUID' in crypto;\r\n\r\n\tfunction generateUUID() {\r\n\t\tif (hasRandomUUID) {\r\n\t\t\treturn crypto.randomUUID().toUpperCase();\r\n\t\t} // TODO Remove this code when crypto.randomUUID() is available everywhere\r\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n\r\n\r\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\r\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\r\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\r\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\r\n\t\tconst uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\r\n\r\n\t\treturn uuid.toUpperCase();\r\n\t}\r\n\r\n\tfunction clamp(value, min, max) {\r\n\t\treturn Math.max(min, Math.min(max, value));\r\n\t} // compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\r\n\tfunction euclideanModulo(n, m) {\r\n\t\treturn (n % m + m) % m;\r\n\t} // Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\r\n\tfunction mapLinear(x, a1, a2, b1, b2) {\r\n\t\treturn b1 + (x - a1) * (b2 - b1) / (a2 - a1);\r\n\t} // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\r\n\r\n\r\n\tfunction inverseLerp(x, y, value) {\r\n\t\tif (x !== y) {\r\n\t\t\treturn (value - x) / (y - x);\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t} // https://en.wikipedia.org/wiki/Linear_interpolation\r\n\r\n\r\n\tfunction lerp(x, y, t) {\r\n\t\treturn (1 - t) * x + t * y;\r\n\t} // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\n\r\n\r\n\tfunction damp(x, y, lambda, dt) {\r\n\t\treturn lerp(x, y, 1 - Math.exp(-lambda * dt));\r\n\t} // https://www.desmos.com/calculator/vcsjnyz7x4\r\n\r\n\r\n\tfunction pingpong(x, length = 1) {\r\n\t\treturn length - Math.abs(euclideanModulo(x, length * 2) - length);\r\n\t} // http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\r\n\tfunction smoothstep(x, min, max) {\r\n\t\tif (x <= min) return 0;\r\n\t\tif (x >= max) return 1;\r\n\t\tx = (x - min) / (max - min);\r\n\t\treturn x * x * (3 - 2 * x);\r\n\t}\r\n\r\n\tfunction smootherstep(x, min, max) {\r\n\t\tif (x <= min) return 0;\r\n\t\tif (x >= max) return 1;\r\n\t\tx = (x - min) / (max - min);\r\n\t\treturn x * x * x * (x * (x * 6 - 15) + 10);\r\n\t} // Random integer from <low, high> interval\r\n\r\n\r\n\tfunction randInt(low, high) {\r\n\t\treturn low + Math.floor(Math.random() * (high - low + 1));\r\n\t} // Random float from <low, high> interval\r\n\r\n\r\n\tfunction randFloat(low, high) {\r\n\t\treturn low + Math.random() * (high - low);\r\n\t} // Random float from <-range/2, range/2> interval\r\n\r\n\r\n\tfunction randFloatSpread(range) {\r\n\t\treturn range * (0.5 - Math.random());\r\n\t} // Deterministic pseudo-random float in the interval [ 0, 1 ]\r\n\r\n\r\n\tfunction seededRandom(s) {\r\n\t\tif (s !== undefined) _seed = s % 2147483647; // Park-Miller algorithm\r\n\r\n\t\t_seed = _seed * 16807 % 2147483647;\r\n\t\treturn (_seed - 1) / 2147483646;\r\n\t}\r\n\r\n\tfunction degToRad(degrees) {\r\n\t\treturn degrees * DEG2RAD;\r\n\t}\r\n\r\n\tfunction radToDeg(radians) {\r\n\t\treturn radians * RAD2DEG;\r\n\t}\r\n\r\n\tfunction isPowerOfTwo(value) {\r\n\t\treturn (value & value - 1) === 0 && value !== 0;\r\n\t}\r\n\r\n\tfunction ceilPowerOfTwo(value) {\r\n\t\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\r\n\t}\r\n\r\n\tfunction floorPowerOfTwo(value) {\r\n\t\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\r\n\t}\r\n\r\n\tfunction setQuaternionFromProperEuler(q, a, b, c, order) {\r\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\r\n\t\t// rotations are applied to the axes in the order specified by 'order'\r\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\r\n\t\t// angles are in radians\r\n\t\tconst cos = Math.cos;\r\n\t\tconst sin = Math.sin;\r\n\t\tconst c2 = cos(b / 2);\r\n\t\tconst s2 = sin(b / 2);\r\n\t\tconst c13 = cos((a + c) / 2);\r\n\t\tconst s13 = sin((a + c) / 2);\r\n\t\tconst c1_3 = cos((a - c) / 2);\r\n\t\tconst s1_3 = sin((a - c) / 2);\r\n\t\tconst c3_1 = cos((c - a) / 2);\r\n\t\tconst s3_1 = sin((c - a) / 2);\r\n\r\n\t\tswitch (order) {\r\n\t\t\tcase 'XYX':\r\n\t\t\t\tq.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YZY':\r\n\t\t\t\tq.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZXZ':\r\n\t\t\t\tq.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'XZX':\r\n\t\t\t\tq.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YXY':\r\n\t\t\t\tq.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZYZ':\r\n\t\t\t\tq.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\r\n\t\t}\r\n\t}\r\n\r\n\tvar MathUtils = /*#__PURE__*/Object.freeze({\r\n\t\t__proto__: null,\r\n\t\tDEG2RAD: DEG2RAD,\r\n\t\tRAD2DEG: RAD2DEG,\r\n\t\tgenerateUUID: generateUUID,\r\n\t\tclamp: clamp,\r\n\t\teuclideanModulo: euclideanModulo,\r\n\t\tmapLinear: mapLinear,\r\n\t\tinverseLerp: inverseLerp,\r\n\t\tlerp: lerp,\r\n\t\tdamp: damp,\r\n\t\tpingpong: pingpong,\r\n\t\tsmoothstep: smoothstep,\r\n\t\tsmootherstep: smootherstep,\r\n\t\trandInt: randInt,\r\n\t\trandFloat: randFloat,\r\n\t\trandFloatSpread: randFloatSpread,\r\n\t\tseededRandom: seededRandom,\r\n\t\tdegToRad: degToRad,\r\n\t\tradToDeg: radToDeg,\r\n\t\tisPowerOfTwo: isPowerOfTwo,\r\n\t\tceilPowerOfTwo: ceilPowerOfTwo,\r\n\t\tfloorPowerOfTwo: floorPowerOfTwo,\r\n\t\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler\r\n\t});\r\n\r\n\tclass Vector2 {\r\n\t\tconstructor(x = 0, y = 0) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\r\n\t\tget width() {\r\n\t\t\treturn this.x;\r\n\t\t}\r\n\r\n\t\tset width(value) {\r\n\t\t\tthis.x = value;\r\n\t\t}\r\n\r\n\t\tget height() {\r\n\t\t\treturn this.y;\r\n\t\t}\r\n\r\n\t\tset height(value) {\r\n\t\t\tthis.y = value;\r\n\t\t}\r\n\r\n\t\tset(x, y) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetScalar(scalar) {\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetX(x) {\r\n\t\t\tthis.x = x;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetY(y) {\r\n\t\t\tthis.y = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetComponent(index, value) {\r\n\t\t\tswitch (index) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tthis.x = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.y = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetComponent(index) {\r\n\t\t\tswitch (index) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\treturn this.x;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn this.y;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this.x, this.y);\r\n\t\t}\r\n\r\n\t\tcopy(v) {\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tadd(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\r\n\t\t\t\treturn this.addVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScalar(s) {\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddVectors(a, b) {\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScaledVector(v, s) {\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsub(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\r\n\t\t\t\treturn this.subVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsubScalar(s) {\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsubVectors(a, b) {\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(v) {\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyScalar(scalar) {\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdivide(v) {\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdivideScalar(scalar) {\r\n\t\t\treturn this.multiplyScalar(1 / scalar);\r\n\t\t}\r\n\r\n\t\tapplyMatrix3(m) {\r\n\t\t\tconst x = this.x,\r\n\t\t\t\t\t\ty = this.y;\r\n\t\t\tconst e = m.elements;\r\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6];\r\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmin(v) {\r\n\t\t\tthis.x = Math.min(this.x, v.x);\r\n\t\t\tthis.y = Math.min(this.y, v.y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmax(v) {\r\n\t\t\tthis.x = Math.max(this.x, v.x);\r\n\t\t\tthis.y = Math.max(this.y, v.y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclamp(min, max) {\r\n\t\t\t// assumes min < max, componentwise\r\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\r\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclampScalar(minVal, maxVal) {\r\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\r\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclampLength(min, max) {\r\n\t\t\tconst length = this.length();\r\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\r\n\t\t}\r\n\r\n\t\tfloor() {\r\n\t\t\tthis.x = Math.floor(this.x);\r\n\t\t\tthis.y = Math.floor(this.y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tceil() {\r\n\t\t\tthis.x = Math.ceil(this.x);\r\n\t\t\tthis.y = Math.ceil(this.y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tround() {\r\n\t\t\tthis.x = Math.round(this.x);\r\n\t\t\tthis.y = Math.round(this.y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\troundToZero() {\r\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\r\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tnegate() {\r\n\t\t\tthis.x = -this.x;\r\n\t\t\tthis.y = -this.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdot(v) {\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\t\t}\r\n\r\n\t\tcross(v) {\r\n\t\t\treturn this.x * v.y - this.y * v.x;\r\n\t\t}\r\n\r\n\t\tlengthSq() {\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\t\t}\r\n\r\n\t\tlength() {\r\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t\t}\r\n\r\n\t\tmanhattanLength() {\r\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y);\r\n\t\t}\r\n\r\n\t\tnormalize() {\r\n\t\t\treturn this.divideScalar(this.length() || 1);\r\n\t\t}\r\n\r\n\t\tangle() {\r\n\t\t\t// computes the angle in radians with respect to the positive x-axis\r\n\t\t\tconst angle = Math.atan2(-this.y, -this.x) + Math.PI;\r\n\t\t\treturn angle;\r\n\t\t}\r\n\r\n\t\tdistanceTo(v) {\r\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\r\n\t\t}\r\n\r\n\t\tdistanceToSquared(v) {\r\n\t\t\tconst dx = this.x - v.x,\r\n\t\t\t\t\t\tdy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\t\t}\r\n\r\n\t\tmanhattanDistanceTo(v) {\r\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\r\n\t\t}\r\n\r\n\t\tsetLength(length) {\r\n\t\t\treturn this.normalize().multiplyScalar(length);\r\n\t\t}\r\n\r\n\t\tlerp(v, alpha) {\r\n\t\t\tthis.x += (v.x - this.x) * alpha;\r\n\t\t\tthis.y += (v.y - this.y) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerpVectors(v1, v2, alpha) {\r\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\r\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(v) {\r\n\t\t\treturn v.x === this.x && v.y === this.y;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tthis.x = array[offset];\r\n\t\t\tthis.y = array[offset + 1];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tarray[offset] = this.x;\r\n\t\t\tarray[offset + 1] = this.y;\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tfromBufferAttribute(attribute, index, offset) {\r\n\t\t\tif (offset !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX(index);\r\n\t\t\tthis.y = attribute.getY(index);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotateAround(center, angle) {\r\n\t\t\tconst c = Math.cos(angle),\r\n\t\t\t\t\t\ts = Math.sin(angle);\r\n\t\t\tconst x = this.x - center.x;\r\n\t\t\tconst y = this.y - center.y;\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trandom() {\r\n\t\t\tthis.x = Math.random();\r\n\t\t\tthis.y = Math.random();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t*[Symbol.iterator]() {\r\n\t\t\tyield this.x;\r\n\t\t\tyield this.y;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tVector2.prototype.isVector2 = true;\r\n\r\n\tclass Matrix3 {\r\n\t\tconstructor() {\r\n\t\t\tthis.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n\r\n\t\t\tif (arguments.length > 0) {\r\n\t\t\t\tconsole.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tset(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tte[0] = n11;\r\n\t\t\tte[1] = n21;\r\n\t\t\tte[2] = n31;\r\n\t\t\tte[3] = n12;\r\n\t\t\tte[4] = n22;\r\n\t\t\tte[5] = n32;\r\n\t\t\tte[6] = n13;\r\n\t\t\tte[7] = n23;\r\n\t\t\tte[8] = n33;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tidentity() {\r\n\t\t\tthis.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(m) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst me = m.elements;\r\n\t\t\tte[0] = me[0];\r\n\t\t\tte[1] = me[1];\r\n\t\t\tte[2] = me[2];\r\n\t\t\tte[3] = me[3];\r\n\t\t\tte[4] = me[4];\r\n\t\t\tte[5] = me[5];\r\n\t\t\tte[6] = me[6];\r\n\t\t\tte[7] = me[7];\r\n\t\t\tte[8] = me[8];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\textractBasis(xAxis, yAxis, zAxis) {\r\n\t\t\txAxis.setFromMatrix3Column(this, 0);\r\n\t\t\tyAxis.setFromMatrix3Column(this, 1);\r\n\t\t\tzAxis.setFromMatrix3Column(this, 2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromMatrix4(m) {\r\n\t\t\tconst me = m.elements;\r\n\t\t\tthis.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(m) {\r\n\t\t\treturn this.multiplyMatrices(this, m);\r\n\t\t}\r\n\r\n\t\tpremultiply(m) {\r\n\t\t\treturn this.multiplyMatrices(m, this);\r\n\t\t}\r\n\r\n\t\tmultiplyMatrices(a, b) {\r\n\t\t\tconst ae = a.elements;\r\n\t\t\tconst be = b.elements;\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst a11 = ae[0],\r\n\t\t\t\t\t\ta12 = ae[3],\r\n\t\t\t\t\t\ta13 = ae[6];\r\n\t\t\tconst a21 = ae[1],\r\n\t\t\t\t\t\ta22 = ae[4],\r\n\t\t\t\t\t\ta23 = ae[7];\r\n\t\t\tconst a31 = ae[2],\r\n\t\t\t\t\t\ta32 = ae[5],\r\n\t\t\t\t\t\ta33 = ae[8];\r\n\t\t\tconst b11 = be[0],\r\n\t\t\t\t\t\tb12 = be[3],\r\n\t\t\t\t\t\tb13 = be[6];\r\n\t\t\tconst b21 = be[1],\r\n\t\t\t\t\t\tb22 = be[4],\r\n\t\t\t\t\t\tb23 = be[7];\r\n\t\t\tconst b31 = be[2],\r\n\t\t\t\t\t\tb32 = be[5],\r\n\t\t\t\t\t\tb33 = be[8];\r\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31;\r\n\t\t\tte[3] = a11 * b12 + a12 * b22 + a13 * b32;\r\n\t\t\tte[6] = a11 * b13 + a12 * b23 + a13 * b33;\r\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31;\r\n\t\t\tte[4] = a21 * b12 + a22 * b22 + a23 * b32;\r\n\t\t\tte[7] = a21 * b13 + a22 * b23 + a23 * b33;\r\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31;\r\n\t\t\tte[5] = a31 * b12 + a32 * b22 + a33 * b32;\r\n\t\t\tte[8] = a31 * b13 + a32 * b23 + a33 * b33;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyScalar(s) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tte[0] *= s;\r\n\t\t\tte[3] *= s;\r\n\t\t\tte[6] *= s;\r\n\t\t\tte[1] *= s;\r\n\t\t\tte[4] *= s;\r\n\t\t\tte[7] *= s;\r\n\t\t\tte[2] *= s;\r\n\t\t\tte[5] *= s;\r\n\t\t\tte[8] *= s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdeterminant() {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst a = te[0],\r\n\t\t\t\t\t\tb = te[1],\r\n\t\t\t\t\t\tc = te[2],\r\n\t\t\t\t\t\td = te[3],\r\n\t\t\t\t\t\te = te[4],\r\n\t\t\t\t\t\tf = te[5],\r\n\t\t\t\t\t\tg = te[6],\r\n\t\t\t\t\t\th = te[7],\r\n\t\t\t\t\t\ti = te[8];\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\t\t}\r\n\r\n\t\tinvert() {\r\n\t\t\tconst te = this.elements,\r\n\t\t\t\t\t\tn11 = te[0],\r\n\t\t\t\t\t\tn21 = te[1],\r\n\t\t\t\t\t\tn31 = te[2],\r\n\t\t\t\t\t\tn12 = te[3],\r\n\t\t\t\t\t\tn22 = te[4],\r\n\t\t\t\t\t\tn32 = te[5],\r\n\t\t\t\t\t\tn13 = te[6],\r\n\t\t\t\t\t\tn23 = te[7],\r\n\t\t\t\t\t\tn33 = te[8],\r\n\t\t\t\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\t\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\t\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\t\t\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n\t\t\tconst detInv = 1 / det;\r\n\t\t\tte[0] = t11 * detInv;\r\n\t\t\tte[1] = (n31 * n23 - n33 * n21) * detInv;\r\n\t\t\tte[2] = (n32 * n21 - n31 * n22) * detInv;\r\n\t\t\tte[3] = t12 * detInv;\r\n\t\t\tte[4] = (n33 * n11 - n31 * n13) * detInv;\r\n\t\t\tte[5] = (n31 * n12 - n32 * n11) * detInv;\r\n\t\t\tte[6] = t13 * detInv;\r\n\t\t\tte[7] = (n21 * n13 - n23 * n11) * detInv;\r\n\t\t\tte[8] = (n22 * n11 - n21 * n12) * detInv;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranspose() {\r\n\t\t\tlet tmp;\r\n\t\t\tconst m = this.elements;\r\n\t\t\ttmp = m[1];\r\n\t\t\tm[1] = m[3];\r\n\t\t\tm[3] = tmp;\r\n\t\t\ttmp = m[2];\r\n\t\t\tm[2] = m[6];\r\n\t\t\tm[6] = tmp;\r\n\t\t\ttmp = m[5];\r\n\t\t\tm[5] = m[7];\r\n\t\t\tm[7] = tmp;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetNormalMatrix(matrix4) {\r\n\t\t\treturn this.setFromMatrix4(matrix4).invert().transpose();\r\n\t\t}\r\n\r\n\t\ttransposeIntoArray(r) {\r\n\t\t\tconst m = this.elements;\r\n\t\t\tr[0] = m[0];\r\n\t\t\tr[1] = m[3];\r\n\t\t\tr[2] = m[6];\r\n\t\t\tr[3] = m[1];\r\n\t\t\tr[4] = m[4];\r\n\t\t\tr[5] = m[7];\r\n\t\t\tr[6] = m[2];\r\n\t\t\tr[7] = m[5];\r\n\t\t\tr[8] = m[8];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\r\n\t\t\tconst c = Math.cos(rotation);\r\n\t\t\tconst s = Math.sin(rotation);\r\n\t\t\tthis.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tscale(sx, sy) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tte[0] *= sx;\r\n\t\t\tte[3] *= sx;\r\n\t\t\tte[6] *= sx;\r\n\t\t\tte[1] *= sy;\r\n\t\t\tte[4] *= sy;\r\n\t\t\tte[7] *= sy;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotate(theta) {\r\n\t\t\tconst c = Math.cos(theta);\r\n\t\t\tconst s = Math.sin(theta);\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst a11 = te[0],\r\n\t\t\t\t\t\ta12 = te[3],\r\n\t\t\t\t\t\ta13 = te[6];\r\n\t\t\tconst a21 = te[1],\r\n\t\t\t\t\t\ta22 = te[4],\r\n\t\t\t\t\t\ta23 = te[7];\r\n\t\t\tte[0] = c * a11 + s * a21;\r\n\t\t\tte[3] = c * a12 + s * a22;\r\n\t\t\tte[6] = c * a13 + s * a23;\r\n\t\t\tte[1] = -s * a11 + c * a21;\r\n\t\t\tte[4] = -s * a12 + c * a22;\r\n\t\t\tte[7] = -s * a13 + c * a23;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslate(tx, ty) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tte[0] += tx * te[2];\r\n\t\t\tte[3] += tx * te[5];\r\n\t\t\tte[6] += tx * te[8];\r\n\t\t\tte[1] += ty * te[2];\r\n\t\t\tte[4] += ty * te[5];\r\n\t\t\tte[7] += ty * te[8];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(matrix) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst me = matrix.elements;\r\n\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tif (te[i] !== me[i]) return false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.elements[i] = array[i + offset];\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tarray[offset] = te[0];\r\n\t\t\tarray[offset + 1] = te[1];\r\n\t\t\tarray[offset + 2] = te[2];\r\n\t\t\tarray[offset + 3] = te[3];\r\n\t\t\tarray[offset + 4] = te[4];\r\n\t\t\tarray[offset + 5] = te[5];\r\n\t\t\tarray[offset + 6] = te[6];\r\n\t\t\tarray[offset + 7] = te[7];\r\n\t\t\tarray[offset + 8] = te[8];\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().fromArray(this.elements);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMatrix3.prototype.isMatrix3 = true;\r\n\r\n\tfunction arrayMax(array) {\r\n\t\tif (array.length === 0) return -Infinity;\r\n\t\tlet max = array[0];\r\n\r\n\t\tfor (let i = 1, l = array.length; i < l; ++i) {\r\n\t\t\tif (array[i] > max) max = array[i];\r\n\t\t}\r\n\r\n\t\treturn max;\r\n\t}\r\n\r\n\tconst TYPED_ARRAYS = {\r\n\t\tInt8Array: Int8Array,\r\n\t\tUint8Array: Uint8Array,\r\n\t\tUint8ClampedArray: Uint8ClampedArray,\r\n\t\tInt16Array: Int16Array,\r\n\t\tUint16Array: Uint16Array,\r\n\t\tInt32Array: Int32Array,\r\n\t\tUint32Array: Uint32Array,\r\n\t\tFloat32Array: Float32Array,\r\n\t\tFloat64Array: Float64Array\r\n\t};\r\n\r\n\tfunction getTypedArray(type, buffer) {\r\n\t\treturn new TYPED_ARRAYS[type](buffer);\r\n\t}\r\n\r\n\tfunction createElementNS(name) {\r\n\t\treturn document.createElementNS('http://www.w3.org/1999/xhtml', name);\r\n\t}\r\n\r\n\tlet _canvas;\r\n\r\n\tclass ImageUtils {\r\n\t\tstatic getDataURL(image) {\r\n\t\t\tif (/^data:/i.test(image.src)) {\r\n\t\t\t\treturn image.src;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof HTMLCanvasElement == 'undefined') {\r\n\t\t\t\treturn image.src;\r\n\t\t\t}\r\n\r\n\t\t\tlet canvas;\r\n\r\n\t\t\tif (image instanceof HTMLCanvasElement) {\r\n\t\t\t\tcanvas = image;\r\n\t\t\t} else {\r\n\t\t\t\tif (_canvas === undefined) _canvas = createElementNS('canvas');\r\n\t\t\t\t_canvas.width = image.width;\r\n\t\t\t\t_canvas.height = image.height;\r\n\r\n\t\t\t\tconst context = _canvas.getContext('2d');\r\n\r\n\t\t\t\tif (image instanceof ImageData) {\r\n\t\t\t\t\tcontext.putImageData(image, 0, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontext.drawImage(image, 0, 0, image.width, image.height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcanvas = _canvas;\r\n\t\t\t}\r\n\r\n\t\t\tif (canvas.width > 2048 || canvas.height > 2048) {\r\n\t\t\t\tconsole.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\r\n\t\t\t\treturn canvas.toDataURL('image/jpeg', 0.6);\r\n\t\t\t} else {\r\n\t\t\t\treturn canvas.toDataURL('image/png');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet textureId = 0;\r\n\r\n\tclass Texture extends EventDispatcher {\r\n\t\tconstructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding) {\r\n\t\t\tsuper();\r\n\t\t\tObject.defineProperty(this, 'id', {\r\n\t\t\t\tvalue: textureId++\r\n\t\t\t});\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.image = image;\r\n\t\t\tthis.mipmaps = [];\r\n\t\t\tthis.mapping = mapping;\r\n\t\t\tthis.wrapS = wrapS;\r\n\t\t\tthis.wrapT = wrapT;\r\n\t\t\tthis.magFilter = magFilter;\r\n\t\t\tthis.minFilter = minFilter;\r\n\t\t\tthis.anisotropy = anisotropy;\r\n\t\t\tthis.format = format;\r\n\t\t\tthis.internalFormat = null;\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.offset = new Vector2(0, 0);\r\n\t\t\tthis.repeat = new Vector2(1, 1);\r\n\t\t\tthis.center = new Vector2(0, 0);\r\n\t\t\tthis.rotation = 0;\r\n\t\t\tthis.matrixAutoUpdate = true;\r\n\t\t\tthis.matrix = new Matrix3();\r\n\t\t\tthis.generateMipmaps = true;\r\n\t\t\tthis.premultiplyAlpha = false;\r\n\t\t\tthis.flipY = true;\r\n\t\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\t\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\r\n\t\t\t//\r\n\t\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\r\n\t\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\r\n\r\n\t\t\tthis.encoding = encoding;\r\n\t\t\tthis.version = 0;\r\n\t\t\tthis.onUpdate = null;\r\n\t\t\tthis.isRenderTargetTexture = false;\r\n\t\t}\r\n\r\n\t\tupdateMatrix() {\r\n\t\t\tthis.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.name = source.name;\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice(0);\r\n\t\t\tthis.mapping = source.mapping;\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.internalFormat = source.internalFormat;\r\n\t\t\tthis.type = source.type;\r\n\t\t\tthis.offset.copy(source.offset);\r\n\t\t\tthis.repeat.copy(source.repeat);\r\n\t\t\tthis.center.copy(source.center);\r\n\t\t\tthis.rotation = source.rotation;\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrix.copy(source.matrix);\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\t\tthis.encoding = source.encoding;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\r\n\r\n\t\t\tif (!isRootObject && meta.textures[this.uuid] !== undefined) {\r\n\t\t\t\treturn meta.textures[this.uuid];\r\n\t\t\t}\r\n\r\n\t\t\tconst output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\t\t\t\tmapping: this.mapping,\r\n\t\t\t\trepeat: [this.repeat.x, this.repeat.y],\r\n\t\t\t\toffset: [this.offset.x, this.offset.y],\r\n\t\t\t\tcenter: [this.center.x, this.center.y],\r\n\t\t\t\trotation: this.rotation,\r\n\t\t\t\twrap: [this.wrapS, this.wrapT],\r\n\t\t\t\tformat: this.format,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t\tencoding: this.encoding,\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy,\r\n\t\t\t\tflipY: this.flipY,\r\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\r\n\t\t\t\tunpackAlignment: this.unpackAlignment\r\n\t\t\t};\r\n\r\n\t\t\tif (this.image !== undefined) {\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\t\t\t\tconst image = this.image;\r\n\r\n\t\t\t\tif (image.uuid === undefined) {\r\n\t\t\t\t\timage.uuid = generateUUID(); // UGH\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!isRootObject && meta.images[image.uuid] === undefined) {\r\n\t\t\t\t\tlet url;\r\n\r\n\t\t\t\t\tif (Array.isArray(image)) {\r\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\r\n\t\t\t\t\t\turl = [];\r\n\r\n\t\t\t\t\t\tfor (let i = 0, l = image.length; i < l; i++) {\r\n\t\t\t\t\t\t\t// check cube texture with data textures\r\n\t\t\t\t\t\t\tif (image[i].isDataTexture) {\r\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i].image));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// process single image\r\n\t\t\t\t\t\turl = serializeImage(image);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmeta.images[image.uuid] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: url\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.image = image.uuid;\r\n\t\t\t}\r\n\r\n\t\t\tif (!isRootObject) {\r\n\t\t\t\tmeta.textures[this.uuid] = output;\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.dispatchEvent({\r\n\t\t\t\ttype: 'dispose'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\ttransformUv(uv) {\r\n\t\t\tif (this.mapping !== UVMapping) return uv;\r\n\t\t\tuv.applyMatrix3(this.matrix);\r\n\r\n\t\t\tif (uv.x < 0 || uv.x > 1) {\r\n\t\t\t\tswitch (this.wrapS) {\r\n\t\t\t\t\tcase RepeatWrapping:\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ClampToEdgeWrapping:\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MirroredRepeatWrapping:\r\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.x) % 2) === 1) {\r\n\t\t\t\t\t\t\tuv.x = Math.ceil(uv.x) - uv.x;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (uv.y < 0 || uv.y > 1) {\r\n\t\t\t\tswitch (this.wrapT) {\r\n\t\t\t\t\tcase RepeatWrapping:\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ClampToEdgeWrapping:\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MirroredRepeatWrapping:\r\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.y) % 2) === 1) {\r\n\t\t\t\t\t\t\tuv.y = Math.ceil(uv.y) - uv.y;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.flipY) {\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\t\t\t}\r\n\r\n\t\t\treturn uv;\r\n\t\t}\r\n\r\n\t\tset needsUpdate(value) {\r\n\t\t\tif (value === true) this.version++;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTexture.DEFAULT_IMAGE = undefined;\r\n\tTexture.DEFAULT_MAPPING = UVMapping;\r\n\tTexture.prototype.isTexture = true;\r\n\r\n\tfunction serializeImage(image) {\r\n\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\r\n\t\t\t// default images\r\n\t\t\treturn ImageUtils.getDataURL(image);\r\n\t\t} else {\r\n\t\t\tif (image.data) {\r\n\t\t\t\t// images of DataTexture\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdata: Array.prototype.slice.call(image.data),\r\n\t\t\t\t\twidth: image.width,\r\n\t\t\t\t\theight: image.height,\r\n\t\t\t\t\ttype: image.data.constructor.name\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn('THREE.Texture: Unable to serialize Texture.');\r\n\t\t\t\treturn {};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclass Vector4 {\r\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\t}\r\n\r\n\t\tget width() {\r\n\t\t\treturn this.z;\r\n\t\t}\r\n\r\n\t\tset width(value) {\r\n\t\t\tthis.z = value;\r\n\t\t}\r\n\r\n\t\tget height() {\r\n\t\t\treturn this.w;\r\n\t\t}\r\n\r\n\t\tset height(value) {\r\n\t\t\tthis.w = value;\r\n\t\t}\r\n\r\n\t\tset(x, y, z, w) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetScalar(scalar) {\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\tthis.z = scalar;\r\n\t\t\tthis.w = scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetX(x) {\r\n\t\t\tthis.x = x;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetY(y) {\r\n\t\t\tthis.y = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetZ(z) {\r\n\t\t\tthis.z = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetW(w) {\r\n\t\t\tthis.w = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetComponent(index, value) {\r\n\t\t\tswitch (index) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tthis.x = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.y = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.z = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis.w = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetComponent(index) {\r\n\t\t\tswitch (index) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\treturn this.x;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn this.y;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\treturn this.z;\r\n\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\treturn this.w;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this.x, this.y, this.z, this.w);\r\n\t\t}\r\n\r\n\t\tcopy(v) {\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = v.w !== undefined ? v.w : 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tadd(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\r\n\t\t\t\treturn this.addVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScalar(s) {\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddVectors(a, b) {\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScaledVector(v, s) {\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsub(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\r\n\t\t\t\treturn this.subVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsubScalar(s) {\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsubVectors(a, b) {\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(v) {\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\t\tthis.w *= v.w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyScalar(scalar) {\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(m) {\r\n\t\t\tconst x = this.x,\r\n\t\t\t\t\t\ty = this.y,\r\n\t\t\t\t\t\tz = this.z,\r\n\t\t\t\t\t\tw = this.w;\r\n\t\t\tconst e = m.elements;\r\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\r\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\r\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\r\n\t\t\tthis.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdivideScalar(scalar) {\r\n\t\t\treturn this.multiplyScalar(1 / scalar);\r\n\t\t}\r\n\r\n\t\tsetAxisAngleFromQuaternion(q) {\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\t\t\t// q is assumed to be normalized\r\n\t\t\tthis.w = 2 * Math.acos(q.w);\r\n\t\t\tconst s = Math.sqrt(1 - q.w * q.w);\r\n\r\n\t\t\tif (s < 0.0001) {\r\n\t\t\t\tthis.x = 1;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.x = q.x / s;\r\n\t\t\t\tthis.y = q.y / s;\r\n\t\t\t\tthis.z = q.z / s;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetAxisAngleFromRotationMatrix(m) {\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\t\tlet angle, x, y, z; // variables for result\r\n\r\n\t\t\tconst epsilon = 0.01,\r\n\t\t\t\t\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\r\n\t\t\t\t\t\t// margin to distinguish between 0 and 180 degrees\r\n\t\t\tte = m.elements,\r\n\t\t\t\t\t\tm11 = te[0],\r\n\t\t\t\t\t\tm12 = te[4],\r\n\t\t\t\t\t\tm13 = te[8],\r\n\t\t\t\t\t\tm21 = te[1],\r\n\t\t\t\t\t\tm22 = te[5],\r\n\t\t\t\t\t\tm23 = te[9],\r\n\t\t\t\t\t\tm31 = te[2],\r\n\t\t\t\t\t\tm32 = te[6],\r\n\t\t\t\t\t\tm33 = te[10];\r\n\r\n\t\t\tif (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\t\t\t\tif (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\t\t\t\t\tthis.set(1, 0, 0, 0);\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\t\t\t\t} // otherwise this singularity is angle = 180\r\n\r\n\r\n\t\t\t\tangle = Math.PI;\r\n\t\t\t\tconst xx = (m11 + 1) / 2;\r\n\t\t\t\tconst yy = (m22 + 1) / 2;\r\n\t\t\t\tconst zz = (m33 + 1) / 2;\r\n\t\t\t\tconst xy = (m12 + m21) / 4;\r\n\t\t\t\tconst xz = (m13 + m31) / 4;\r\n\t\t\t\tconst yz = (m23 + m32) / 4;\r\n\r\n\t\t\t\tif (xx > yy && xx > zz) {\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\t\t\t\t\tif (xx < epsilon) {\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tx = Math.sqrt(xx);\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (yy > zz) {\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\t\t\t\t\tif (yy < epsilon) {\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ty = Math.sqrt(yy);\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\t\t\t\t\tif (zz < epsilon) {\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tz = Math.sqrt(zz);\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.set(x, y, z, angle);\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\t\t\t} // as we have reached here there are no singularities so we can handle normally\r\n\r\n\r\n\t\t\tlet s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\r\n\r\n\t\t\tif (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\t\tthis.x = (m32 - m23) / s;\r\n\t\t\tthis.y = (m13 - m31) / s;\r\n\t\t\tthis.z = (m21 - m12) / s;\r\n\t\t\tthis.w = Math.acos((m11 + m22 + m33 - 1) / 2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmin(v) {\r\n\t\t\tthis.x = Math.min(this.x, v.x);\r\n\t\t\tthis.y = Math.min(this.y, v.y);\r\n\t\t\tthis.z = Math.min(this.z, v.z);\r\n\t\t\tthis.w = Math.min(this.w, v.w);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmax(v) {\r\n\t\t\tthis.x = Math.max(this.x, v.x);\r\n\t\t\tthis.y = Math.max(this.y, v.y);\r\n\t\t\tthis.z = Math.max(this.z, v.z);\r\n\t\t\tthis.w = Math.max(this.w, v.w);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclamp(min, max) {\r\n\t\t\t// assumes min < max, componentwise\r\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\r\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\r\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\r\n\t\t\tthis.w = Math.max(min.w, Math.min(max.w, this.w));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclampScalar(minVal, maxVal) {\r\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\r\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\r\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\r\n\t\t\tthis.w = Math.max(minVal, Math.min(maxVal, this.w));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclampLength(min, max) {\r\n\t\t\tconst length = this.length();\r\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\r\n\t\t}\r\n\r\n\t\tfloor() {\r\n\t\t\tthis.x = Math.floor(this.x);\r\n\t\t\tthis.y = Math.floor(this.y);\r\n\t\t\tthis.z = Math.floor(this.z);\r\n\t\t\tthis.w = Math.floor(this.w);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tceil() {\r\n\t\t\tthis.x = Math.ceil(this.x);\r\n\t\t\tthis.y = Math.ceil(this.y);\r\n\t\t\tthis.z = Math.ceil(this.z);\r\n\t\t\tthis.w = Math.ceil(this.w);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tround() {\r\n\t\t\tthis.x = Math.round(this.x);\r\n\t\t\tthis.y = Math.round(this.y);\r\n\t\t\tthis.z = Math.round(this.z);\r\n\t\t\tthis.w = Math.round(this.w);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\troundToZero() {\r\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\r\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\r\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\r\n\t\t\tthis.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tnegate() {\r\n\t\t\tthis.x = -this.x;\r\n\t\t\tthis.y = -this.y;\r\n\t\t\tthis.z = -this.z;\r\n\t\t\tthis.w = -this.w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdot(v) {\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\t\t}\r\n\r\n\t\tlengthSq() {\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\t\t}\r\n\r\n\t\tlength() {\r\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n\t\t}\r\n\r\n\t\tmanhattanLength() {\r\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\r\n\t\t}\r\n\r\n\t\tnormalize() {\r\n\t\t\treturn this.divideScalar(this.length() || 1);\r\n\t\t}\r\n\r\n\t\tsetLength(length) {\r\n\t\t\treturn this.normalize().multiplyScalar(length);\r\n\t\t}\r\n\r\n\t\tlerp(v, alpha) {\r\n\t\t\tthis.x += (v.x - this.x) * alpha;\r\n\t\t\tthis.y += (v.y - this.y) * alpha;\r\n\t\t\tthis.z += (v.z - this.z) * alpha;\r\n\t\t\tthis.w += (v.w - this.w) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerpVectors(v1, v2, alpha) {\r\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\r\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\r\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\r\n\t\t\tthis.w = v1.w + (v2.w - v1.w) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(v) {\r\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tthis.x = array[offset];\r\n\t\t\tthis.y = array[offset + 1];\r\n\t\t\tthis.z = array[offset + 2];\r\n\t\t\tthis.w = array[offset + 3];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tarray[offset] = this.x;\r\n\t\t\tarray[offset + 1] = this.y;\r\n\t\t\tarray[offset + 2] = this.z;\r\n\t\t\tarray[offset + 3] = this.w;\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tfromBufferAttribute(attribute, index, offset) {\r\n\t\t\tif (offset !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX(index);\r\n\t\t\tthis.y = attribute.getY(index);\r\n\t\t\tthis.z = attribute.getZ(index);\r\n\t\t\tthis.w = attribute.getW(index);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trandom() {\r\n\t\t\tthis.x = Math.random();\r\n\t\t\tthis.y = Math.random();\r\n\t\t\tthis.z = Math.random();\r\n\t\t\tthis.w = Math.random();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t*[Symbol.iterator]() {\r\n\t\t\tyield this.x;\r\n\t\t\tyield this.y;\r\n\t\t\tyield this.z;\r\n\t\t\tyield this.w;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tVector4.prototype.isVector4 = true;\r\n\r\n\t/*\r\n\t In options, we can specify:\r\n\t * Texture parameters for an auto-generated target texture\r\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n\t*/\r\n\r\n\tclass WebGLRenderTarget extends EventDispatcher {\r\n\t\tconstructor(width, height, options = {}) {\r\n\t\t\tsuper();\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.depth = 1;\r\n\t\t\tthis.scissor = new Vector4(0, 0, width, height);\r\n\t\t\tthis.scissorTest = false;\r\n\t\t\tthis.viewport = new Vector4(0, 0, width, height);\r\n\t\t\tthis.texture = new Texture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\r\n\t\t\tthis.texture.isRenderTargetTexture = true;\r\n\t\t\tthis.texture.image = {\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height,\r\n\t\t\t\tdepth: 1\r\n\t\t\t};\r\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n\t\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\r\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\r\n\t\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\r\n\t\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\r\n\t\t}\r\n\r\n\t\tsetTexture(texture) {\r\n\t\t\ttexture.image = {\r\n\t\t\t\twidth: this.width,\r\n\t\t\t\theight: this.height,\r\n\t\t\t\tdepth: this.depth\r\n\t\t\t};\r\n\t\t\tthis.texture = texture;\r\n\t\t}\r\n\r\n\t\tsetSize(width, height, depth = 1) {\r\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\t\t\tthis.depth = depth;\r\n\t\t\t\tthis.texture.image.width = width;\r\n\t\t\t\tthis.texture.image.height = height;\r\n\t\t\t\tthis.texture.image.depth = depth;\r\n\t\t\t\tthis.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewport.set(0, 0, width, height);\r\n\t\t\tthis.scissor.set(0, 0, width, height);\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\t\tthis.depth = source.depth;\r\n\t\t\tthis.viewport.copy(source.viewport);\r\n\t\t\tthis.texture = source.texture.clone();\r\n\t\t\tthis.texture.image = { ...this.texture.image\r\n\t\t\t}; // See #20328.\r\n\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\t\tthis.depthTexture = source.depthTexture;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.dispatchEvent({\r\n\t\t\t\ttype: 'dispose'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\r\n\r\n\tclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\r\n\t\tconstructor(width, height, count) {\r\n\t\t\tsuper(width, height);\r\n\t\t\tconst texture = this.texture;\r\n\t\t\tthis.texture = [];\r\n\r\n\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\tthis.texture[i] = texture.clone();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetSize(width, height, depth = 1) {\r\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\t\t\tthis.depth = depth;\r\n\r\n\t\t\t\tfor (let i = 0, il = this.texture.length; i < il; i++) {\r\n\t\t\t\t\tthis.texture[i].image.width = width;\r\n\t\t\t\t\tthis.texture[i].image.height = height;\r\n\t\t\t\t\tthis.texture[i].image.depth = depth;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewport.set(0, 0, width, height);\r\n\t\t\tthis.scissor.set(0, 0, width, height);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.dispose();\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\t\tthis.depth = source.depth;\r\n\t\t\tthis.viewport.set(0, 0, this.width, this.height);\r\n\t\t\tthis.scissor.set(0, 0, this.width, this.height);\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\t\tthis.depthTexture = source.depthTexture;\r\n\t\t\tthis.texture.length = 0;\r\n\r\n\t\t\tfor (let i = 0, il = source.texture.length; i < il; i++) {\r\n\t\t\t\tthis.texture[i] = source.texture[i].clone();\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\r\n\r\n\tclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\r\n\t\tconstructor(width, height, options) {\r\n\t\t\tsuper(width, height, options);\r\n\t\t\tthis.samples = 4;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy.call(this, source);\r\n\t\t\tthis.samples = source.samples;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\r\n\r\n\tclass Quaternion {\r\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\t\t}\r\n\r\n\t\tstatic slerp(qa, qb, qm, t) {\r\n\t\t\tconsole.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');\r\n\t\t\treturn qm.slerpQuaternions(qa, qb, t);\r\n\t\t}\r\n\r\n\t\tstatic slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\r\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\t\t\tlet x0 = src0[srcOffset0 + 0],\r\n\t\t\t\t\ty0 = src0[srcOffset0 + 1],\r\n\t\t\t\t\tz0 = src0[srcOffset0 + 2],\r\n\t\t\t\t\tw0 = src0[srcOffset0 + 3];\r\n\t\t\tconst x1 = src1[srcOffset1 + 0],\r\n\t\t\t\t\t\ty1 = src1[srcOffset1 + 1],\r\n\t\t\t\t\t\tz1 = src1[srcOffset1 + 2],\r\n\t\t\t\t\t\tw1 = src1[srcOffset1 + 3];\r\n\r\n\t\t\tif (t === 0) {\r\n\t\t\t\tdst[dstOffset + 0] = x0;\r\n\t\t\t\tdst[dstOffset + 1] = y0;\r\n\t\t\t\tdst[dstOffset + 2] = z0;\r\n\t\t\t\tdst[dstOffset + 3] = w0;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (t === 1) {\r\n\t\t\t\tdst[dstOffset + 0] = x1;\r\n\t\t\t\tdst[dstOffset + 1] = y1;\r\n\t\t\t\tdst[dstOffset + 2] = z1;\r\n\t\t\t\tdst[dstOffset + 3] = w1;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\r\n\t\t\t\tlet s = 1 - t;\r\n\t\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\t\t\t\t\t\t\tdir = cos >= 0 ? 1 : -1,\r\n\t\t\t\t\t\t\tsqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\r\n\r\n\t\t\t\tif (sqrSin > Number.EPSILON) {\r\n\t\t\t\t\tconst sin = Math.sqrt(sqrSin),\r\n\t\t\t\t\t\t\t\tlen = Math.atan2(sin, cos * dir);\r\n\t\t\t\t\ts = Math.sin(s * len) / sin;\r\n\t\t\t\t\tt = Math.sin(t * len) / sin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst tDir = t * dir;\r\n\t\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\t\tw0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\r\n\r\n\t\t\t\tif (s === 1 - t) {\r\n\t\t\t\t\tconst f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\r\n\t\t\t\t\tx0 *= f;\r\n\t\t\t\t\ty0 *= f;\r\n\t\t\t\t\tz0 *= f;\r\n\t\t\t\t\tw0 *= f;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdst[dstOffset] = x0;\r\n\t\t\tdst[dstOffset + 1] = y0;\r\n\t\t\tdst[dstOffset + 2] = z0;\r\n\t\t\tdst[dstOffset + 3] = w0;\r\n\t\t}\r\n\r\n\t\tstatic multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\r\n\t\t\tconst x0 = src0[srcOffset0];\r\n\t\t\tconst y0 = src0[srcOffset0 + 1];\r\n\t\t\tconst z0 = src0[srcOffset0 + 2];\r\n\t\t\tconst w0 = src0[srcOffset0 + 3];\r\n\t\t\tconst x1 = src1[srcOffset1];\r\n\t\t\tconst y1 = src1[srcOffset1 + 1];\r\n\t\t\tconst z1 = src1[srcOffset1 + 2];\r\n\t\t\tconst w1 = src1[srcOffset1 + 3];\r\n\t\t\tdst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\r\n\t\t\tdst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\r\n\t\t\tdst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\r\n\t\t\tdst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\r\n\t\t\treturn dst;\r\n\t\t}\r\n\r\n\t\tget x() {\r\n\t\t\treturn this._x;\r\n\t\t}\r\n\r\n\t\tset x(value) {\r\n\t\t\tthis._x = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tget y() {\r\n\t\t\treturn this._y;\r\n\t\t}\r\n\r\n\t\tset y(value) {\r\n\t\t\tthis._y = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tget z() {\r\n\t\t\treturn this._z;\r\n\t\t}\r\n\r\n\t\tset z(value) {\r\n\t\t\tthis._z = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tget w() {\r\n\t\t\treturn this._w;\r\n\t\t}\r\n\r\n\t\tset w(value) {\r\n\t\t\tthis._w = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tset(x, y, z, w) {\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._w);\r\n\t\t}\r\n\r\n\t\tcopy(quaternion) {\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromEuler(euler, update) {\r\n\t\t\tif (!(euler && euler.isEuler)) {\r\n\t\t\t\tthrow new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\r\n\t\t\t}\r\n\r\n\t\t\tconst x = euler._x,\r\n\t\t\t\t\t\ty = euler._y,\r\n\t\t\t\t\t\tz = euler._z,\r\n\t\t\t\t\t\torder = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\t\tconst cos = Math.cos;\r\n\t\t\tconst sin = Math.sin;\r\n\t\t\tconst c1 = cos(x / 2);\r\n\t\t\tconst c2 = cos(y / 2);\r\n\t\t\tconst c3 = cos(z / 2);\r\n\t\t\tconst s1 = sin(x / 2);\r\n\t\t\tconst s2 = sin(y / 2);\r\n\t\t\tconst s3 = sin(z / 2);\r\n\r\n\t\t\tswitch (order) {\r\n\t\t\t\tcase 'XYZ':\r\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'YXZ':\r\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ZXY':\r\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ZYX':\r\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'YZX':\r\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'XZY':\r\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\r\n\t\t\t}\r\n\r\n\t\t\tif (update !== false) this._onChangeCallback();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromAxisAngle(axis, angle) {\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\t\t\t// assumes axis is normalized\r\n\t\t\tconst halfAngle = angle / 2,\r\n\t\t\t\t\t\ts = Math.sin(halfAngle);\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos(halfAngle);\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromRotationMatrix(m) {\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\t\tconst te = m.elements,\r\n\t\t\t\t\t\tm11 = te[0],\r\n\t\t\t\t\t\tm12 = te[4],\r\n\t\t\t\t\t\tm13 = te[8],\r\n\t\t\t\t\t\tm21 = te[1],\r\n\t\t\t\t\t\tm22 = te[5],\r\n\t\t\t\t\t\tm23 = te[9],\r\n\t\t\t\t\t\tm31 = te[2],\r\n\t\t\t\t\t\tm32 = te[6],\r\n\t\t\t\t\t\tm33 = te[10],\r\n\t\t\t\t\t\ttrace = m11 + m22 + m33;\r\n\r\n\t\t\tif (trace > 0) {\r\n\t\t\t\tconst s = 0.5 / Math.sqrt(trace + 1.0);\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = (m32 - m23) * s;\r\n\t\t\t\tthis._y = (m13 - m31) * s;\r\n\t\t\t\tthis._z = (m21 - m12) * s;\r\n\t\t\t} else if (m11 > m22 && m11 > m33) {\r\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n\t\t\t\tthis._w = (m32 - m23) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = (m12 + m21) / s;\r\n\t\t\t\tthis._z = (m13 + m31) / s;\r\n\t\t\t} else if (m22 > m33) {\r\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n\t\t\t\tthis._w = (m13 - m31) / s;\r\n\t\t\t\tthis._x = (m12 + m21) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = (m23 + m32) / s;\r\n\t\t\t} else {\r\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n\t\t\t\tthis._w = (m21 - m12) / s;\r\n\t\t\t\tthis._x = (m13 + m31) / s;\r\n\t\t\t\tthis._y = (m23 + m32) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\t\t\t}\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromUnitVectors(vFrom, vTo) {\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\t\t\tlet r = vFrom.dot(vTo) + 1;\r\n\r\n\t\t\tif (r < Number.EPSILON) {\r\n\t\t\t\t// vFrom and vTo point in opposite directions\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\r\n\t\t\t\t\tthis._x = -vFrom.y;\r\n\t\t\t\t\tthis._y = vFrom.x;\r\n\t\t\t\t\tthis._z = 0;\r\n\t\t\t\t\tthis._w = r;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = -vFrom.z;\r\n\t\t\t\t\tthis._z = vFrom.y;\r\n\t\t\t\t\tthis._w = r;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\r\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\r\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\r\n\t\t\t\tthis._w = r;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.normalize();\r\n\t\t}\r\n\r\n\t\tangleTo(q) {\r\n\t\t\treturn 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\r\n\t\t}\r\n\r\n\t\trotateTowards(q, step) {\r\n\t\t\tconst angle = this.angleTo(q);\r\n\t\t\tif (angle === 0) return this;\r\n\t\t\tconst t = Math.min(1, step / angle);\r\n\t\t\tthis.slerp(q, t);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tidentity() {\r\n\t\t\treturn this.set(0, 0, 0, 1);\r\n\t\t}\r\n\r\n\t\tinvert() {\r\n\t\t\t// quaternion is assumed to have unit length\r\n\t\t\treturn this.conjugate();\r\n\t\t}\r\n\r\n\t\tconjugate() {\r\n\t\t\tthis._x *= -1;\r\n\t\t\tthis._y *= -1;\r\n\t\t\tthis._z *= -1;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdot(v) {\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\t\t}\r\n\r\n\t\tlengthSq() {\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\t\t}\r\n\r\n\t\tlength() {\r\n\t\t\treturn Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\r\n\t\t}\r\n\r\n\t\tnormalize() {\r\n\t\t\tlet l = this.length();\r\n\r\n\t\t\tif (l === 0) {\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\t\t\t} else {\r\n\t\t\t\tl = 1 / l;\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\t\t\t}\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(q, p) {\r\n\t\t\tif (p !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\r\n\t\t\t\treturn this.multiplyQuaternions(q, p);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.multiplyQuaternions(this, q);\r\n\t\t}\r\n\r\n\t\tpremultiply(q) {\r\n\t\t\treturn this.multiplyQuaternions(q, this);\r\n\t\t}\r\n\r\n\t\tmultiplyQuaternions(a, b) {\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\t\t\tconst qax = a._x,\r\n\t\t\t\t\t\tqay = a._y,\r\n\t\t\t\t\t\tqaz = a._z,\r\n\t\t\t\t\t\tqaw = a._w;\r\n\t\t\tconst qbx = b._x,\r\n\t\t\t\t\t\tqby = b._y,\r\n\t\t\t\t\t\tqbz = b._z,\r\n\t\t\t\t\t\tqbw = b._w;\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tslerp(qb, t) {\r\n\t\t\tif (t === 0) return this;\r\n\t\t\tif (t === 1) return this.copy(qb);\r\n\t\t\tconst x = this._x,\r\n\t\t\t\t\t\ty = this._y,\r\n\t\t\t\t\t\tz = this._z,\r\n\t\t\t\t\t\tw = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\t\tif (cosHalfTheta < 0) {\r\n\t\t\t\tthis._w = -qb._w;\r\n\t\t\t\tthis._x = -qb._x;\r\n\t\t\t\tthis._y = -qb._y;\r\n\t\t\t\tthis._z = -qb._z;\r\n\t\t\t\tcosHalfTheta = -cosHalfTheta;\r\n\t\t\t} else {\r\n\t\t\t\tthis.copy(qb);\r\n\t\t\t}\r\n\r\n\t\t\tif (cosHalfTheta >= 1.0) {\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n\r\n\t\t\tif (sqrSinHalfTheta <= Number.EPSILON) {\r\n\t\t\t\tconst s = 1 - t;\r\n\t\t\t\tthis._w = s * w + t * this._w;\r\n\t\t\t\tthis._x = s * x + t * this._x;\r\n\t\t\t\tthis._y = s * y + t * this._y;\r\n\t\t\t\tthis._z = s * z + t * this._z;\r\n\t\t\t\tthis.normalize();\r\n\r\n\t\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tconst sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\r\n\t\t\tconst halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\r\n\t\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\r\n\t\t\t\t\t\tratioB = Math.sin(t * halfTheta) / sinHalfTheta;\r\n\t\t\tthis._w = w * ratioA + this._w * ratioB;\r\n\t\t\tthis._x = x * ratioA + this._x * ratioB;\r\n\t\t\tthis._y = y * ratioA + this._y * ratioB;\r\n\t\t\tthis._z = z * ratioA + this._z * ratioB;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tslerpQuaternions(qa, qb, t) {\r\n\t\t\tthis.copy(qa).slerp(qb, t);\r\n\t\t}\r\n\r\n\t\trandom() {\r\n\t\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\r\n\t\t\t// Note, this source uses w, x, y, z ordering,\r\n\t\t\t// so we swap the order below.\r\n\t\t\tconst u1 = Math.random();\r\n\t\t\tconst sqrt1u1 = Math.sqrt(1 - u1);\r\n\t\t\tconst sqrtu1 = Math.sqrt(u1);\r\n\t\t\tconst u2 = 2 * Math.PI * Math.random();\r\n\t\t\tconst u3 = 2 * Math.PI * Math.random();\r\n\t\t\treturn this.set(sqrt1u1 * Math.cos(u2), sqrtu1 * Math.sin(u3), sqrtu1 * Math.cos(u3), sqrt1u1 * Math.sin(u2));\r\n\t\t}\r\n\r\n\t\tequals(quaternion) {\r\n\t\t\treturn quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tthis._x = array[offset];\r\n\t\t\tthis._y = array[offset + 1];\r\n\t\t\tthis._z = array[offset + 2];\r\n\t\t\tthis._w = array[offset + 3];\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tarray[offset] = this._x;\r\n\t\t\tarray[offset + 1] = this._y;\r\n\t\t\tarray[offset + 2] = this._z;\r\n\t\t\tarray[offset + 3] = this._w;\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tfromBufferAttribute(attribute, index) {\r\n\t\t\tthis._x = attribute.getX(index);\r\n\t\t\tthis._y = attribute.getY(index);\r\n\t\t\tthis._z = attribute.getZ(index);\r\n\t\t\tthis._w = attribute.getW(index);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t_onChange(callback) {\r\n\t\t\tthis._onChangeCallback = callback;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t_onChangeCallback() {}\r\n\r\n\t}\r\n\r\n\tQuaternion.prototype.isQuaternion = true;\r\n\r\n\tclass Vector3 {\r\n\t\tconstructor(x = 0, y = 0, z = 0) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t}\r\n\r\n\t\tset(x, y, z) {\r\n\t\t\tif (z === undefined) z = this.z; // sprite.scale.set(x,y)\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetScalar(scalar) {\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\tthis.z = scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetX(x) {\r\n\t\t\tthis.x = x;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetY(y) {\r\n\t\t\tthis.y = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetZ(z) {\r\n\t\t\tthis.z = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetComponent(index, value) {\r\n\t\t\tswitch (index) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tthis.x = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.y = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.z = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetComponent(index) {\r\n\t\t\tswitch (index) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\treturn this.x;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn this.y;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\treturn this.z;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this.x, this.y, this.z);\r\n\t\t}\r\n\r\n\t\tcopy(v) {\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tadd(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\r\n\t\t\t\treturn this.addVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScalar(s) {\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddVectors(a, b) {\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScaledVector(v, s) {\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsub(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\r\n\t\t\t\treturn this.subVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsubScalar(s) {\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsubVectors(a, b) {\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\r\n\t\t\t\treturn this.multiplyVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyScalar(scalar) {\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyVectors(a, b) {\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyEuler(euler) {\r\n\t\t\tif (!(euler && euler.isEuler)) {\r\n\t\t\t\tconsole.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\r\n\t\t\t}\r\n\r\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromEuler(euler));\r\n\t\t}\r\n\r\n\t\tapplyAxisAngle(axis, angle) {\r\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\r\n\t\t}\r\n\r\n\t\tapplyMatrix3(m) {\r\n\t\t\tconst x = this.x,\r\n\t\t\t\t\t\ty = this.y,\r\n\t\t\t\t\t\tz = this.z;\r\n\t\t\tconst e = m.elements;\r\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\r\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\r\n\t\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyNormalMatrix(m) {\r\n\t\t\treturn this.applyMatrix3(m).normalize();\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(m) {\r\n\t\t\tconst x = this.x,\r\n\t\t\t\t\t\ty = this.y,\r\n\t\t\t\t\t\tz = this.z;\r\n\t\t\tconst e = m.elements;\r\n\t\t\tconst w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\r\n\t\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\r\n\t\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\r\n\t\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyQuaternion(q) {\r\n\t\t\tconst x = this.x,\r\n\t\t\t\t\t\ty = this.y,\r\n\t\t\t\t\t\tz = this.z;\r\n\t\t\tconst qx = q.x,\r\n\t\t\t\t\t\tqy = q.y,\r\n\t\t\t\t\t\tqz = q.z,\r\n\t\t\t\t\t\tqw = q.w; // calculate quat * vector\r\n\r\n\t\t\tconst ix = qw * x + qy * z - qz * y;\r\n\t\t\tconst iy = qw * y + qz * x - qx * z;\r\n\t\t\tconst iz = qw * z + qx * y - qy * x;\r\n\t\t\tconst iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\r\n\r\n\t\t\tthis.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n\t\t\tthis.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n\t\t\tthis.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tproject(camera) {\r\n\t\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\r\n\t\t}\r\n\r\n\t\tunproject(camera) {\r\n\t\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\r\n\t\t}\r\n\r\n\t\ttransformDirection(m) {\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\t\t\tconst x = this.x,\r\n\t\t\t\t\t\ty = this.y,\r\n\t\t\t\t\t\tz = this.z;\r\n\t\t\tconst e = m.elements;\r\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\r\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\r\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\r\n\t\t\treturn this.normalize();\r\n\t\t}\r\n\r\n\t\tdivide(v) {\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdivideScalar(scalar) {\r\n\t\t\treturn this.multiplyScalar(1 / scalar);\r\n\t\t}\r\n\r\n\t\tmin(v) {\r\n\t\t\tthis.x = Math.min(this.x, v.x);\r\n\t\t\tthis.y = Math.min(this.y, v.y);\r\n\t\t\tthis.z = Math.min(this.z, v.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmax(v) {\r\n\t\t\tthis.x = Math.max(this.x, v.x);\r\n\t\t\tthis.y = Math.max(this.y, v.y);\r\n\t\t\tthis.z = Math.max(this.z, v.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclamp(min, max) {\r\n\t\t\t// assumes min < max, componentwise\r\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\r\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\r\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclampScalar(minVal, maxVal) {\r\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\r\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\r\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclampLength(min, max) {\r\n\t\t\tconst length = this.length();\r\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\r\n\t\t}\r\n\r\n\t\tfloor() {\r\n\t\t\tthis.x = Math.floor(this.x);\r\n\t\t\tthis.y = Math.floor(this.y);\r\n\t\t\tthis.z = Math.floor(this.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tceil() {\r\n\t\t\tthis.x = Math.ceil(this.x);\r\n\t\t\tthis.y = Math.ceil(this.y);\r\n\t\t\tthis.z = Math.ceil(this.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tround() {\r\n\t\t\tthis.x = Math.round(this.x);\r\n\t\t\tthis.y = Math.round(this.y);\r\n\t\t\tthis.z = Math.round(this.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\troundToZero() {\r\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\r\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\r\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tnegate() {\r\n\t\t\tthis.x = -this.x;\r\n\t\t\tthis.y = -this.y;\r\n\t\t\tthis.z = -this.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdot(v) {\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t\t} // TODO lengthSquared?\r\n\r\n\r\n\t\tlengthSq() {\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t\t}\r\n\r\n\t\tlength() {\r\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n\t\t}\r\n\r\n\t\tmanhattanLength() {\r\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\r\n\t\t}\r\n\r\n\t\tnormalize() {\r\n\t\t\treturn this.divideScalar(this.length() || 1);\r\n\t\t}\r\n\r\n\t\tsetLength(length) {\r\n\t\t\treturn this.normalize().multiplyScalar(length);\r\n\t\t}\r\n\r\n\t\tlerp(v, alpha) {\r\n\t\t\tthis.x += (v.x - this.x) * alpha;\r\n\t\t\tthis.y += (v.y - this.y) * alpha;\r\n\t\t\tthis.z += (v.z - this.z) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerpVectors(v1, v2, alpha) {\r\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\r\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\r\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcross(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\r\n\t\t\t\treturn this.crossVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.crossVectors(this, v);\r\n\t\t}\r\n\r\n\t\tcrossVectors(a, b) {\r\n\t\t\tconst ax = a.x,\r\n\t\t\t\t\t\tay = a.y,\r\n\t\t\t\t\t\taz = a.z;\r\n\t\t\tconst bx = b.x,\r\n\t\t\t\t\t\tby = b.y,\r\n\t\t\t\t\t\tbz = b.z;\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tprojectOnVector(v) {\r\n\t\t\tconst denominator = v.lengthSq();\r\n\t\t\tif (denominator === 0) return this.set(0, 0, 0);\r\n\t\t\tconst scalar = v.dot(this) / denominator;\r\n\t\t\treturn this.copy(v).multiplyScalar(scalar);\r\n\t\t}\r\n\r\n\t\tprojectOnPlane(planeNormal) {\r\n\t\t\t_vector$c.copy(this).projectOnVector(planeNormal);\r\n\r\n\t\t\treturn this.sub(_vector$c);\r\n\t\t}\r\n\r\n\t\treflect(normal) {\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\t\t\treturn this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\r\n\t\t}\r\n\r\n\t\tangleTo(v) {\r\n\t\t\tconst denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\r\n\t\t\tif (denominator === 0) return Math.PI / 2;\r\n\t\t\tconst theta = this.dot(v) / denominator; // clamp, to handle numerical problems\r\n\r\n\t\t\treturn Math.acos(clamp(theta, -1, 1));\r\n\t\t}\r\n\r\n\t\tdistanceTo(v) {\r\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\r\n\t\t}\r\n\r\n\t\tdistanceToSquared(v) {\r\n\t\t\tconst dx = this.x - v.x,\r\n\t\t\t\t\t\tdy = this.y - v.y,\r\n\t\t\t\t\t\tdz = this.z - v.z;\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t\t}\r\n\r\n\t\tmanhattanDistanceTo(v) {\r\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\r\n\t\t}\r\n\r\n\t\tsetFromSpherical(s) {\r\n\t\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\r\n\t\t}\r\n\r\n\t\tsetFromSphericalCoords(radius, phi, theta) {\r\n\t\t\tconst sinPhiRadius = Math.sin(phi) * radius;\r\n\t\t\tthis.x = sinPhiRadius * Math.sin(theta);\r\n\t\t\tthis.y = Math.cos(phi) * radius;\r\n\t\t\tthis.z = sinPhiRadius * Math.cos(theta);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromCylindrical(c) {\r\n\t\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\r\n\t\t}\r\n\r\n\t\tsetFromCylindricalCoords(radius, theta, y) {\r\n\t\t\tthis.x = radius * Math.sin(theta);\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = radius * Math.cos(theta);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromMatrixPosition(m) {\r\n\t\t\tconst e = m.elements;\r\n\t\t\tthis.x = e[12];\r\n\t\t\tthis.y = e[13];\r\n\t\t\tthis.z = e[14];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromMatrixScale(m) {\r\n\t\t\tconst sx = this.setFromMatrixColumn(m, 0).length();\r\n\t\t\tconst sy = this.setFromMatrixColumn(m, 1).length();\r\n\t\t\tconst sz = this.setFromMatrixColumn(m, 2).length();\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromMatrixColumn(m, index) {\r\n\t\t\treturn this.fromArray(m.elements, index * 4);\r\n\t\t}\r\n\r\n\t\tsetFromMatrix3Column(m, index) {\r\n\t\t\treturn this.fromArray(m.elements, index * 3);\r\n\t\t}\r\n\r\n\t\tequals(v) {\r\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tthis.x = array[offset];\r\n\t\t\tthis.y = array[offset + 1];\r\n\t\t\tthis.z = array[offset + 2];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tarray[offset] = this.x;\r\n\t\t\tarray[offset + 1] = this.y;\r\n\t\t\tarray[offset + 2] = this.z;\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tfromBufferAttribute(attribute, index, offset) {\r\n\t\t\tif (offset !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX(index);\r\n\t\t\tthis.y = attribute.getY(index);\r\n\t\t\tthis.z = attribute.getZ(index);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trandom() {\r\n\t\t\tthis.x = Math.random();\r\n\t\t\tthis.y = Math.random();\r\n\t\t\tthis.z = Math.random();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trandomDirection() {\r\n\t\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\r\n\t\t\tconst u = (Math.random() - 0.5) * 2;\r\n\t\t\tconst t = Math.random() * Math.PI * 2;\r\n\t\t\tconst f = Math.sqrt(1 - u ** 2);\r\n\t\t\tthis.x = f * Math.cos(t);\r\n\t\t\tthis.y = f * Math.sin(t);\r\n\t\t\tthis.z = u;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t*[Symbol.iterator]() {\r\n\t\t\tyield this.x;\r\n\t\t\tyield this.y;\r\n\t\t\tyield this.z;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tVector3.prototype.isVector3 = true;\r\n\r\n\tconst _vector$c = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _quaternion$4 = /*@__PURE__*/new Quaternion();\r\n\r\n\tclass Box3 {\r\n\t\tconstructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {\r\n\t\t\tthis.min = min;\r\n\t\t\tthis.max = max;\r\n\t\t}\r\n\r\n\t\tset(min, max) {\r\n\t\t\tthis.min.copy(min);\r\n\t\t\tthis.max.copy(max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromArray(array) {\r\n\t\t\tlet minX = +Infinity;\r\n\t\t\tlet minY = +Infinity;\r\n\t\t\tlet minZ = +Infinity;\r\n\t\t\tlet maxX = -Infinity;\r\n\t\t\tlet maxY = -Infinity;\r\n\t\t\tlet maxZ = -Infinity;\r\n\r\n\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\r\n\t\t\t\tconst x = array[i];\r\n\t\t\t\tconst y = array[i + 1];\r\n\t\t\t\tconst z = array[i + 2];\r\n\t\t\t\tif (x < minX) minX = x;\r\n\t\t\t\tif (y < minY) minY = y;\r\n\t\t\t\tif (z < minZ) minZ = z;\r\n\t\t\t\tif (x > maxX) maxX = x;\r\n\t\t\t\tif (y > maxY) maxY = y;\r\n\t\t\t\tif (z > maxZ) maxZ = z;\r\n\t\t\t}\r\n\r\n\t\t\tthis.min.set(minX, minY, minZ);\r\n\t\t\tthis.max.set(maxX, maxY, maxZ);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromBufferAttribute(attribute) {\r\n\t\t\tlet minX = +Infinity;\r\n\t\t\tlet minY = +Infinity;\r\n\t\t\tlet minZ = +Infinity;\r\n\t\t\tlet maxX = -Infinity;\r\n\t\t\tlet maxY = -Infinity;\r\n\t\t\tlet maxZ = -Infinity;\r\n\r\n\t\t\tfor (let i = 0, l = attribute.count; i < l; i++) {\r\n\t\t\t\tconst x = attribute.getX(i);\r\n\t\t\t\tconst y = attribute.getY(i);\r\n\t\t\t\tconst z = attribute.getZ(i);\r\n\t\t\t\tif (x < minX) minX = x;\r\n\t\t\t\tif (y < minY) minY = y;\r\n\t\t\t\tif (z < minZ) minZ = z;\r\n\t\t\t\tif (x > maxX) maxX = x;\r\n\t\t\t\tif (y > maxY) maxY = y;\r\n\t\t\t\tif (z > maxZ) maxZ = z;\r\n\t\t\t}\r\n\r\n\t\t\tthis.min.set(minX, minY, minZ);\r\n\t\t\tthis.max.set(maxX, maxY, maxZ);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromPoints(points) {\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\r\n\t\t\t\tthis.expandByPoint(points[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromCenterAndSize(center, size) {\r\n\t\t\tconst halfSize = _vector$b.copy(size).multiplyScalar(0.5);\r\n\r\n\t\t\tthis.min.copy(center).sub(halfSize);\r\n\t\t\tthis.max.copy(center).add(halfSize);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromObject(object) {\r\n\t\t\tthis.makeEmpty();\r\n\t\t\treturn this.expandByObject(object);\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(box) {\r\n\t\t\tthis.min.copy(box.min);\r\n\t\t\tthis.max.copy(box.max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeEmpty() {\r\n\t\t\tthis.min.x = this.min.y = this.min.z = +Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = -Infinity;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tisEmpty() {\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\r\n\t\t}\r\n\r\n\t\tgetCenter(target) {\r\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\r\n\t\t}\r\n\r\n\t\tgetSize(target) {\r\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\r\n\t\t}\r\n\r\n\t\texpandByPoint(point) {\r\n\t\t\tthis.min.min(point);\r\n\t\t\tthis.max.max(point);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\texpandByVector(vector) {\r\n\t\t\tthis.min.sub(vector);\r\n\t\t\tthis.max.add(vector);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\texpandByScalar(scalar) {\r\n\t\t\tthis.min.addScalar(-scalar);\r\n\t\t\tthis.max.addScalar(scalar);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\texpandByObject(object) {\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\t\t\tobject.updateWorldMatrix(false, false);\r\n\t\t\tconst geometry = object.geometry;\r\n\r\n\t\t\tif (geometry !== undefined) {\r\n\t\t\t\tif (geometry.boundingBox === null) {\r\n\t\t\t\t\tgeometry.computeBoundingBox();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_box$3.copy(geometry.boundingBox);\r\n\r\n\t\t\t\t_box$3.applyMatrix4(object.matrixWorld);\r\n\r\n\t\t\t\tthis.union(_box$3);\r\n\t\t\t}\r\n\r\n\t\t\tconst children = object.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tthis.expandByObject(children[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcontainsPoint(point) {\r\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\r\n\t\t}\r\n\r\n\t\tcontainsBox(box) {\r\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\r\n\t\t}\r\n\r\n\t\tgetParameter(point, target) {\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\r\n\t\t}\r\n\r\n\t\tintersectsSphere(sphere) {\r\n\t\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\t\tthis.clampPoint(sphere.center, _vector$b); // If that point is inside the sphere, the AABB and sphere intersect.\r\n\r\n\t\t\treturn _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\r\n\t\t}\r\n\r\n\t\tintersectsPlane(plane) {\r\n\t\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\t\t\tlet min, max;\r\n\r\n\t\t\tif (plane.normal.x > 0) {\r\n\t\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\t\tmax = plane.normal.x * this.max.x;\r\n\t\t\t} else {\r\n\t\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\t\tmax = plane.normal.x * this.min.x;\r\n\t\t\t}\r\n\r\n\t\t\tif (plane.normal.y > 0) {\r\n\t\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\t\tmax += plane.normal.y * this.max.y;\r\n\t\t\t} else {\r\n\t\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\t\tmax += plane.normal.y * this.min.y;\r\n\t\t\t}\r\n\r\n\t\t\tif (plane.normal.z > 0) {\r\n\t\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\t\tmax += plane.normal.z * this.max.z;\r\n\t\t\t} else {\r\n\t\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\t\tmax += plane.normal.z * this.min.z;\r\n\t\t\t}\r\n\r\n\t\t\treturn min <= -plane.constant && max >= -plane.constant;\r\n\t\t}\r\n\r\n\t\tintersectsTriangle(triangle) {\r\n\t\t\tif (this.isEmpty()) {\r\n\t\t\t\treturn false;\r\n\t\t\t} // compute box center and extents\r\n\r\n\r\n\t\t\tthis.getCenter(_center);\r\n\r\n\t\t\t_extents.subVectors(this.max, _center); // translate triangle to aabb origin\r\n\r\n\r\n\t\t\t_v0$2.subVectors(triangle.a, _center);\r\n\r\n\t\t\t_v1$7.subVectors(triangle.b, _center);\r\n\r\n\t\t\t_v2$3.subVectors(triangle.c, _center); // compute edge vectors for triangle\r\n\r\n\r\n\t\t\t_f0.subVectors(_v1$7, _v0$2);\r\n\r\n\t\t\t_f1.subVectors(_v2$3, _v1$7);\r\n\r\n\t\t\t_f2.subVectors(_v0$2, _v2$3); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\r\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\r\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\r\n\r\n\r\n\t\t\tlet axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\r\n\r\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\r\n\t\t\t\treturn false;\r\n\t\t\t} // test 3 face normals from the aabb\r\n\r\n\r\n\t\t\taxes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n\r\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\r\n\t\t\t\treturn false;\r\n\t\t\t} // finally testing the face normal of the triangle\r\n\t\t\t// use already existing triangle edge vectors here\r\n\r\n\r\n\t\t\t_triangleNormal.crossVectors(_f0, _f1);\r\n\r\n\t\t\taxes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\r\n\t\t\treturn satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents);\r\n\t\t}\r\n\r\n\t\tclampPoint(point, target) {\r\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\r\n\t\t}\r\n\r\n\t\tdistanceToPoint(point) {\r\n\t\t\tconst clampedPoint = _vector$b.copy(point).clamp(this.min, this.max);\r\n\r\n\t\t\treturn clampedPoint.sub(point).length();\r\n\t\t}\r\n\r\n\t\tgetBoundingSphere(target) {\r\n\t\t\tthis.getCenter(target.center);\r\n\t\t\ttarget.radius = this.getSize(_vector$b).length() * 0.5;\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tintersect(box) {\r\n\t\t\tthis.min.max(box.min);\r\n\t\t\tthis.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\r\n\t\t\tif (this.isEmpty()) this.makeEmpty();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tunion(box) {\r\n\t\t\tthis.min.min(box.min);\r\n\t\t\tthis.max.max(box.max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(matrix) {\r\n\t\t\t// transform of empty box is an empty box.\r\n\t\t\tif (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\r\n\t\t\t_points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\r\n\r\n\r\n\t\t\t_points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\r\n\r\n\r\n\t\t\t_points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\r\n\r\n\r\n\t\t\t_points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\r\n\r\n\r\n\t\t\t_points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\r\n\r\n\r\n\t\t\t_points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\r\n\r\n\r\n\t\t\t_points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\r\n\r\n\r\n\t\t\t_points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\r\n\r\n\r\n\t\t\tthis.setFromPoints(_points);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslate(offset) {\r\n\t\t\tthis.min.add(offset);\r\n\t\t\tthis.max.add(offset);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(box) {\r\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBox3.prototype.isBox3 = true;\r\n\tconst _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\r\n\r\n\tconst _vector$b = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _box$3 = /*@__PURE__*/new Box3(); // triangle centered vertices\r\n\r\n\r\n\tconst _v0$2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v1$7 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v2$3 = /*@__PURE__*/new Vector3(); // triangle edge vectors\r\n\r\n\r\n\tconst _f0 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _f1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _f2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _center = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _extents = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _triangleNormal = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _testAxis = /*@__PURE__*/new Vector3();\r\n\r\n\tfunction satForAxes(axes, v0, v1, v2, extents) {\r\n\t\tfor (let i = 0, j = axes.length - 3; i <= j; i += 3) {\r\n\t\t\t_testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\r\n\r\n\r\n\t\t\tconst r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\r\n\r\n\t\t\tconst p0 = v0.dot(_testAxis);\r\n\t\t\tconst p1 = v1.dot(_testAxis);\r\n\t\t\tconst p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\r\n\r\n\t\t\tif (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\r\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\r\n\t\t\t\t// the axis is seperating and we can exit\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst _box$2 = /*@__PURE__*/new Box3();\r\n\r\n\tconst _v1$6 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _toFarthestPoint = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _toPoint = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Sphere {\r\n\t\tconstructor(center = new Vector3(), radius = -1) {\r\n\t\t\tthis.center = center;\r\n\t\t\tthis.radius = radius;\r\n\t\t}\r\n\r\n\t\tset(center, radius) {\r\n\t\t\tthis.center.copy(center);\r\n\t\t\tthis.radius = radius;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromPoints(points, optionalCenter) {\r\n\t\t\tconst center = this.center;\r\n\r\n\t\t\tif (optionalCenter !== undefined) {\r\n\t\t\t\tcenter.copy(optionalCenter);\r\n\t\t\t} else {\r\n\t\t\t\t_box$2.setFromPoints(points).getCenter(center);\r\n\t\t\t}\r\n\r\n\t\t\tlet maxRadiusSq = 0;\r\n\r\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\r\n\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt(maxRadiusSq);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(sphere) {\r\n\t\t\tthis.center.copy(sphere.center);\r\n\t\t\tthis.radius = sphere.radius;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tisEmpty() {\r\n\t\t\treturn this.radius < 0;\r\n\t\t}\r\n\r\n\t\tmakeEmpty() {\r\n\t\t\tthis.center.set(0, 0, 0);\r\n\t\t\tthis.radius = -1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcontainsPoint(point) {\r\n\t\t\treturn point.distanceToSquared(this.center) <= this.radius * this.radius;\r\n\t\t}\r\n\r\n\t\tdistanceToPoint(point) {\r\n\t\t\treturn point.distanceTo(this.center) - this.radius;\r\n\t\t}\r\n\r\n\t\tintersectsSphere(sphere) {\r\n\t\t\tconst radiusSum = this.radius + sphere.radius;\r\n\t\t\treturn sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\treturn box.intersectsSphere(this);\r\n\t\t}\r\n\r\n\t\tintersectsPlane(plane) {\r\n\t\t\treturn Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\r\n\t\t}\r\n\r\n\t\tclampPoint(point, target) {\r\n\t\t\tconst deltaLengthSq = this.center.distanceToSquared(point);\r\n\t\t\ttarget.copy(point);\r\n\r\n\t\t\tif (deltaLengthSq > this.radius * this.radius) {\r\n\t\t\t\ttarget.sub(this.center).normalize();\r\n\t\t\t\ttarget.multiplyScalar(this.radius).add(this.center);\r\n\t\t\t}\r\n\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tgetBoundingBox(target) {\r\n\t\t\tif (this.isEmpty()) {\r\n\t\t\t\t// Empty sphere produces empty bounding box\r\n\t\t\t\ttarget.makeEmpty();\r\n\t\t\t\treturn target;\r\n\t\t\t}\r\n\r\n\t\t\ttarget.set(this.center, this.center);\r\n\t\t\ttarget.expandByScalar(this.radius);\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(matrix) {\r\n\t\t\tthis.center.applyMatrix4(matrix);\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslate(offset) {\r\n\t\t\tthis.center.add(offset);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\texpandByPoint(point) {\r\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\r\n\t\t\t_toPoint.subVectors(point, this.center);\r\n\r\n\t\t\tconst lengthSq = _toPoint.lengthSq();\r\n\r\n\t\t\tif (lengthSq > this.radius * this.radius) {\r\n\t\t\t\tconst length = Math.sqrt(lengthSq);\r\n\t\t\t\tconst missingRadiusHalf = (length - this.radius) * 0.5; // Nudge this sphere towards the target point. Add half the missing distance to radius,\r\n\t\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\r\n\t\t\t\t// the whole missing distance were just added to radius.\r\n\r\n\t\t\t\tthis.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\r\n\t\t\t\tthis.radius += missingRadiusHalf;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tunion(sphere) {\r\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\r\n\t\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\r\n\t\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\r\n\t\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\r\n\t\t\t_toFarthestPoint.subVectors(sphere.center, this.center).normalize().multiplyScalar(sphere.radius);\r\n\r\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));\r\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(sphere) {\r\n\t\t\treturn sphere.center.equals(this.center) && sphere.radius === this.radius;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _vector$a = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _segCenter = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _segDir = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _diff = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _edge1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _edge2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _normal$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Ray {\r\n\t\tconstructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {\r\n\t\t\tthis.origin = origin;\r\n\t\t\tthis.direction = direction;\r\n\t\t}\r\n\r\n\t\tset(origin, direction) {\r\n\t\t\tthis.origin.copy(origin);\r\n\t\t\tthis.direction.copy(direction);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(ray) {\r\n\t\t\tthis.origin.copy(ray.origin);\r\n\t\t\tthis.direction.copy(ray.direction);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tat(t, target) {\r\n\t\t\treturn target.copy(this.direction).multiplyScalar(t).add(this.origin);\r\n\t\t}\r\n\r\n\t\tlookAt(v) {\r\n\t\t\tthis.direction.copy(v).sub(this.origin).normalize();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trecast(t) {\r\n\t\t\tthis.origin.copy(this.at(t, _vector$a));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclosestPointToPoint(point, target) {\r\n\t\t\ttarget.subVectors(point, this.origin);\r\n\t\t\tconst directionDistance = target.dot(this.direction);\r\n\r\n\t\t\tif (directionDistance < 0) {\r\n\t\t\t\treturn target.copy(this.origin);\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\r\n\t\t}\r\n\r\n\t\tdistanceToPoint(point) {\r\n\t\t\treturn Math.sqrt(this.distanceSqToPoint(point));\r\n\t\t}\r\n\r\n\t\tdistanceSqToPoint(point) {\r\n\t\t\tconst directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction); // point behind the ray\r\n\r\n\r\n\t\t\tif (directionDistance < 0) {\r\n\t\t\t\treturn this.origin.distanceToSquared(point);\r\n\t\t\t}\r\n\r\n\t\t\t_vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\r\n\r\n\t\t\treturn _vector$a.distanceToSquared(point);\r\n\t\t}\r\n\r\n\t\tdistanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\r\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\t\t\t_segCenter.copy(v0).add(v1).multiplyScalar(0.5);\r\n\r\n\t\t\t_segDir.copy(v1).sub(v0).normalize();\r\n\r\n\t\t\t_diff.copy(this.origin).sub(_segCenter);\r\n\r\n\t\t\tconst segExtent = v0.distanceTo(v1) * 0.5;\r\n\t\t\tconst a01 = -this.direction.dot(_segDir);\r\n\r\n\t\t\tconst b0 = _diff.dot(this.direction);\r\n\r\n\t\t\tconst b1 = -_diff.dot(_segDir);\r\n\r\n\t\t\tconst c = _diff.lengthSq();\r\n\r\n\t\t\tconst det = Math.abs(1 - a01 * a01);\r\n\t\t\tlet s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif (det > 0) {\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif (s0 >= 0) {\r\n\t\t\t\t\tif (s1 >= -extDet) {\r\n\t\t\t\t\t\tif (s1 <= extDet) {\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\t\t\t\t\t\t\tconst invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// region 1\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\r\n\t\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// region 5\r\n\t\t\t\t\t\ts1 = -segExtent;\r\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\r\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (s1 <= -extDet) {\r\n\t\t\t\t\t\t// region 4\r\n\t\t\t\t\t\ts0 = Math.max(0, -(-a01 * segExtent + b0));\r\n\t\t\t\t\t\ts1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\r\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n\t\t\t\t\t} else if (s1 <= extDet) {\r\n\t\t\t\t\t\t// region 3\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min(Math.max(-segExtent, -b1), segExtent);\r\n\t\t\t\t\t\tsqrDist = s1 * (s1 + 2 * b1) + c;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// region 2\r\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * segExtent + b0));\r\n\t\t\t\t\t\ts1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\r\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Ray and segment are parallel.\r\n\t\t\t\ts1 = a01 > 0 ? -segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\r\n\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n\t\t\t}\r\n\r\n\t\t\tif (optionalPointOnRay) {\r\n\t\t\t\toptionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\r\n\t\t\t}\r\n\r\n\t\t\tif (optionalPointOnSegment) {\r\n\t\t\t\toptionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\t\t}\r\n\r\n\t\tintersectSphere(sphere, target) {\r\n\t\t\t_vector$a.subVectors(sphere.center, this.origin);\r\n\r\n\t\t\tconst tca = _vector$a.dot(this.direction);\r\n\r\n\t\t\tconst d2 = _vector$a.dot(_vector$a) - tca * tca;\r\n\t\t\tconst radius2 = sphere.radius * sphere.radius;\r\n\t\t\tif (d2 > radius2) return null;\r\n\t\t\tconst thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\r\n\r\n\t\t\tconst t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\r\n\r\n\t\t\tconst t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\r\n\r\n\t\t\tif (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\r\n\t\t\tif (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\r\n\t\t\treturn this.at(t0, target);\r\n\t\t}\r\n\r\n\t\tintersectsSphere(sphere) {\r\n\t\t\treturn this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\r\n\t\t}\r\n\r\n\t\tdistanceToPlane(plane) {\r\n\t\t\tconst denominator = plane.normal.dot(this.direction);\r\n\r\n\t\t\tif (denominator === 0) {\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif (plane.distanceToPoint(this.origin) === 0) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t} // Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\r\n\r\n\t\t\treturn t >= 0 ? t : null;\r\n\t\t}\r\n\r\n\t\tintersectPlane(plane, target) {\r\n\t\t\tconst t = this.distanceToPlane(plane);\r\n\r\n\t\t\tif (t === null) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.at(t, target);\r\n\t\t}\r\n\r\n\t\tintersectsPlane(plane) {\r\n\t\t\t// check if the ray lies on the plane first\r\n\t\t\tconst distToPoint = plane.distanceToPoint(this.origin);\r\n\r\n\t\t\tif (distToPoint === 0) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tconst denominator = plane.normal.dot(this.direction);\r\n\r\n\t\t\tif (denominator * distToPoint < 0) {\r\n\t\t\t\treturn true;\r\n\t\t\t} // ray origin is behind the plane (and is pointing behind it)\r\n\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tintersectBox(box, target) {\r\n\t\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\t\t\tconst invdirx = 1 / this.direction.x,\r\n\t\t\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\t\t\tconst origin = this.origin;\r\n\r\n\t\t\tif (invdirx >= 0) {\r\n\t\t\t\ttmin = (box.min.x - origin.x) * invdirx;\r\n\t\t\t\ttmax = (box.max.x - origin.x) * invdirx;\r\n\t\t\t} else {\r\n\t\t\t\ttmin = (box.max.x - origin.x) * invdirx;\r\n\t\t\t\ttmax = (box.min.x - origin.x) * invdirx;\r\n\t\t\t}\r\n\r\n\t\t\tif (invdiry >= 0) {\r\n\t\t\t\ttymin = (box.min.y - origin.y) * invdiry;\r\n\t\t\t\ttymax = (box.max.y - origin.y) * invdiry;\r\n\t\t\t} else {\r\n\t\t\t\ttymin = (box.max.y - origin.y) * invdiry;\r\n\t\t\t\ttymax = (box.min.y - origin.y) * invdiry;\r\n\t\t\t}\r\n\r\n\t\t\tif (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\t\tif (tymin > tmin || tmin !== tmin) tmin = tymin;\r\n\t\t\tif (tymax < tmax || tmax !== tmax) tmax = tymax;\r\n\r\n\t\t\tif (invdirz >= 0) {\r\n\t\t\t\ttzmin = (box.min.z - origin.z) * invdirz;\r\n\t\t\t\ttzmax = (box.max.z - origin.z) * invdirz;\r\n\t\t\t} else {\r\n\t\t\t\ttzmin = (box.max.z - origin.z) * invdirz;\r\n\t\t\t\ttzmax = (box.min.z - origin.z) * invdirz;\r\n\t\t\t}\r\n\r\n\t\t\tif (tmin > tzmax || tzmin > tmax) return null;\r\n\t\t\tif (tzmin > tmin || tmin !== tmin) tmin = tzmin;\r\n\t\t\tif (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\r\n\r\n\t\t\tif (tmax < 0) return null;\r\n\t\t\treturn this.at(tmin >= 0 ? tmin : tmax, target);\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\treturn this.intersectBox(box, _vector$a) !== null;\r\n\t\t}\r\n\r\n\t\tintersectTriangle(a, b, c, backfaceCulling, target) {\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\t\t\t_edge1.subVectors(b, a);\r\n\r\n\t\t\t_edge2.subVectors(c, a);\r\n\r\n\t\t\t_normal$1.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//\t |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//\t |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//\t |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\r\n\r\n\t\t\tlet DdN = this.direction.dot(_normal$1);\r\n\t\t\tlet sign;\r\n\r\n\t\t\tif (DdN > 0) {\r\n\t\t\t\tif (backfaceCulling) return null;\r\n\t\t\t\tsign = 1;\r\n\t\t\t} else if (DdN < 0) {\r\n\t\t\t\tsign = -1;\r\n\t\t\t\tDdN = -DdN;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t_diff.subVectors(this.origin, a);\r\n\r\n\t\t\tconst DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\r\n\r\n\t\t\tif (DdQxE2 < 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\r\n\r\n\t\t\tif (DdE1xQ < 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t} // b1+b2 > 1, no intersection\r\n\r\n\r\n\t\t\tif (DdQxE2 + DdE1xQ > DdN) {\r\n\t\t\t\treturn null;\r\n\t\t\t} // Line intersects triangle, check if ray does.\r\n\r\n\r\n\t\t\tconst QdN = -sign * _diff.dot(_normal$1); // t < 0, no intersection\r\n\r\n\r\n\t\t\tif (QdN < 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t} // Ray intersects triangle.\r\n\r\n\r\n\t\t\treturn this.at(QdN / DdN, target);\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(matrix4) {\r\n\t\t\tthis.origin.applyMatrix4(matrix4);\r\n\t\t\tthis.direction.transformDirection(matrix4);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(ray) {\r\n\t\t\treturn ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Matrix4 {\r\n\t\tconstructor() {\r\n\t\t\tthis.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n\t\t\tif (arguments.length > 0) {\r\n\t\t\t\tconsole.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tset(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tte[0] = n11;\r\n\t\t\tte[4] = n12;\r\n\t\t\tte[8] = n13;\r\n\t\t\tte[12] = n14;\r\n\t\t\tte[1] = n21;\r\n\t\t\tte[5] = n22;\r\n\t\t\tte[9] = n23;\r\n\t\t\tte[13] = n24;\r\n\t\t\tte[2] = n31;\r\n\t\t\tte[6] = n32;\r\n\t\t\tte[10] = n33;\r\n\t\t\tte[14] = n34;\r\n\t\t\tte[3] = n41;\r\n\t\t\tte[7] = n42;\r\n\t\t\tte[11] = n43;\r\n\t\t\tte[15] = n44;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tidentity() {\r\n\t\t\tthis.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Matrix4().fromArray(this.elements);\r\n\t\t}\r\n\r\n\t\tcopy(m) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst me = m.elements;\r\n\t\t\tte[0] = me[0];\r\n\t\t\tte[1] = me[1];\r\n\t\t\tte[2] = me[2];\r\n\t\t\tte[3] = me[3];\r\n\t\t\tte[4] = me[4];\r\n\t\t\tte[5] = me[5];\r\n\t\t\tte[6] = me[6];\r\n\t\t\tte[7] = me[7];\r\n\t\t\tte[8] = me[8];\r\n\t\t\tte[9] = me[9];\r\n\t\t\tte[10] = me[10];\r\n\t\t\tte[11] = me[11];\r\n\t\t\tte[12] = me[12];\r\n\t\t\tte[13] = me[13];\r\n\t\t\tte[14] = me[14];\r\n\t\t\tte[15] = me[15];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyPosition(m) {\r\n\t\t\tconst te = this.elements,\r\n\t\t\t\t\t\tme = m.elements;\r\n\t\t\tte[12] = me[12];\r\n\t\t\tte[13] = me[13];\r\n\t\t\tte[14] = me[14];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromMatrix3(m) {\r\n\t\t\tconst me = m.elements;\r\n\t\t\tthis.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\textractBasis(xAxis, yAxis, zAxis) {\r\n\t\t\txAxis.setFromMatrixColumn(this, 0);\r\n\t\t\tyAxis.setFromMatrixColumn(this, 1);\r\n\t\t\tzAxis.setFromMatrixColumn(this, 2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeBasis(xAxis, yAxis, zAxis) {\r\n\t\t\tthis.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\textractRotation(m) {\r\n\t\t\t// this method does not support reflection matrices\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst me = m.elements;\r\n\r\n\t\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\r\n\r\n\t\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\r\n\r\n\t\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\r\n\r\n\t\t\tte[0] = me[0] * scaleX;\r\n\t\t\tte[1] = me[1] * scaleX;\r\n\t\t\tte[2] = me[2] * scaleX;\r\n\t\t\tte[3] = 0;\r\n\t\t\tte[4] = me[4] * scaleY;\r\n\t\t\tte[5] = me[5] * scaleY;\r\n\t\t\tte[6] = me[6] * scaleY;\r\n\t\t\tte[7] = 0;\r\n\t\t\tte[8] = me[8] * scaleZ;\r\n\t\t\tte[9] = me[9] * scaleZ;\r\n\t\t\tte[10] = me[10] * scaleZ;\r\n\t\t\tte[11] = 0;\r\n\t\t\tte[12] = 0;\r\n\t\t\tte[13] = 0;\r\n\t\t\tte[14] = 0;\r\n\t\t\tte[15] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeRotationFromEuler(euler) {\r\n\t\t\tif (!(euler && euler.isEuler)) {\r\n\t\t\t\tconsole.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\r\n\t\t\t}\r\n\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst x = euler.x,\r\n\t\t\t\t\t\ty = euler.y,\r\n\t\t\t\t\t\tz = euler.z;\r\n\t\t\tconst a = Math.cos(x),\r\n\t\t\t\t\t\tb = Math.sin(x);\r\n\t\t\tconst c = Math.cos(y),\r\n\t\t\t\t\t\td = Math.sin(y);\r\n\t\t\tconst e = Math.cos(z),\r\n\t\t\t\t\t\tf = Math.sin(z);\r\n\r\n\t\t\tif (euler.order === 'XYZ') {\r\n\t\t\t\tconst ae = a * e,\r\n\t\t\t\t\t\t\taf = a * f,\r\n\t\t\t\t\t\t\tbe = b * e,\r\n\t\t\t\t\t\t\tbf = b * f;\r\n\t\t\t\tte[0] = c * e;\r\n\t\t\t\tte[4] = -c * f;\r\n\t\t\t\tte[8] = d;\r\n\t\t\t\tte[1] = af + be * d;\r\n\t\t\t\tte[5] = ae - bf * d;\r\n\t\t\t\tte[9] = -b * c;\r\n\t\t\t\tte[2] = bf - ae * d;\r\n\t\t\t\tte[6] = be + af * d;\r\n\t\t\t\tte[10] = a * c;\r\n\t\t\t} else if (euler.order === 'YXZ') {\r\n\t\t\t\tconst ce = c * e,\r\n\t\t\t\t\t\t\tcf = c * f,\r\n\t\t\t\t\t\t\tde = d * e,\r\n\t\t\t\t\t\t\tdf = d * f;\r\n\t\t\t\tte[0] = ce + df * b;\r\n\t\t\t\tte[4] = de * b - cf;\r\n\t\t\t\tte[8] = a * d;\r\n\t\t\t\tte[1] = a * f;\r\n\t\t\t\tte[5] = a * e;\r\n\t\t\t\tte[9] = -b;\r\n\t\t\t\tte[2] = cf * b - de;\r\n\t\t\t\tte[6] = df + ce * b;\r\n\t\t\t\tte[10] = a * c;\r\n\t\t\t} else if (euler.order === 'ZXY') {\r\n\t\t\t\tconst ce = c * e,\r\n\t\t\t\t\t\t\tcf = c * f,\r\n\t\t\t\t\t\t\tde = d * e,\r\n\t\t\t\t\t\t\tdf = d * f;\r\n\t\t\t\tte[0] = ce - df * b;\r\n\t\t\t\tte[4] = -a * f;\r\n\t\t\t\tte[8] = de + cf * b;\r\n\t\t\t\tte[1] = cf + de * b;\r\n\t\t\t\tte[5] = a * e;\r\n\t\t\t\tte[9] = df - ce * b;\r\n\t\t\t\tte[2] = -a * d;\r\n\t\t\t\tte[6] = b;\r\n\t\t\t\tte[10] = a * c;\r\n\t\t\t} else if (euler.order === 'ZYX') {\r\n\t\t\t\tconst ae = a * e,\r\n\t\t\t\t\t\t\taf = a * f,\r\n\t\t\t\t\t\t\tbe = b * e,\r\n\t\t\t\t\t\t\tbf = b * f;\r\n\t\t\t\tte[0] = c * e;\r\n\t\t\t\tte[4] = be * d - af;\r\n\t\t\t\tte[8] = ae * d + bf;\r\n\t\t\t\tte[1] = c * f;\r\n\t\t\t\tte[5] = bf * d + ae;\r\n\t\t\t\tte[9] = af * d - be;\r\n\t\t\t\tte[2] = -d;\r\n\t\t\t\tte[6] = b * c;\r\n\t\t\t\tte[10] = a * c;\r\n\t\t\t} else if (euler.order === 'YZX') {\r\n\t\t\t\tconst ac = a * c,\r\n\t\t\t\t\t\t\tad = a * d,\r\n\t\t\t\t\t\t\tbc = b * c,\r\n\t\t\t\t\t\t\tbd = b * d;\r\n\t\t\t\tte[0] = c * e;\r\n\t\t\t\tte[4] = bd - ac * f;\r\n\t\t\t\tte[8] = bc * f + ad;\r\n\t\t\t\tte[1] = f;\r\n\t\t\t\tte[5] = a * e;\r\n\t\t\t\tte[9] = -b * e;\r\n\t\t\t\tte[2] = -d * e;\r\n\t\t\t\tte[6] = ad * f + bc;\r\n\t\t\t\tte[10] = ac - bd * f;\r\n\t\t\t} else if (euler.order === 'XZY') {\r\n\t\t\t\tconst ac = a * c,\r\n\t\t\t\t\t\t\tad = a * d,\r\n\t\t\t\t\t\t\tbc = b * c,\r\n\t\t\t\t\t\t\tbd = b * d;\r\n\t\t\t\tte[0] = c * e;\r\n\t\t\t\tte[4] = -f;\r\n\t\t\t\tte[8] = d * e;\r\n\t\t\t\tte[1] = ac * f + bd;\r\n\t\t\t\tte[5] = a * e;\r\n\t\t\t\tte[9] = ad * f - bc;\r\n\t\t\t\tte[2] = bc * f - ad;\r\n\t\t\t\tte[6] = b * e;\r\n\t\t\t\tte[10] = bd * f + ac;\r\n\t\t\t} // bottom row\r\n\r\n\r\n\t\t\tte[3] = 0;\r\n\t\t\tte[7] = 0;\r\n\t\t\tte[11] = 0; // last column\r\n\r\n\t\t\tte[12] = 0;\r\n\t\t\tte[13] = 0;\r\n\t\t\tte[14] = 0;\r\n\t\t\tte[15] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeRotationFromQuaternion(q) {\r\n\t\t\treturn this.compose(_zero, q, _one);\r\n\t\t}\r\n\r\n\t\tlookAt(eye, target, up) {\r\n\t\t\tconst te = this.elements;\r\n\r\n\t\t\t_z.subVectors(eye, target);\r\n\r\n\t\t\tif (_z.lengthSq() === 0) {\r\n\t\t\t\t// eye and target are in the same position\r\n\t\t\t\t_z.z = 1;\r\n\t\t\t}\r\n\r\n\t\t\t_z.normalize();\r\n\r\n\t\t\t_x.crossVectors(up, _z);\r\n\r\n\t\t\tif (_x.lengthSq() === 0) {\r\n\t\t\t\t// up and z are parallel\r\n\t\t\t\tif (Math.abs(up.z) === 1) {\r\n\t\t\t\t\t_z.x += 0.0001;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_z.z += 0.0001;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_z.normalize();\r\n\r\n\t\t\t\t_x.crossVectors(up, _z);\r\n\t\t\t}\r\n\r\n\t\t\t_x.normalize();\r\n\r\n\t\t\t_y.crossVectors(_z, _x);\r\n\r\n\t\t\tte[0] = _x.x;\r\n\t\t\tte[4] = _y.x;\r\n\t\t\tte[8] = _z.x;\r\n\t\t\tte[1] = _x.y;\r\n\t\t\tte[5] = _y.y;\r\n\t\t\tte[9] = _z.y;\r\n\t\t\tte[2] = _x.z;\r\n\t\t\tte[6] = _y.z;\r\n\t\t\tte[10] = _z.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(m, n) {\r\n\t\t\tif (n !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\r\n\t\t\t\treturn this.multiplyMatrices(m, n);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.multiplyMatrices(this, m);\r\n\t\t}\r\n\r\n\t\tpremultiply(m) {\r\n\t\t\treturn this.multiplyMatrices(m, this);\r\n\t\t}\r\n\r\n\t\tmultiplyMatrices(a, b) {\r\n\t\t\tconst ae = a.elements;\r\n\t\t\tconst be = b.elements;\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst a11 = ae[0],\r\n\t\t\t\t\t\ta12 = ae[4],\r\n\t\t\t\t\t\ta13 = ae[8],\r\n\t\t\t\t\t\ta14 = ae[12];\r\n\t\t\tconst a21 = ae[1],\r\n\t\t\t\t\t\ta22 = ae[5],\r\n\t\t\t\t\t\ta23 = ae[9],\r\n\t\t\t\t\t\ta24 = ae[13];\r\n\t\t\tconst a31 = ae[2],\r\n\t\t\t\t\t\ta32 = ae[6],\r\n\t\t\t\t\t\ta33 = ae[10],\r\n\t\t\t\t\t\ta34 = ae[14];\r\n\t\t\tconst a41 = ae[3],\r\n\t\t\t\t\t\ta42 = ae[7],\r\n\t\t\t\t\t\ta43 = ae[11],\r\n\t\t\t\t\t\ta44 = ae[15];\r\n\t\t\tconst b11 = be[0],\r\n\t\t\t\t\t\tb12 = be[4],\r\n\t\t\t\t\t\tb13 = be[8],\r\n\t\t\t\t\t\tb14 = be[12];\r\n\t\t\tconst b21 = be[1],\r\n\t\t\t\t\t\tb22 = be[5],\r\n\t\t\t\t\t\tb23 = be[9],\r\n\t\t\t\t\t\tb24 = be[13];\r\n\t\t\tconst b31 = be[2],\r\n\t\t\t\t\t\tb32 = be[6],\r\n\t\t\t\t\t\tb33 = be[10],\r\n\t\t\t\t\t\tb34 = be[14];\r\n\t\t\tconst b41 = be[3],\r\n\t\t\t\t\t\tb42 = be[7],\r\n\t\t\t\t\t\tb43 = be[11],\r\n\t\t\t\t\t\tb44 = be[15];\r\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\t\t\tte[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyScalar(s) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tte[0] *= s;\r\n\t\t\tte[4] *= s;\r\n\t\t\tte[8] *= s;\r\n\t\t\tte[12] *= s;\r\n\t\t\tte[1] *= s;\r\n\t\t\tte[5] *= s;\r\n\t\t\tte[9] *= s;\r\n\t\t\tte[13] *= s;\r\n\t\t\tte[2] *= s;\r\n\t\t\tte[6] *= s;\r\n\t\t\tte[10] *= s;\r\n\t\t\tte[14] *= s;\r\n\t\t\tte[3] *= s;\r\n\t\t\tte[7] *= s;\r\n\t\t\tte[11] *= s;\r\n\t\t\tte[15] *= s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdeterminant() {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst n11 = te[0],\r\n\t\t\t\t\t\tn12 = te[4],\r\n\t\t\t\t\t\tn13 = te[8],\r\n\t\t\t\t\t\tn14 = te[12];\r\n\t\t\tconst n21 = te[1],\r\n\t\t\t\t\t\tn22 = te[5],\r\n\t\t\t\t\t\tn23 = te[9],\r\n\t\t\t\t\t\tn24 = te[13];\r\n\t\t\tconst n31 = te[2],\r\n\t\t\t\t\t\tn32 = te[6],\r\n\t\t\t\t\t\tn33 = te[10],\r\n\t\t\t\t\t\tn34 = te[14];\r\n\t\t\tconst n41 = te[3],\r\n\t\t\t\t\t\tn42 = te[7],\r\n\t\t\t\t\t\tn43 = te[11],\r\n\t\t\t\t\t\tn44 = te[15]; //TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\t\treturn n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\r\n\t\t}\r\n\r\n\t\ttranspose() {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tlet tmp;\r\n\t\t\ttmp = te[1];\r\n\t\t\tte[1] = te[4];\r\n\t\t\tte[4] = tmp;\r\n\t\t\ttmp = te[2];\r\n\t\t\tte[2] = te[8];\r\n\t\t\tte[8] = tmp;\r\n\t\t\ttmp = te[6];\r\n\t\t\tte[6] = te[9];\r\n\t\t\tte[9] = tmp;\r\n\t\t\ttmp = te[3];\r\n\t\t\tte[3] = te[12];\r\n\t\t\tte[12] = tmp;\r\n\t\t\ttmp = te[7];\r\n\t\t\tte[7] = te[13];\r\n\t\t\tte[13] = tmp;\r\n\t\t\ttmp = te[11];\r\n\t\t\tte[11] = te[14];\r\n\t\t\tte[14] = tmp;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetPosition(x, y, z) {\r\n\t\t\tconst te = this.elements;\r\n\r\n\t\t\tif (x.isVector3) {\r\n\t\t\t\tte[12] = x.x;\r\n\t\t\t\tte[13] = x.y;\r\n\t\t\t\tte[14] = x.z;\r\n\t\t\t} else {\r\n\t\t\t\tte[12] = x;\r\n\t\t\t\tte[13] = y;\r\n\t\t\t\tte[14] = z;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tinvert() {\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tconst te = this.elements,\r\n\t\t\t\t\t\tn11 = te[0],\r\n\t\t\t\t\t\tn21 = te[1],\r\n\t\t\t\t\t\tn31 = te[2],\r\n\t\t\t\t\t\tn41 = te[3],\r\n\t\t\t\t\t\tn12 = te[4],\r\n\t\t\t\t\t\tn22 = te[5],\r\n\t\t\t\t\t\tn32 = te[6],\r\n\t\t\t\t\t\tn42 = te[7],\r\n\t\t\t\t\t\tn13 = te[8],\r\n\t\t\t\t\t\tn23 = te[9],\r\n\t\t\t\t\t\tn33 = te[10],\r\n\t\t\t\t\t\tn43 = te[11],\r\n\t\t\t\t\t\tn14 = te[12],\r\n\t\t\t\t\t\tn24 = te[13],\r\n\t\t\t\t\t\tn34 = te[14],\r\n\t\t\t\t\t\tn44 = te[15],\r\n\t\t\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n\t\t\tconst detInv = 1 / det;\r\n\t\t\tte[0] = t11 * detInv;\r\n\t\t\tte[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\r\n\t\t\tte[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\r\n\t\t\tte[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\r\n\t\t\tte[4] = t12 * detInv;\r\n\t\t\tte[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\r\n\t\t\tte[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\r\n\t\t\tte[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\r\n\t\t\tte[8] = t13 * detInv;\r\n\t\t\tte[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\r\n\t\t\tte[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\r\n\t\t\tte[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\r\n\t\t\tte[12] = t14 * detInv;\r\n\t\t\tte[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\r\n\t\t\tte[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\r\n\t\t\tte[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tscale(v) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst x = v.x,\r\n\t\t\t\t\t\ty = v.y,\r\n\t\t\t\t\t\tz = v.z;\r\n\t\t\tte[0] *= x;\r\n\t\t\tte[4] *= y;\r\n\t\t\tte[8] *= z;\r\n\t\t\tte[1] *= x;\r\n\t\t\tte[5] *= y;\r\n\t\t\tte[9] *= z;\r\n\t\t\tte[2] *= x;\r\n\t\t\tte[6] *= y;\r\n\t\t\tte[10] *= z;\r\n\t\t\tte[3] *= x;\r\n\t\t\tte[7] *= y;\r\n\t\t\tte[11] *= z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetMaxScaleOnAxis() {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\r\n\t\t\tconst scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\r\n\t\t\tconst scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\r\n\t\t\treturn Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n\t\t}\r\n\r\n\t\tmakeTranslation(x, y, z) {\r\n\t\t\tthis.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeRotationX(theta) {\r\n\t\t\tconst c = Math.cos(theta),\r\n\t\t\t\t\t\ts = Math.sin(theta);\r\n\t\t\tthis.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeRotationY(theta) {\r\n\t\t\tconst c = Math.cos(theta),\r\n\t\t\t\t\t\ts = Math.sin(theta);\r\n\t\t\tthis.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeRotationZ(theta) {\r\n\t\t\tconst c = Math.cos(theta),\r\n\t\t\t\t\t\ts = Math.sin(theta);\r\n\t\t\tthis.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeRotationAxis(axis, angle) {\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\t\t\tconst c = Math.cos(angle);\r\n\t\t\tconst s = Math.sin(angle);\r\n\t\t\tconst t = 1 - c;\r\n\t\t\tconst x = axis.x,\r\n\t\t\t\t\t\ty = axis.y,\r\n\t\t\t\t\t\tz = axis.z;\r\n\t\t\tconst tx = t * x,\r\n\t\t\t\t\t\tty = t * y;\r\n\t\t\tthis.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeScale(x, y, z) {\r\n\t\t\tthis.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeShear(xy, xz, yx, yz, zx, zy) {\r\n\t\t\tthis.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcompose(position, quaternion, scale) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst x = quaternion._x,\r\n\t\t\t\t\t\ty = quaternion._y,\r\n\t\t\t\t\t\tz = quaternion._z,\r\n\t\t\t\t\t\tw = quaternion._w;\r\n\t\t\tconst x2 = x + x,\r\n\t\t\t\t\t\ty2 = y + y,\r\n\t\t\t\t\t\tz2 = z + z;\r\n\t\t\tconst xx = x * x2,\r\n\t\t\t\t\t\txy = x * y2,\r\n\t\t\t\t\t\txz = x * z2;\r\n\t\t\tconst yy = y * y2,\r\n\t\t\t\t\t\tyz = y * z2,\r\n\t\t\t\t\t\tzz = z * z2;\r\n\t\t\tconst wx = w * x2,\r\n\t\t\t\t\t\twy = w * y2,\r\n\t\t\t\t\t\twz = w * z2;\r\n\t\t\tconst sx = scale.x,\r\n\t\t\t\t\t\tsy = scale.y,\r\n\t\t\t\t\t\tsz = scale.z;\r\n\t\t\tte[0] = (1 - (yy + zz)) * sx;\r\n\t\t\tte[1] = (xy + wz) * sx;\r\n\t\t\tte[2] = (xz - wy) * sx;\r\n\t\t\tte[3] = 0;\r\n\t\t\tte[4] = (xy - wz) * sy;\r\n\t\t\tte[5] = (1 - (xx + zz)) * sy;\r\n\t\t\tte[6] = (yz + wx) * sy;\r\n\t\t\tte[7] = 0;\r\n\t\t\tte[8] = (xz + wy) * sz;\r\n\t\t\tte[9] = (yz - wx) * sz;\r\n\t\t\tte[10] = (1 - (xx + yy)) * sz;\r\n\t\t\tte[11] = 0;\r\n\t\t\tte[12] = position.x;\r\n\t\t\tte[13] = position.y;\r\n\t\t\tte[14] = position.z;\r\n\t\t\tte[15] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdecompose(position, quaternion, scale) {\r\n\t\t\tconst te = this.elements;\r\n\r\n\t\t\tlet sx = _v1$5.set(te[0], te[1], te[2]).length();\r\n\r\n\t\t\tconst sy = _v1$5.set(te[4], te[5], te[6]).length();\r\n\r\n\t\t\tconst sz = _v1$5.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\r\n\r\n\r\n\t\t\tconst det = this.determinant();\r\n\t\t\tif (det < 0) sx = -sx;\r\n\t\t\tposition.x = te[12];\r\n\t\t\tposition.y = te[13];\r\n\t\t\tposition.z = te[14]; // scale the rotation part\r\n\r\n\t\t\t_m1$2.copy(this);\r\n\r\n\t\t\tconst invSX = 1 / sx;\r\n\t\t\tconst invSY = 1 / sy;\r\n\t\t\tconst invSZ = 1 / sz;\r\n\t\t\t_m1$2.elements[0] *= invSX;\r\n\t\t\t_m1$2.elements[1] *= invSX;\r\n\t\t\t_m1$2.elements[2] *= invSX;\r\n\t\t\t_m1$2.elements[4] *= invSY;\r\n\t\t\t_m1$2.elements[5] *= invSY;\r\n\t\t\t_m1$2.elements[6] *= invSY;\r\n\t\t\t_m1$2.elements[8] *= invSZ;\r\n\t\t\t_m1$2.elements[9] *= invSZ;\r\n\t\t\t_m1$2.elements[10] *= invSZ;\r\n\t\t\tquaternion.setFromRotationMatrix(_m1$2);\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakePerspective(left, right, top, bottom, near, far) {\r\n\t\t\tif (far === undefined) {\r\n\t\t\t\tconsole.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\r\n\t\t\t}\r\n\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst x = 2 * near / (right - left);\r\n\t\t\tconst y = 2 * near / (top - bottom);\r\n\t\t\tconst a = (right + left) / (right - left);\r\n\t\t\tconst b = (top + bottom) / (top - bottom);\r\n\t\t\tconst c = -(far + near) / (far - near);\r\n\t\t\tconst d = -2 * far * near / (far - near);\r\n\t\t\tte[0] = x;\r\n\t\t\tte[4] = 0;\r\n\t\t\tte[8] = a;\r\n\t\t\tte[12] = 0;\r\n\t\t\tte[1] = 0;\r\n\t\t\tte[5] = y;\r\n\t\t\tte[9] = b;\r\n\t\t\tte[13] = 0;\r\n\t\t\tte[2] = 0;\r\n\t\t\tte[6] = 0;\r\n\t\t\tte[10] = c;\r\n\t\t\tte[14] = d;\r\n\t\t\tte[3] = 0;\r\n\t\t\tte[7] = 0;\r\n\t\t\tte[11] = -1;\r\n\t\t\tte[15] = 0;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeOrthographic(left, right, top, bottom, near, far) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst w = 1.0 / (right - left);\r\n\t\t\tconst h = 1.0 / (top - bottom);\r\n\t\t\tconst p = 1.0 / (far - near);\r\n\t\t\tconst x = (right + left) * w;\r\n\t\t\tconst y = (top + bottom) * h;\r\n\t\t\tconst z = (far + near) * p;\r\n\t\t\tte[0] = 2 * w;\r\n\t\t\tte[4] = 0;\r\n\t\t\tte[8] = 0;\r\n\t\t\tte[12] = -x;\r\n\t\t\tte[1] = 0;\r\n\t\t\tte[5] = 2 * h;\r\n\t\t\tte[9] = 0;\r\n\t\t\tte[13] = -y;\r\n\t\t\tte[2] = 0;\r\n\t\t\tte[6] = 0;\r\n\t\t\tte[10] = -2 * p;\r\n\t\t\tte[14] = -z;\r\n\t\t\tte[3] = 0;\r\n\t\t\tte[7] = 0;\r\n\t\t\tte[11] = 0;\r\n\t\t\tte[15] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(matrix) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst me = matrix.elements;\r\n\r\n\t\t\tfor (let i = 0; i < 16; i++) {\r\n\t\t\t\tif (te[i] !== me[i]) return false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tfor (let i = 0; i < 16; i++) {\r\n\t\t\t\tthis.elements[i] = array[i + offset];\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tarray[offset] = te[0];\r\n\t\t\tarray[offset + 1] = te[1];\r\n\t\t\tarray[offset + 2] = te[2];\r\n\t\t\tarray[offset + 3] = te[3];\r\n\t\t\tarray[offset + 4] = te[4];\r\n\t\t\tarray[offset + 5] = te[5];\r\n\t\t\tarray[offset + 6] = te[6];\r\n\t\t\tarray[offset + 7] = te[7];\r\n\t\t\tarray[offset + 8] = te[8];\r\n\t\t\tarray[offset + 9] = te[9];\r\n\t\t\tarray[offset + 10] = te[10];\r\n\t\t\tarray[offset + 11] = te[11];\r\n\t\t\tarray[offset + 12] = te[12];\r\n\t\t\tarray[offset + 13] = te[13];\r\n\t\t\tarray[offset + 14] = te[14];\r\n\t\t\tarray[offset + 15] = te[15];\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMatrix4.prototype.isMatrix4 = true;\r\n\r\n\tconst _v1$5 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _m1$2 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _zero = /*@__PURE__*/new Vector3(0, 0, 0);\r\n\r\n\tconst _one = /*@__PURE__*/new Vector3(1, 1, 1);\r\n\r\n\tconst _x = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _y = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _z = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _matrix$1 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _quaternion$3 = /*@__PURE__*/new Quaternion();\r\n\r\n\tclass Euler {\r\n\t\tconstructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order;\r\n\t\t}\r\n\r\n\t\tget x() {\r\n\t\t\treturn this._x;\r\n\t\t}\r\n\r\n\t\tset x(value) {\r\n\t\t\tthis._x = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tget y() {\r\n\t\t\treturn this._y;\r\n\t\t}\r\n\r\n\t\tset y(value) {\r\n\t\t\tthis._y = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tget z() {\r\n\t\t\treturn this._z;\r\n\t\t}\r\n\r\n\t\tset z(value) {\r\n\t\t\tthis._z = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tget order() {\r\n\t\t\treturn this._order;\r\n\t\t}\r\n\r\n\t\tset order(value) {\r\n\t\t\tthis._order = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tset(x, y, z, order = this._order) {\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._order);\r\n\t\t}\r\n\r\n\t\tcopy(euler) {\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromRotationMatrix(m, order = this._order, update = true) {\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\t\tconst te = m.elements;\r\n\t\t\tconst m11 = te[0],\r\n\t\t\t\t\t\tm12 = te[4],\r\n\t\t\t\t\t\tm13 = te[8];\r\n\t\t\tconst m21 = te[1],\r\n\t\t\t\t\t\tm22 = te[5],\r\n\t\t\t\t\t\tm23 = te[9];\r\n\t\t\tconst m31 = te[2],\r\n\t\t\t\t\t\tm32 = te[6],\r\n\t\t\t\t\t\tm33 = te[10];\r\n\r\n\t\t\tswitch (order) {\r\n\t\t\t\tcase 'XYZ':\r\n\t\t\t\t\tthis._y = Math.asin(clamp(m13, -1, 1));\r\n\r\n\t\t\t\t\tif (Math.abs(m13) < 0.9999999) {\r\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\r\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m11);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\r\n\t\t\t\t\t\tthis._z = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'YXZ':\r\n\t\t\t\t\tthis._x = Math.asin(-clamp(m23, -1, 1));\r\n\r\n\t\t\t\t\tif (Math.abs(m23) < 0.9999999) {\r\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\r\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m22);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\r\n\t\t\t\t\t\tthis._z = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ZXY':\r\n\t\t\t\t\tthis._x = Math.asin(clamp(m32, -1, 1));\r\n\r\n\t\t\t\t\tif (Math.abs(m32) < 0.9999999) {\r\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m33);\r\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ZYX':\r\n\t\t\t\t\tthis._y = Math.asin(-clamp(m31, -1, 1));\r\n\r\n\t\t\t\t\tif (Math.abs(m31) < 0.9999999) {\r\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m33);\r\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'YZX':\r\n\t\t\t\t\tthis._z = Math.asin(clamp(m21, -1, 1));\r\n\r\n\t\t\t\t\tif (Math.abs(m21) < 0.9999999) {\r\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m22);\r\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'XZY':\r\n\t\t\t\t\tthis._z = Math.asin(-clamp(m12, -1, 1));\r\n\r\n\t\t\t\t\tif (Math.abs(m12) < 0.9999999) {\r\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\r\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m11);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\r\n\t\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\r\n\t\t\t}\r\n\r\n\t\t\tthis._order = order;\r\n\t\t\tif (update === true) this._onChangeCallback();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromQuaternion(q, order, update) {\r\n\t\t\t_matrix$1.makeRotationFromQuaternion(q);\r\n\r\n\t\t\treturn this.setFromRotationMatrix(_matrix$1, order, update);\r\n\t\t}\r\n\r\n\t\tsetFromVector3(v, order = this._order) {\r\n\t\t\treturn this.set(v.x, v.y, v.z, order);\r\n\t\t}\r\n\r\n\t\treorder(newOrder) {\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\t\t\t_quaternion$3.setFromEuler(this);\r\n\r\n\t\t\treturn this.setFromQuaternion(_quaternion$3, newOrder);\r\n\t\t}\r\n\r\n\t\tequals(euler) {\r\n\t\t\treturn euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\r\n\t\t}\r\n\r\n\t\tfromArray(array) {\r\n\t\t\tthis._x = array[0];\r\n\t\t\tthis._y = array[1];\r\n\t\t\tthis._z = array[2];\r\n\t\t\tif (array[3] !== undefined) this._order = array[3];\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tarray[offset] = this._x;\r\n\t\t\tarray[offset + 1] = this._y;\r\n\t\t\tarray[offset + 2] = this._z;\r\n\t\t\tarray[offset + 3] = this._order;\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\ttoVector3(optionalResult) {\r\n\t\t\tif (optionalResult) {\r\n\t\t\t\treturn optionalResult.set(this._x, this._y, this._z);\r\n\t\t\t} else {\r\n\t\t\t\treturn new Vector3(this._x, this._y, this._z);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_onChange(callback) {\r\n\t\t\tthis._onChangeCallback = callback;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t_onChangeCallback() {}\r\n\r\n\t}\r\n\r\n\tEuler.prototype.isEuler = true;\r\n\tEuler.DefaultOrder = 'XYZ';\r\n\tEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\r\n\r\n\tclass Layers {\r\n\t\tconstructor() {\r\n\t\t\tthis.mask = 1 | 0;\r\n\t\t}\r\n\r\n\t\tset(channel) {\r\n\t\t\tthis.mask = 1 << channel | 0;\r\n\t\t}\r\n\r\n\t\tenable(channel) {\r\n\t\t\tthis.mask |= 1 << channel | 0;\r\n\t\t}\r\n\r\n\t\tenableAll() {\r\n\t\t\tthis.mask = 0xffffffff | 0;\r\n\t\t}\r\n\r\n\t\ttoggle(channel) {\r\n\t\t\tthis.mask ^= 1 << channel | 0;\r\n\t\t}\r\n\r\n\t\tdisable(channel) {\r\n\t\t\tthis.mask &= ~(1 << channel | 0);\r\n\t\t}\r\n\r\n\t\tdisableAll() {\r\n\t\t\tthis.mask = 0;\r\n\t\t}\r\n\r\n\t\ttest(layers) {\r\n\t\t\treturn (this.mask & layers.mask) !== 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet _object3DId = 0;\r\n\r\n\tconst _v1$4 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _q1 = /*@__PURE__*/new Quaternion();\r\n\r\n\tconst _m1$1 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _target = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _position$3 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _scale$2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _quaternion$2 = /*@__PURE__*/new Quaternion();\r\n\r\n\tconst _xAxis = /*@__PURE__*/new Vector3(1, 0, 0);\r\n\r\n\tconst _yAxis = /*@__PURE__*/new Vector3(0, 1, 0);\r\n\r\n\tconst _zAxis = /*@__PURE__*/new Vector3(0, 0, 1);\r\n\r\n\tconst _addedEvent = {\r\n\t\ttype: 'added'\r\n\t};\r\n\tconst _removedEvent = {\r\n\t\ttype: 'removed'\r\n\t};\r\n\r\n\tclass Object3D extends EventDispatcher {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tObject.defineProperty(this, 'id', {\r\n\t\t\t\tvalue: _object3DId++\r\n\t\t\t});\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.type = 'Object3D';\r\n\t\t\tthis.parent = null;\r\n\t\t\tthis.children = [];\r\n\t\t\tthis.up = Object3D.DefaultUp.clone();\r\n\t\t\tconst position = new Vector3();\r\n\t\t\tconst rotation = new Euler();\r\n\t\t\tconst quaternion = new Quaternion();\r\n\t\t\tconst scale = new Vector3(1, 1, 1);\r\n\r\n\t\t\tfunction onRotationChange() {\r\n\t\t\t\tquaternion.setFromEuler(rotation, false);\r\n\t\t\t}\r\n\r\n\t\t\tfunction onQuaternionChange() {\r\n\t\t\t\trotation.setFromQuaternion(quaternion, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\trotation._onChange(onRotationChange);\r\n\r\n\t\t\tquaternion._onChange(onQuaternionChange);\r\n\r\n\t\t\tObject.defineProperties(this, {\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tvalue: position\r\n\t\t\t\t},\r\n\t\t\t\trotation: {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tvalue: rotation\r\n\t\t\t\t},\r\n\t\t\t\tquaternion: {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tvalue: quaternion\r\n\t\t\t\t},\r\n\t\t\t\tscale: {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tvalue: scale\r\n\t\t\t\t},\r\n\t\t\t\tmodelViewMatrix: {\r\n\t\t\t\t\tvalue: new Matrix4()\r\n\t\t\t\t},\r\n\t\t\t\tnormalMatrix: {\r\n\t\t\t\t\tvalue: new Matrix3()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.matrix = new Matrix4();\r\n\t\t\tthis.matrixWorld = new Matrix4();\r\n\t\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\t\tthis.layers = new Layers();\r\n\t\t\tthis.visible = true;\r\n\t\t\tthis.castShadow = false;\r\n\t\t\tthis.receiveShadow = false;\r\n\t\t\tthis.frustumCulled = true;\r\n\t\t\tthis.renderOrder = 0;\r\n\t\t\tthis.animations = [];\r\n\t\t\tthis.userData = {};\r\n\t\t}\r\n\r\n\t\tonBeforeRender() {}\r\n\r\n\t\tonAfterRender() {}\r\n\r\n\t\tapplyMatrix4(matrix) {\r\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\r\n\t\t\tthis.matrix.premultiply(matrix);\r\n\t\t\tthis.matrix.decompose(this.position, this.quaternion, this.scale);\r\n\t\t}\r\n\r\n\t\tapplyQuaternion(q) {\r\n\t\t\tthis.quaternion.premultiply(q);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetRotationFromAxisAngle(axis, angle) {\r\n\t\t\t// assumes axis is normalized\r\n\t\t\tthis.quaternion.setFromAxisAngle(axis, angle);\r\n\t\t}\r\n\r\n\t\tsetRotationFromEuler(euler) {\r\n\t\t\tthis.quaternion.setFromEuler(euler, true);\r\n\t\t}\r\n\r\n\t\tsetRotationFromMatrix(m) {\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\t\tthis.quaternion.setFromRotationMatrix(m);\r\n\t\t}\r\n\r\n\t\tsetRotationFromQuaternion(q) {\r\n\t\t\t// assumes q is normalized\r\n\t\t\tthis.quaternion.copy(q);\r\n\t\t}\r\n\r\n\t\trotateOnAxis(axis, angle) {\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\t\t_q1.setFromAxisAngle(axis, angle);\r\n\r\n\t\t\tthis.quaternion.multiply(_q1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotateOnWorldAxis(axis, angle) {\r\n\t\t\t// rotate object on axis in world space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\t\t// method assumes no rotated parent\r\n\t\t\t_q1.setFromAxisAngle(axis, angle);\r\n\r\n\t\t\tthis.quaternion.premultiply(_q1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotateX(angle) {\r\n\t\t\treturn this.rotateOnAxis(_xAxis, angle);\r\n\t\t}\r\n\r\n\t\trotateY(angle) {\r\n\t\t\treturn this.rotateOnAxis(_yAxis, angle);\r\n\t\t}\r\n\r\n\t\trotateZ(angle) {\r\n\t\t\treturn this.rotateOnAxis(_zAxis, angle);\r\n\t\t}\r\n\r\n\t\ttranslateOnAxis(axis, distance) {\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\t\t_v1$4.copy(axis).applyQuaternion(this.quaternion);\r\n\r\n\t\t\tthis.position.add(_v1$4.multiplyScalar(distance));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslateX(distance) {\r\n\t\t\treturn this.translateOnAxis(_xAxis, distance);\r\n\t\t}\r\n\r\n\t\ttranslateY(distance) {\r\n\t\t\treturn this.translateOnAxis(_yAxis, distance);\r\n\t\t}\r\n\r\n\t\ttranslateZ(distance) {\r\n\t\t\treturn this.translateOnAxis(_zAxis, distance);\r\n\t\t}\r\n\r\n\t\tlocalToWorld(vector) {\r\n\t\t\treturn vector.applyMatrix4(this.matrixWorld);\r\n\t\t}\r\n\r\n\t\tworldToLocal(vector) {\r\n\t\t\treturn vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\r\n\t\t}\r\n\r\n\t\tlookAt(x, y, z) {\r\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\r\n\t\t\tif (x.isVector3) {\r\n\t\t\t\t_target.copy(x);\r\n\t\t\t} else {\r\n\t\t\t\t_target.set(x, y, z);\r\n\t\t\t}\r\n\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\r\n\t\t\t_position$3.setFromMatrixPosition(this.matrixWorld);\r\n\r\n\t\t\tif (this.isCamera || this.isLight) {\r\n\t\t\t\t_m1$1.lookAt(_position$3, _target, this.up);\r\n\t\t\t} else {\r\n\t\t\t\t_m1$1.lookAt(_target, _position$3, this.up);\r\n\t\t\t}\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix(_m1$1);\r\n\r\n\t\t\tif (parent) {\r\n\t\t\t\t_m1$1.extractRotation(parent.matrixWorld);\r\n\r\n\t\t\t\t_q1.setFromRotationMatrix(_m1$1);\r\n\r\n\t\t\t\tthis.quaternion.premultiply(_q1.invert());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tadd(object) {\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\tthis.add(arguments[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif (object === this) {\r\n\t\t\t\tconsole.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif (object && object.isObject3D) {\r\n\t\t\t\tif (object.parent !== null) {\r\n\t\t\t\t\tobject.parent.remove(object);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tthis.children.push(object);\r\n\t\t\t\tobject.dispatchEvent(_addedEvent);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tremove(object) {\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\tthis.remove(arguments[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tconst index = this.children.indexOf(object);\r\n\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tobject.parent = null;\r\n\t\t\t\tthis.children.splice(index, 1);\r\n\t\t\t\tobject.dispatchEvent(_removedEvent);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tremoveFromParent() {\r\n\t\t\tconst parent = this.parent;\r\n\r\n\t\t\tif (parent !== null) {\r\n\t\t\t\tparent.remove(this);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclear() {\r\n\t\t\tfor (let i = 0; i < this.children.length; i++) {\r\n\t\t\t\tconst object = this.children[i];\r\n\t\t\t\tobject.parent = null;\r\n\t\t\t\tobject.dispatchEvent(_removedEvent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.children.length = 0;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tattach(object) {\r\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\r\n\t\t\t_m1$1.copy(this.matrixWorld).invert();\r\n\r\n\t\t\tif (object.parent !== null) {\r\n\t\t\t\tobject.parent.updateWorldMatrix(true, false);\r\n\r\n\t\t\t\t_m1$1.multiply(object.parent.matrixWorld);\r\n\t\t\t}\r\n\r\n\t\t\tobject.applyMatrix4(_m1$1);\r\n\t\t\tthis.add(object);\r\n\t\t\tobject.updateWorldMatrix(false, true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetObjectById(id) {\r\n\t\t\treturn this.getObjectByProperty('id', id);\r\n\t\t}\r\n\r\n\t\tgetObjectByName(name) {\r\n\t\t\treturn this.getObjectByProperty('name', name);\r\n\t\t}\r\n\r\n\t\tgetObjectByProperty(name, value) {\r\n\t\t\tif (this[name] === value) return this;\r\n\r\n\t\t\tfor (let i = 0, l = this.children.length; i < l; i++) {\r\n\t\t\t\tconst child = this.children[i];\r\n\t\t\t\tconst object = child.getObjectByProperty(name, value);\r\n\r\n\t\t\t\tif (object !== undefined) {\r\n\t\t\t\t\treturn object;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tgetWorldPosition(target) {\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\t\t\treturn target.setFromMatrixPosition(this.matrixWorld);\r\n\t\t}\r\n\r\n\t\tgetWorldQuaternion(target) {\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\t\t\tthis.matrixWorld.decompose(_position$3, target, _scale$2);\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tgetWorldScale(target) {\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\t\t\tthis.matrixWorld.decompose(_position$3, _quaternion$2, target);\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tgetWorldDirection(target) {\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\t\t\tconst e = this.matrixWorld.elements;\r\n\t\t\treturn target.set(e[8], e[9], e[10]).normalize();\r\n\t\t}\r\n\r\n\t\traycast() {}\r\n\r\n\t\ttraverse(callback) {\r\n\t\t\tcallback(this);\r\n\t\t\tconst children = this.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tchildren[i].traverse(callback);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttraverseVisible(callback) {\r\n\t\t\tif (this.visible === false) return;\r\n\t\t\tcallback(this);\r\n\t\t\tconst children = this.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tchildren[i].traverseVisible(callback);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttraverseAncestors(callback) {\r\n\t\t\tconst parent = this.parent;\r\n\r\n\t\t\tif (parent !== null) {\r\n\t\t\t\tcallback(parent);\r\n\t\t\t\tparent.traverseAncestors(callback);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdateMatrix() {\r\n\t\t\tthis.matrix.compose(this.position, this.quaternion, this.scale);\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\r\n\r\n\t\t\tif (this.matrixWorldNeedsUpdate || force) {\r\n\t\t\t\tif (this.parent === null) {\r\n\t\t\t\t\tthis.matrixWorld.copy(this.matrix);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\t\t\tforce = true;\r\n\t\t\t} // update children\r\n\r\n\r\n\t\t\tconst children = this.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tchildren[i].updateMatrixWorld(force);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\r\n\t\t\tconst parent = this.parent;\r\n\r\n\t\t\tif (updateParents === true && parent !== null) {\r\n\t\t\t\tparent.updateWorldMatrix(true, false);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\r\n\r\n\t\t\tif (this.parent === null) {\r\n\t\t\t\tthis.matrixWorld.copy(this.matrix);\r\n\t\t\t} else {\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\r\n\t\t\t} // update children\r\n\r\n\r\n\t\t\tif (updateChildren === true) {\r\n\t\t\t\tconst children = this.children;\r\n\r\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\t\tchildren[i].updateWorldMatrix(false, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\t// meta is a string when called from JSON.stringify\r\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\r\n\t\t\tconst output = {}; // meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\r\n\t\t\tif (isRootObject) {\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {},\r\n\t\t\t\t\tshapes: {},\r\n\t\t\t\t\tskeletons: {},\r\n\t\t\t\t\tanimations: {}\r\n\t\t\t\t};\r\n\t\t\t\toutput.metadata = {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\t\t\t} // standard Object3D serialization\r\n\r\n\r\n\t\t\tconst object = {};\r\n\t\t\tobject.uuid = this.uuid;\r\n\t\t\tobject.type = this.type;\r\n\t\t\tif (this.name !== '') object.name = this.name;\r\n\t\t\tif (this.castShadow === true) object.castShadow = true;\r\n\t\t\tif (this.receiveShadow === true) object.receiveShadow = true;\r\n\t\t\tif (this.visible === false) object.visible = false;\r\n\t\t\tif (this.frustumCulled === false) object.frustumCulled = false;\r\n\t\t\tif (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\r\n\t\t\tif (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\r\n\t\t\tobject.layers = this.layers.mask;\r\n\t\t\tobject.matrix = this.matrix.toArray();\r\n\t\t\tif (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\r\n\r\n\t\t\tif (this.isInstancedMesh) {\r\n\t\t\t\tobject.type = 'InstancedMesh';\r\n\t\t\t\tobject.count = this.count;\r\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\r\n\t\t\t\tif (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tfunction serialize(library, element) {\r\n\t\t\t\tif (library[element.uuid] === undefined) {\r\n\t\t\t\t\tlibrary[element.uuid] = element.toJSON(meta);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn element.uuid;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isScene) {\r\n\t\t\t\tif (this.background) {\r\n\t\t\t\t\tif (this.background.isColor) {\r\n\t\t\t\t\t\tobject.background = this.background.toJSON();\r\n\t\t\t\t\t} else if (this.background.isTexture) {\r\n\t\t\t\t\t\tobject.background = this.background.toJSON(meta).uuid;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.environment && this.environment.isTexture) {\r\n\t\t\t\t\tobject.environment = this.environment.toJSON(meta).uuid;\r\n\t\t\t\t}\r\n\t\t\t} else if (this.isMesh || this.isLine || this.isPoints) {\r\n\t\t\t\tobject.geometry = serialize(meta.geometries, this.geometry);\r\n\t\t\t\tconst parameters = this.geometry.parameters;\r\n\r\n\t\t\t\tif (parameters !== undefined && parameters.shapes !== undefined) {\r\n\t\t\t\t\tconst shapes = parameters.shapes;\r\n\r\n\t\t\t\t\tif (Array.isArray(shapes)) {\r\n\t\t\t\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\r\n\t\t\t\t\t\t\tconst shape = shapes[i];\r\n\t\t\t\t\t\t\tserialize(meta.shapes, shape);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tserialize(meta.shapes, shapes);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isSkinnedMesh) {\r\n\t\t\t\tobject.bindMode = this.bindMode;\r\n\t\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\r\n\r\n\t\t\t\tif (this.skeleton !== undefined) {\r\n\t\t\t\t\tserialize(meta.skeletons, this.skeleton);\r\n\t\t\t\t\tobject.skeleton = this.skeleton.uuid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.material !== undefined) {\r\n\t\t\t\tif (Array.isArray(this.material)) {\r\n\t\t\t\t\tconst uuids = [];\r\n\r\n\t\t\t\t\tfor (let i = 0, l = this.material.length; i < l; i++) {\r\n\t\t\t\t\t\tuuids.push(serialize(meta.materials, this.material[i]));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.material = uuids;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobject.material = serialize(meta.materials, this.material);\r\n\t\t\t\t}\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (this.children.length > 0) {\r\n\t\t\t\tobject.children = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < this.children.length; i++) {\r\n\t\t\t\t\tobject.children.push(this.children[i].toJSON(meta).object);\r\n\t\t\t\t}\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (this.animations.length > 0) {\r\n\t\t\t\tobject.animations = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < this.animations.length; i++) {\r\n\t\t\t\t\tconst animation = this.animations[i];\r\n\t\t\t\t\tobject.animations.push(serialize(meta.animations, animation));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isRootObject) {\r\n\t\t\t\tconst geometries = extractFromCache(meta.geometries);\r\n\t\t\t\tconst materials = extractFromCache(meta.materials);\r\n\t\t\t\tconst textures = extractFromCache(meta.textures);\r\n\t\t\t\tconst images = extractFromCache(meta.images);\r\n\t\t\t\tconst shapes = extractFromCache(meta.shapes);\r\n\t\t\t\tconst skeletons = extractFromCache(meta.skeletons);\r\n\t\t\t\tconst animations = extractFromCache(meta.animations);\r\n\t\t\t\tif (geometries.length > 0) output.geometries = geometries;\r\n\t\t\t\tif (materials.length > 0) output.materials = materials;\r\n\t\t\t\tif (textures.length > 0) output.textures = textures;\r\n\t\t\t\tif (images.length > 0) output.images = images;\r\n\t\t\t\tif (shapes.length > 0) output.shapes = shapes;\r\n\t\t\t\tif (skeletons.length > 0) output.skeletons = skeletons;\r\n\t\t\t\tif (animations.length > 0) output.animations = animations;\r\n\t\t\t}\r\n\r\n\t\t\toutput.object = object;\r\n\t\t\treturn output; // extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\r\n\t\t\tfunction extractFromCache(cache) {\r\n\t\t\t\tconst values = [];\r\n\r\n\t\t\t\tfor (const key in cache) {\r\n\t\t\t\t\tconst data = cache[key];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclone(recursive) {\r\n\t\t\treturn new this.constructor().copy(this, recursive);\r\n\t\t}\r\n\r\n\t\tcopy(source, recursive = true) {\r\n\t\t\tthis.name = source.name;\r\n\t\t\tthis.up.copy(source.up);\r\n\t\t\tthis.position.copy(source.position);\r\n\t\t\tthis.rotation.order = source.rotation.order;\r\n\t\t\tthis.quaternion.copy(source.quaternion);\r\n\t\t\tthis.scale.copy(source.scale);\r\n\t\t\tthis.matrix.copy(source.matrix);\r\n\t\t\tthis.matrixWorld.copy(source.matrixWorld);\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\t\t\tthis.layers.mask = source.layers.mask;\r\n\t\t\tthis.visible = source.visible;\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\r\n\r\n\t\t\tif (recursive === true) {\r\n\t\t\t\tfor (let i = 0; i < source.children.length; i++) {\r\n\t\t\t\t\tconst child = source.children[i];\r\n\t\t\t\t\tthis.add(child.clone());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject3D.DefaultUp = new Vector3(0, 1, 0);\r\n\tObject3D.DefaultMatrixAutoUpdate = true;\r\n\tObject3D.prototype.isObject3D = true;\r\n\r\n\tconst _v0$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v1$3 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v2$2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v3$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vab = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vac = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vbc = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vap = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vbp = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vcp = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Triangle {\r\n\t\tconstructor(a = new Vector3(), b = new Vector3(), c = new Vector3()) {\r\n\t\t\tthis.a = a;\r\n\t\t\tthis.b = b;\r\n\t\t\tthis.c = c;\r\n\t\t}\r\n\r\n\t\tstatic getNormal(a, b, c, target) {\r\n\t\t\ttarget.subVectors(c, b);\r\n\r\n\t\t\t_v0$1.subVectors(a, b);\r\n\r\n\t\t\ttarget.cross(_v0$1);\r\n\t\t\tconst targetLengthSq = target.lengthSq();\r\n\r\n\t\t\tif (targetLengthSq > 0) {\r\n\t\t\t\treturn target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\r\n\t\t\t}\r\n\r\n\t\t\treturn target.set(0, 0, 0);\r\n\t\t} // static/instance method to calculate barycentric coordinates\r\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\r\n\r\n\t\tstatic getBarycoord(point, a, b, c, target) {\r\n\t\t\t_v0$1.subVectors(c, a);\r\n\r\n\t\t\t_v1$3.subVectors(b, a);\r\n\r\n\t\t\t_v2$2.subVectors(point, a);\r\n\r\n\t\t\tconst dot00 = _v0$1.dot(_v0$1);\r\n\r\n\t\t\tconst dot01 = _v0$1.dot(_v1$3);\r\n\r\n\t\t\tconst dot02 = _v0$1.dot(_v2$2);\r\n\r\n\t\t\tconst dot11 = _v1$3.dot(_v1$3);\r\n\r\n\t\t\tconst dot12 = _v1$3.dot(_v2$2);\r\n\r\n\t\t\tconst denom = dot00 * dot11 - dot01 * dot01; // collinear or singular triangle\r\n\r\n\t\t\tif (denom === 0) {\r\n\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\treturn target.set(-2, -1, -1);\r\n\t\t\t}\r\n\r\n\t\t\tconst invDenom = 1 / denom;\r\n\t\t\tconst u = (dot11 * dot02 - dot01 * dot12) * invDenom;\r\n\t\t\tconst v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\r\n\r\n\t\t\treturn target.set(1 - u - v, v, u);\r\n\t\t}\r\n\r\n\t\tstatic containsPoint(point, a, b, c) {\r\n\t\t\tthis.getBarycoord(point, a, b, c, _v3$1);\r\n\t\t\treturn _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;\r\n\t\t}\r\n\r\n\t\tstatic getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\r\n\t\t\tthis.getBarycoord(point, p1, p2, p3, _v3$1);\r\n\t\t\ttarget.set(0, 0);\r\n\t\t\ttarget.addScaledVector(uv1, _v3$1.x);\r\n\t\t\ttarget.addScaledVector(uv2, _v3$1.y);\r\n\t\t\ttarget.addScaledVector(uv3, _v3$1.z);\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tstatic isFrontFacing(a, b, c, direction) {\r\n\t\t\t_v0$1.subVectors(c, b);\r\n\r\n\t\t\t_v1$3.subVectors(a, b); // strictly front facing\r\n\r\n\r\n\t\t\treturn _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\r\n\t\t}\r\n\r\n\t\tset(a, b, c) {\r\n\t\t\tthis.a.copy(a);\r\n\t\t\tthis.b.copy(b);\r\n\t\t\tthis.c.copy(c);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromPointsAndIndices(points, i0, i1, i2) {\r\n\t\t\tthis.a.copy(points[i0]);\r\n\t\t\tthis.b.copy(points[i1]);\r\n\t\t\tthis.c.copy(points[i2]);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromAttributeAndIndices(attribute, i0, i1, i2) {\r\n\t\t\tthis.a.fromBufferAttribute(attribute, i0);\r\n\t\t\tthis.b.fromBufferAttribute(attribute, i1);\r\n\t\t\tthis.c.fromBufferAttribute(attribute, i2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(triangle) {\r\n\t\t\tthis.a.copy(triangle.a);\r\n\t\t\tthis.b.copy(triangle.b);\r\n\t\t\tthis.c.copy(triangle.c);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetArea() {\r\n\t\t\t_v0$1.subVectors(this.c, this.b);\r\n\r\n\t\t\t_v1$3.subVectors(this.a, this.b);\r\n\r\n\t\t\treturn _v0$1.cross(_v1$3).length() * 0.5;\r\n\t\t}\r\n\r\n\t\tgetMidpoint(target) {\r\n\t\t\treturn target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\r\n\t\t}\r\n\r\n\t\tgetNormal(target) {\r\n\t\t\treturn Triangle.getNormal(this.a, this.b, this.c, target);\r\n\t\t}\r\n\r\n\t\tgetPlane(target) {\r\n\t\t\treturn target.setFromCoplanarPoints(this.a, this.b, this.c);\r\n\t\t}\r\n\r\n\t\tgetBarycoord(point, target) {\r\n\t\t\treturn Triangle.getBarycoord(point, this.a, this.b, this.c, target);\r\n\t\t}\r\n\r\n\t\tgetUV(point, uv1, uv2, uv3, target) {\r\n\t\t\treturn Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\r\n\t\t}\r\n\r\n\t\tcontainsPoint(point) {\r\n\t\t\treturn Triangle.containsPoint(point, this.a, this.b, this.c);\r\n\t\t}\r\n\r\n\t\tisFrontFacing(direction) {\r\n\t\t\treturn Triangle.isFrontFacing(this.a, this.b, this.c, direction);\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\treturn box.intersectsTriangle(this);\r\n\t\t}\r\n\r\n\t\tclosestPointToPoint(p, target) {\r\n\t\t\tconst a = this.a,\r\n\t\t\t\t\t\tb = this.b,\r\n\t\t\t\t\t\tc = this.c;\r\n\t\t\tlet v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\r\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\r\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\r\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\r\n\t\t\t// the point lies in with the minimum amount of redundant computation.\r\n\r\n\t\t\t_vab.subVectors(b, a);\r\n\r\n\t\t\t_vac.subVectors(c, a);\r\n\r\n\t\t\t_vap.subVectors(p, a);\r\n\r\n\t\t\tconst d1 = _vab.dot(_vap);\r\n\r\n\t\t\tconst d2 = _vac.dot(_vap);\r\n\r\n\t\t\tif (d1 <= 0 && d2 <= 0) {\r\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\r\n\t\t\t\treturn target.copy(a);\r\n\t\t\t}\r\n\r\n\t\t\t_vbp.subVectors(p, b);\r\n\r\n\t\t\tconst d3 = _vab.dot(_vbp);\r\n\r\n\t\t\tconst d4 = _vac.dot(_vbp);\r\n\r\n\t\t\tif (d3 >= 0 && d4 <= d3) {\r\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\r\n\t\t\t\treturn target.copy(b);\r\n\t\t\t}\r\n\r\n\t\t\tconst vc = d1 * d4 - d3 * d2;\r\n\r\n\t\t\tif (vc <= 0 && d1 >= 0 && d3 <= 0) {\r\n\t\t\t\tv = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\r\n\r\n\t\t\t\treturn target.copy(a).addScaledVector(_vab, v);\r\n\t\t\t}\r\n\r\n\t\t\t_vcp.subVectors(p, c);\r\n\r\n\t\t\tconst d5 = _vab.dot(_vcp);\r\n\r\n\t\t\tconst d6 = _vac.dot(_vcp);\r\n\r\n\t\t\tif (d6 >= 0 && d5 <= d6) {\r\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\r\n\t\t\t\treturn target.copy(c);\r\n\t\t\t}\r\n\r\n\t\t\tconst vb = d5 * d2 - d1 * d6;\r\n\r\n\t\t\tif (vb <= 0 && d2 >= 0 && d6 <= 0) {\r\n\t\t\t\tw = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\r\n\r\n\t\t\t\treturn target.copy(a).addScaledVector(_vac, w);\r\n\t\t\t}\r\n\r\n\t\t\tconst va = d3 * d6 - d5 * d4;\r\n\r\n\t\t\tif (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\r\n\t\t\t\t_vbc.subVectors(c, b);\r\n\r\n\t\t\t\tw = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\r\n\r\n\t\t\t\treturn target.copy(b).addScaledVector(_vbc, w); // edge region of BC\r\n\t\t\t} // face region\r\n\r\n\r\n\t\t\tconst denom = 1 / (va + vb + vc); // u = va * denom\r\n\r\n\t\t\tv = vb * denom;\r\n\t\t\tw = vc * denom;\r\n\t\t\treturn target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\r\n\t\t}\r\n\r\n\t\tequals(triangle) {\r\n\t\t\treturn triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet materialId = 0;\r\n\r\n\tclass Material extends EventDispatcher {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tObject.defineProperty(this, 'id', {\r\n\t\t\t\tvalue: materialId++\r\n\t\t\t});\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.type = 'Material';\r\n\t\t\tthis.fog = true;\r\n\t\t\tthis.blending = NormalBlending;\r\n\t\t\tthis.side = FrontSide;\r\n\t\t\tthis.vertexColors = false;\r\n\t\t\tthis.opacity = 1;\r\n\t\t\tthis.format = RGBAFormat;\r\n\t\t\tthis.transparent = false;\r\n\t\t\tthis.blendSrc = SrcAlphaFactor;\r\n\t\t\tthis.blendDst = OneMinusSrcAlphaFactor;\r\n\t\t\tthis.blendEquation = AddEquation;\r\n\t\t\tthis.blendSrcAlpha = null;\r\n\t\t\tthis.blendDstAlpha = null;\r\n\t\t\tthis.blendEquationAlpha = null;\r\n\t\t\tthis.depthFunc = LessEqualDepth;\r\n\t\t\tthis.depthTest = true;\r\n\t\t\tthis.depthWrite = true;\r\n\t\t\tthis.stencilWriteMask = 0xff;\r\n\t\t\tthis.stencilFunc = AlwaysStencilFunc;\r\n\t\t\tthis.stencilRef = 0;\r\n\t\t\tthis.stencilFuncMask = 0xff;\r\n\t\t\tthis.stencilFail = KeepStencilOp;\r\n\t\t\tthis.stencilZFail = KeepStencilOp;\r\n\t\t\tthis.stencilZPass = KeepStencilOp;\r\n\t\t\tthis.stencilWrite = false;\r\n\t\t\tthis.clippingPlanes = null;\r\n\t\t\tthis.clipIntersection = false;\r\n\t\t\tthis.clipShadows = false;\r\n\t\t\tthis.shadowSide = null;\r\n\t\t\tthis.colorWrite = true;\r\n\t\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\t\t\tthis.polygonOffset = false;\r\n\t\t\tthis.polygonOffsetFactor = 0;\r\n\t\t\tthis.polygonOffsetUnits = 0;\r\n\t\t\tthis.dithering = false;\r\n\t\t\tthis.alphaToCoverage = false;\r\n\t\t\tthis.premultipliedAlpha = false;\r\n\t\t\tthis.visible = true;\r\n\t\t\tthis.toneMapped = true;\r\n\t\t\tthis.userData = {};\r\n\t\t\tthis.version = 0;\r\n\t\t\tthis._alphaTest = 0;\r\n\t\t}\r\n\r\n\t\tget alphaTest() {\r\n\t\t\treturn this._alphaTest;\r\n\t\t}\r\n\r\n\t\tset alphaTest(value) {\r\n\t\t\tif (this._alphaTest > 0 !== value > 0) {\r\n\t\t\t\tthis.version++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._alphaTest = value;\r\n\t\t}\r\n\r\n\t\tonBuild() {}\r\n\r\n\t\tonBeforeRender() {}\r\n\r\n\t\tonBeforeCompile() {}\r\n\r\n\t\tcustomProgramCacheKey() {\r\n\t\t\treturn this.onBeforeCompile.toString();\r\n\t\t}\r\n\r\n\t\tsetValues(values) {\r\n\t\t\tif (values === undefined) return;\r\n\r\n\t\t\tfor (const key in values) {\r\n\t\t\t\tconst newValue = values[key];\r\n\r\n\t\t\t\tif (newValue === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} // for backward compatability if shading is set in the constructor\r\n\r\n\r\n\t\t\t\tif (key === 'shading') {\r\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\r\n\t\t\t\t\tthis.flatShading = newValue === FlatShading ? true : false;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst currentValue = this[key];\r\n\r\n\t\t\t\tif (currentValue === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (currentValue && currentValue.isColor) {\r\n\t\t\t\t\tcurrentValue.set(newValue);\r\n\t\t\t\t} else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\r\n\t\t\t\t\tcurrentValue.copy(newValue);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis[key] = newValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst isRoot = meta === undefined || typeof meta === 'string';\r\n\r\n\t\t\tif (isRoot) {\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t}; // standard Material serialization\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif (this.name !== '') data.name = this.name;\r\n\t\t\tif (this.color && this.color.isColor) data.color = this.color.getHex();\r\n\t\t\tif (this.roughness !== undefined) data.roughness = this.roughness;\r\n\t\t\tif (this.metalness !== undefined) data.metalness = this.metalness;\r\n\t\t\tif (this.sheen !== undefined) data.sheen = this.sheen;\r\n\t\t\tif (this.sheenTint && this.sheenTint.isColor) data.sheenTint = this.sheenTint.getHex();\r\n\t\t\tif (this.sheenRoughness !== undefined) data.sheenRoughness = this.sheenRoughness;\r\n\t\t\tif (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\r\n\t\t\tif (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\r\n\t\t\tif (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\r\n\t\t\tif (this.specularIntensity !== undefined) data.specularIntensity = this.specularIntensity;\r\n\t\t\tif (this.specularTint && this.specularTint.isColor) data.specularTint = this.specularTint.getHex();\r\n\t\t\tif (this.shininess !== undefined) data.shininess = this.shininess;\r\n\t\t\tif (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\r\n\t\t\tif (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\r\n\r\n\t\t\tif (this.clearcoatMap && this.clearcoatMap.isTexture) {\r\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\r\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\r\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\r\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\r\n\t\t\tif (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\r\n\t\t\tif (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\r\n\r\n\t\t\tif (this.lightMap && this.lightMap.isTexture) {\r\n\t\t\t\tdata.lightMap = this.lightMap.toJSON(meta).uuid;\r\n\t\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.aoMap && this.aoMap.isTexture) {\r\n\t\t\t\tdata.aoMap = this.aoMap.toJSON(meta).uuid;\r\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.bumpMap && this.bumpMap.isTexture) {\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON(meta).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.normalMap && this.normalMap.isTexture) {\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON(meta).uuid;\r\n\t\t\t\tdata.normalMapType = this.normalMapType;\r\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.displacementMap && this.displacementMap.isTexture) {\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON(meta).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\r\n\t\t\tif (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\r\n\t\t\tif (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\r\n\t\t\tif (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\r\n\t\t\tif (this.specularIntensityMap && this.specularIntensityMap.isTexture) data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;\r\n\t\t\tif (this.specularTintMap && this.specularTintMap.isTexture) data.specularTintMap = this.specularTintMap.toJSON(meta).uuid;\r\n\r\n\t\t\tif (this.envMap && this.envMap.isTexture) {\r\n\t\t\t\tdata.envMap = this.envMap.toJSON(meta).uuid;\r\n\t\t\t\tif (this.combine !== undefined) data.combine = this.combine;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\r\n\t\t\tif (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\r\n\t\t\tif (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\r\n\r\n\t\t\tif (this.gradientMap && this.gradientMap.isTexture) {\r\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON(meta).uuid;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.transmission !== undefined) data.transmission = this.transmission;\r\n\t\t\tif (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\r\n\t\t\tif (this.thickness !== undefined) data.thickness = this.thickness;\r\n\t\t\tif (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\r\n\t\t\tif (this.attenuationDistance !== undefined) data.attenuationDistance = this.attenuationDistance;\r\n\t\t\tif (this.attenuationTint !== undefined) data.attenuationTint = this.attenuationTint.getHex();\r\n\t\t\tif (this.size !== undefined) data.size = this.size;\r\n\t\t\tif (this.shadowSide !== null) data.shadowSide = this.shadowSide;\r\n\t\t\tif (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\r\n\t\t\tif (this.blending !== NormalBlending) data.blending = this.blending;\r\n\t\t\tif (this.side !== FrontSide) data.side = this.side;\r\n\t\t\tif (this.vertexColors) data.vertexColors = true;\r\n\t\t\tif (this.opacity < 1) data.opacity = this.opacity;\r\n\t\t\tif (this.format !== RGBAFormat) data.format = this.format;\r\n\t\t\tif (this.transparent === true) data.transparent = this.transparent;\r\n\t\t\tdata.depthFunc = this.depthFunc;\r\n\t\t\tdata.depthTest = this.depthTest;\r\n\t\t\tdata.depthWrite = this.depthWrite;\r\n\t\t\tdata.colorWrite = this.colorWrite;\r\n\t\t\tdata.stencilWrite = this.stencilWrite;\r\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\r\n\t\t\tdata.stencilFunc = this.stencilFunc;\r\n\t\t\tdata.stencilRef = this.stencilRef;\r\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\r\n\t\t\tdata.stencilFail = this.stencilFail;\r\n\t\t\tdata.stencilZFail = this.stencilZFail;\r\n\t\t\tdata.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\r\n\r\n\t\t\tif (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\r\n\t\t\tif (this.polygonOffset === true) data.polygonOffset = true;\r\n\t\t\tif (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\r\n\t\t\tif (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\r\n\t\t\tif (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\r\n\t\t\tif (this.dashSize !== undefined) data.dashSize = this.dashSize;\r\n\t\t\tif (this.gapSize !== undefined) data.gapSize = this.gapSize;\r\n\t\t\tif (this.scale !== undefined) data.scale = this.scale;\r\n\t\t\tif (this.dithering === true) data.dithering = true;\r\n\t\t\tif (this.alphaTest > 0) data.alphaTest = this.alphaTest;\r\n\t\t\tif (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\r\n\t\t\tif (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\r\n\t\t\tif (this.wireframe === true) data.wireframe = this.wireframe;\r\n\t\t\tif (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\t\tif (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\r\n\t\t\tif (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\r\n\t\t\tif (this.flatShading === true) data.flatShading = this.flatShading;\r\n\t\t\tif (this.visible === false) data.visible = false;\r\n\t\t\tif (this.toneMapped === false) data.toneMapped = false;\r\n\t\t\tif (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\r\n\r\n\t\t\tfunction extractFromCache(cache) {\r\n\t\t\t\tconst values = [];\r\n\r\n\t\t\t\tfor (const key in cache) {\r\n\t\t\t\t\tconst data = cache[key];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\r\n\t\t\tif (isRoot) {\r\n\t\t\t\tconst textures = extractFromCache(meta.textures);\r\n\t\t\t\tconst images = extractFromCache(meta.images);\r\n\t\t\t\tif (textures.length > 0) data.textures = textures;\r\n\t\t\t\tif (images.length > 0) data.images = images;\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.name = source.name;\r\n\t\t\tthis.fog = source.fog;\r\n\t\t\tthis.blending = source.blending;\r\n\t\t\tthis.side = source.side;\r\n\t\t\tthis.vertexColors = source.vertexColors;\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.transparent = source.transparent;\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\r\n\t\t\tthis.stencilFunc = source.stencilFunc;\r\n\t\t\tthis.stencilRef = source.stencilRef;\r\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\r\n\t\t\tthis.stencilFail = source.stencilFail;\r\n\t\t\tthis.stencilZFail = source.stencilZFail;\r\n\t\t\tthis.stencilZPass = source.stencilZPass;\r\n\t\t\tthis.stencilWrite = source.stencilWrite;\r\n\t\t\tconst srcPlanes = source.clippingPlanes;\r\n\t\t\tlet dstPlanes = null;\r\n\r\n\t\t\tif (srcPlanes !== null) {\r\n\t\t\t\tconst n = srcPlanes.length;\r\n\t\t\t\tdstPlanes = new Array(n);\r\n\r\n\t\t\t\tfor (let i = 0; i !== n; ++i) {\r\n\t\t\t\t\tdstPlanes[i] = srcPlanes[i].clone();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.clippingPlanes = dstPlanes;\r\n\t\t\tthis.clipIntersection = source.clipIntersection;\r\n\t\t\tthis.clipShadows = source.clipShadows;\r\n\t\t\tthis.shadowSide = source.shadowSide;\r\n\t\t\tthis.colorWrite = source.colorWrite;\r\n\t\t\tthis.precision = source.precision;\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\t\t\tthis.dithering = source.dithering;\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\t\tthis.alphaToCoverage = source.alphaToCoverage;\r\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\t\t\tthis.visible = source.visible;\r\n\t\t\tthis.toneMapped = source.toneMapped;\r\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.dispatchEvent({\r\n\t\t\t\ttype: 'dispose'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tset needsUpdate(value) {\r\n\t\t\tif (value === true) this.version++;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMaterial.prototype.isMaterial = true;\r\n\r\n\tconst _colorKeywords = {\r\n\t\t'aliceblue': 0xF0F8FF,\r\n\t\t'antiquewhite': 0xFAEBD7,\r\n\t\t'aqua': 0x00FFFF,\r\n\t\t'aquamarine': 0x7FFFD4,\r\n\t\t'azure': 0xF0FFFF,\r\n\t\t'beige': 0xF5F5DC,\r\n\t\t'bisque': 0xFFE4C4,\r\n\t\t'black': 0x000000,\r\n\t\t'blanchedalmond': 0xFFEBCD,\r\n\t\t'blue': 0x0000FF,\r\n\t\t'blueviolet': 0x8A2BE2,\r\n\t\t'brown': 0xA52A2A,\r\n\t\t'burlywood': 0xDEB887,\r\n\t\t'cadetblue': 0x5F9EA0,\r\n\t\t'chartreuse': 0x7FFF00,\r\n\t\t'chocolate': 0xD2691E,\r\n\t\t'coral': 0xFF7F50,\r\n\t\t'cornflowerblue': 0x6495ED,\r\n\t\t'cornsilk': 0xFFF8DC,\r\n\t\t'crimson': 0xDC143C,\r\n\t\t'cyan': 0x00FFFF,\r\n\t\t'darkblue': 0x00008B,\r\n\t\t'darkcyan': 0x008B8B,\r\n\t\t'darkgoldenrod': 0xB8860B,\r\n\t\t'darkgray': 0xA9A9A9,\r\n\t\t'darkgreen': 0x006400,\r\n\t\t'darkgrey': 0xA9A9A9,\r\n\t\t'darkkhaki': 0xBDB76B,\r\n\t\t'darkmagenta': 0x8B008B,\r\n\t\t'darkolivegreen': 0x556B2F,\r\n\t\t'darkorange': 0xFF8C00,\r\n\t\t'darkorchid': 0x9932CC,\r\n\t\t'darkred': 0x8B0000,\r\n\t\t'darksalmon': 0xE9967A,\r\n\t\t'darkseagreen': 0x8FBC8F,\r\n\t\t'darkslateblue': 0x483D8B,\r\n\t\t'darkslategray': 0x2F4F4F,\r\n\t\t'darkslategrey': 0x2F4F4F,\r\n\t\t'darkturquoise': 0x00CED1,\r\n\t\t'darkviolet': 0x9400D3,\r\n\t\t'deeppink': 0xFF1493,\r\n\t\t'deepskyblue': 0x00BFFF,\r\n\t\t'dimgray': 0x696969,\r\n\t\t'dimgrey': 0x696969,\r\n\t\t'dodgerblue': 0x1E90FF,\r\n\t\t'firebrick': 0xB22222,\r\n\t\t'floralwhite': 0xFFFAF0,\r\n\t\t'forestgreen': 0x228B22,\r\n\t\t'fuchsia': 0xFF00FF,\r\n\t\t'gainsboro': 0xDCDCDC,\r\n\t\t'ghostwhite': 0xF8F8FF,\r\n\t\t'gold': 0xFFD700,\r\n\t\t'goldenrod': 0xDAA520,\r\n\t\t'gray': 0x808080,\r\n\t\t'green': 0x008000,\r\n\t\t'greenyellow': 0xADFF2F,\r\n\t\t'grey': 0x808080,\r\n\t\t'honeydew': 0xF0FFF0,\r\n\t\t'hotpink': 0xFF69B4,\r\n\t\t'indianred': 0xCD5C5C,\r\n\t\t'indigo': 0x4B0082,\r\n\t\t'ivory': 0xFFFFF0,\r\n\t\t'khaki': 0xF0E68C,\r\n\t\t'lavender': 0xE6E6FA,\r\n\t\t'lavenderblush': 0xFFF0F5,\r\n\t\t'lawngreen': 0x7CFC00,\r\n\t\t'lemonchiffon': 0xFFFACD,\r\n\t\t'lightblue': 0xADD8E6,\r\n\t\t'lightcoral': 0xF08080,\r\n\t\t'lightcyan': 0xE0FFFF,\r\n\t\t'lightgoldenrodyellow': 0xFAFAD2,\r\n\t\t'lightgray': 0xD3D3D3,\r\n\t\t'lightgreen': 0x90EE90,\r\n\t\t'lightgrey': 0xD3D3D3,\r\n\t\t'lightpink': 0xFFB6C1,\r\n\t\t'lightsalmon': 0xFFA07A,\r\n\t\t'lightseagreen': 0x20B2AA,\r\n\t\t'lightskyblue': 0x87CEFA,\r\n\t\t'lightslategray': 0x778899,\r\n\t\t'lightslategrey': 0x778899,\r\n\t\t'lightsteelblue': 0xB0C4DE,\r\n\t\t'lightyellow': 0xFFFFE0,\r\n\t\t'lime': 0x00FF00,\r\n\t\t'limegreen': 0x32CD32,\r\n\t\t'linen': 0xFAF0E6,\r\n\t\t'magenta': 0xFF00FF,\r\n\t\t'maroon': 0x800000,\r\n\t\t'mediumaquamarine': 0x66CDAA,\r\n\t\t'mediumblue': 0x0000CD,\r\n\t\t'mediumorchid': 0xBA55D3,\r\n\t\t'mediumpurple': 0x9370DB,\r\n\t\t'mediumseagreen': 0x3CB371,\r\n\t\t'mediumslateblue': 0x7B68EE,\r\n\t\t'mediumspringgreen': 0x00FA9A,\r\n\t\t'mediumturquoise': 0x48D1CC,\r\n\t\t'mediumvioletred': 0xC71585,\r\n\t\t'midnightblue': 0x191970,\r\n\t\t'mintcream': 0xF5FFFA,\r\n\t\t'mistyrose': 0xFFE4E1,\r\n\t\t'moccasin': 0xFFE4B5,\r\n\t\t'navajowhite': 0xFFDEAD,\r\n\t\t'navy': 0x000080,\r\n\t\t'oldlace': 0xFDF5E6,\r\n\t\t'olive': 0x808000,\r\n\t\t'olivedrab': 0x6B8E23,\r\n\t\t'orange': 0xFFA500,\r\n\t\t'orangered': 0xFF4500,\r\n\t\t'orchid': 0xDA70D6,\r\n\t\t'palegoldenrod': 0xEEE8AA,\r\n\t\t'palegreen': 0x98FB98,\r\n\t\t'paleturquoise': 0xAFEEEE,\r\n\t\t'palevioletred': 0xDB7093,\r\n\t\t'papayawhip': 0xFFEFD5,\r\n\t\t'peachpuff': 0xFFDAB9,\r\n\t\t'peru': 0xCD853F,\r\n\t\t'pink': 0xFFC0CB,\r\n\t\t'plum': 0xDDA0DD,\r\n\t\t'powderblue': 0xB0E0E6,\r\n\t\t'purple': 0x800080,\r\n\t\t'rebeccapurple': 0x663399,\r\n\t\t'red': 0xFF0000,\r\n\t\t'rosybrown': 0xBC8F8F,\r\n\t\t'royalblue': 0x4169E1,\r\n\t\t'saddlebrown': 0x8B4513,\r\n\t\t'salmon': 0xFA8072,\r\n\t\t'sandybrown': 0xF4A460,\r\n\t\t'seagreen': 0x2E8B57,\r\n\t\t'seashell': 0xFFF5EE,\r\n\t\t'sienna': 0xA0522D,\r\n\t\t'silver': 0xC0C0C0,\r\n\t\t'skyblue': 0x87CEEB,\r\n\t\t'slateblue': 0x6A5ACD,\r\n\t\t'slategray': 0x708090,\r\n\t\t'slategrey': 0x708090,\r\n\t\t'snow': 0xFFFAFA,\r\n\t\t'springgreen': 0x00FF7F,\r\n\t\t'steelblue': 0x4682B4,\r\n\t\t'tan': 0xD2B48C,\r\n\t\t'teal': 0x008080,\r\n\t\t'thistle': 0xD8BFD8,\r\n\t\t'tomato': 0xFF6347,\r\n\t\t'turquoise': 0x40E0D0,\r\n\t\t'violet': 0xEE82EE,\r\n\t\t'wheat': 0xF5DEB3,\r\n\t\t'white': 0xFFFFFF,\r\n\t\t'whitesmoke': 0xF5F5F5,\r\n\t\t'yellow': 0xFFFF00,\r\n\t\t'yellowgreen': 0x9ACD32\r\n\t};\r\n\tconst _hslA = {\r\n\t\th: 0,\r\n\t\ts: 0,\r\n\t\tl: 0\r\n\t};\r\n\tconst _hslB = {\r\n\t\th: 0,\r\n\t\ts: 0,\r\n\t\tl: 0\r\n\t};\r\n\r\n\tfunction hue2rgb(p, q, t) {\r\n\t\tif (t < 0) t += 1;\r\n\t\tif (t > 1) t -= 1;\r\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\r\n\t\tif (t < 1 / 2) return q;\r\n\t\tif (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\r\n\t\treturn p;\r\n\t}\r\n\r\n\tfunction SRGBToLinear(c) {\r\n\t\treturn c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\r\n\t}\r\n\r\n\tfunction LinearToSRGB(c) {\r\n\t\treturn c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\r\n\t}\r\n\r\n\tclass Color {\r\n\t\tconstructor(r, g, b) {\r\n\t\t\tif (g === undefined && b === undefined) {\r\n\t\t\t\t// r is THREE.Color, hex or string\r\n\t\t\t\treturn this.set(r);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.setRGB(r, g, b);\r\n\t\t}\r\n\r\n\t\tset(value) {\r\n\t\t\tif (value && value.isColor) {\r\n\t\t\t\tthis.copy(value);\r\n\t\t\t} else if (typeof value === 'number') {\r\n\t\t\t\tthis.setHex(value);\r\n\t\t\t} else if (typeof value === 'string') {\r\n\t\t\t\tthis.setStyle(value);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetScalar(scalar) {\r\n\t\t\tthis.r = scalar;\r\n\t\t\tthis.g = scalar;\r\n\t\t\tthis.b = scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetHex(hex) {\r\n\t\t\thex = Math.floor(hex);\r\n\t\t\tthis.r = (hex >> 16 & 255) / 255;\r\n\t\t\tthis.g = (hex >> 8 & 255) / 255;\r\n\t\t\tthis.b = (hex & 255) / 255;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetRGB(r, g, b) {\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetHSL(h, s, l) {\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = euclideanModulo(h, 1);\r\n\t\t\ts = clamp(s, 0, 1);\r\n\t\t\tl = clamp(l, 0, 1);\r\n\r\n\t\t\tif (s === 0) {\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\t\t\t} else {\r\n\t\t\t\tconst p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t\t\t\tconst q = 2 * l - p;\r\n\t\t\t\tthis.r = hue2rgb(q, p, h + 1 / 3);\r\n\t\t\t\tthis.g = hue2rgb(q, p, h);\r\n\t\t\t\tthis.b = hue2rgb(q, p, h - 1 / 3);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetStyle(style) {\r\n\t\t\tfunction handleAlpha(string) {\r\n\t\t\t\tif (string === undefined) return;\r\n\r\n\t\t\t\tif (parseFloat(string) < 1) {\r\n\t\t\t\t\tconsole.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet m;\r\n\r\n\t\t\tif (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\r\n\t\t\t\t// rgb / hsl\r\n\t\t\t\tlet color;\r\n\t\t\t\tconst name = m[1];\r\n\t\t\t\tconst components = m[2];\r\n\r\n\t\t\t\tswitch (name) {\r\n\t\t\t\t\tcase 'rgb':\r\n\t\t\t\t\tcase 'rgba':\r\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\r\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min(255, parseInt(color[1], 10)) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min(255, parseInt(color[2], 10)) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min(255, parseInt(color[3], 10)) / 255;\r\n\t\t\t\t\t\t\thandleAlpha(color[4]);\r\n\t\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min(100, parseInt(color[1], 10)) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min(100, parseInt(color[2], 10)) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min(100, parseInt(color[3], 10)) / 100;\r\n\t\t\t\t\t\t\thandleAlpha(color[4]);\r\n\t\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'hsl':\r\n\t\t\t\t\tcase 'hsla':\r\n\t\t\t\t\t\tif (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tconst h = parseFloat(color[1]) / 360;\r\n\t\t\t\t\t\t\tconst s = parseInt(color[2], 10) / 100;\r\n\t\t\t\t\t\t\tconst l = parseInt(color[3], 10) / 100;\r\n\t\t\t\t\t\t\thandleAlpha(color[4]);\r\n\t\t\t\t\t\t\treturn this.setHSL(h, s, l);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\r\n\t\t\t\t// hex color\r\n\t\t\t\tconst hex = m[1];\r\n\t\t\t\tconst size = hex.length;\r\n\r\n\t\t\t\tif (size === 3) {\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\r\n\t\t\t\t\tthis.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\r\n\t\t\t\t\tthis.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t} else if (size === 6) {\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\r\n\t\t\t\t\tthis.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\r\n\t\t\t\t\tthis.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (style && style.length > 0) {\r\n\t\t\t\treturn this.setColorName(style);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetColorName(style) {\r\n\t\t\t// color keywords\r\n\t\t\tconst hex = _colorKeywords[style.toLowerCase()];\r\n\r\n\t\t\tif (hex !== undefined) {\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex(hex);\r\n\t\t\t} else {\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn('THREE.Color: Unknown color ' + style);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this.r, this.g, this.b);\r\n\t\t}\r\n\r\n\t\tcopy(color) {\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyGammaToLinear(color, gammaFactor = 2.0) {\r\n\t\t\tthis.r = Math.pow(color.r, gammaFactor);\r\n\t\t\tthis.g = Math.pow(color.g, gammaFactor);\r\n\t\t\tthis.b = Math.pow(color.b, gammaFactor);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyLinearToGamma(color, gammaFactor = 2.0) {\r\n\t\t\tconst safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\r\n\t\t\tthis.r = Math.pow(color.r, safeInverse);\r\n\t\t\tthis.g = Math.pow(color.g, safeInverse);\r\n\t\t\tthis.b = Math.pow(color.b, safeInverse);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconvertGammaToLinear(gammaFactor) {\r\n\t\t\tthis.copyGammaToLinear(this, gammaFactor);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconvertLinearToGamma(gammaFactor) {\r\n\t\t\tthis.copyLinearToGamma(this, gammaFactor);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopySRGBToLinear(color) {\r\n\t\t\tthis.r = SRGBToLinear(color.r);\r\n\t\t\tthis.g = SRGBToLinear(color.g);\r\n\t\t\tthis.b = SRGBToLinear(color.b);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyLinearToSRGB(color) {\r\n\t\t\tthis.r = LinearToSRGB(color.r);\r\n\t\t\tthis.g = LinearToSRGB(color.g);\r\n\t\t\tthis.b = LinearToSRGB(color.b);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconvertSRGBToLinear() {\r\n\t\t\tthis.copySRGBToLinear(this);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconvertLinearToSRGB() {\r\n\t\t\tthis.copyLinearToSRGB(this);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetHex() {\r\n\t\t\treturn this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\r\n\t\t}\r\n\r\n\t\tgetHexString() {\r\n\t\t\treturn ('000000' + this.getHex().toString(16)).slice(-6);\r\n\t\t}\r\n\r\n\t\tgetHSL(target) {\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\tconst r = this.r,\r\n\t\t\t\t\t\tg = this.g,\r\n\t\t\t\t\t\tb = this.b;\r\n\t\t\tconst max = Math.max(r, g, b);\r\n\t\t\tconst min = Math.min(r, g, b);\r\n\t\t\tlet hue, saturation;\r\n\t\t\tconst lightness = (min + max) / 2.0;\r\n\r\n\t\t\tif (min === max) {\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\t\t\t} else {\r\n\t\t\t\tconst delta = max - min;\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\r\n\r\n\t\t\t\tswitch (max) {\r\n\t\t\t\t\tcase r:\r\n\t\t\t\t\t\thue = (g - b) / delta + (g < b ? 6 : 0);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase g:\r\n\t\t\t\t\t\thue = (b - r) / delta + 2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase b:\r\n\t\t\t\t\t\thue = (r - g) / delta + 4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\thue /= 6;\r\n\t\t\t}\r\n\r\n\t\t\ttarget.h = hue;\r\n\t\t\ttarget.s = saturation;\r\n\t\t\ttarget.l = lightness;\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tgetStyle() {\r\n\t\t\treturn 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\r\n\t\t}\r\n\r\n\t\toffsetHSL(h, s, l) {\r\n\t\t\tthis.getHSL(_hslA);\r\n\t\t\t_hslA.h += h;\r\n\t\t\t_hslA.s += s;\r\n\t\t\t_hslA.l += l;\r\n\t\t\tthis.setHSL(_hslA.h, _hslA.s, _hslA.l);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tadd(color) {\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddColors(color1, color2) {\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScalar(s) {\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsub(color) {\r\n\t\t\tthis.r = Math.max(0, this.r - color.r);\r\n\t\t\tthis.g = Math.max(0, this.g - color.g);\r\n\t\t\tthis.b = Math.max(0, this.b - color.b);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(color) {\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyScalar(s) {\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerp(color, alpha) {\r\n\t\t\tthis.r += (color.r - this.r) * alpha;\r\n\t\t\tthis.g += (color.g - this.g) * alpha;\r\n\t\t\tthis.b += (color.b - this.b) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerpColors(color1, color2, alpha) {\r\n\t\t\tthis.r = color1.r + (color2.r - color1.r) * alpha;\r\n\t\t\tthis.g = color1.g + (color2.g - color1.g) * alpha;\r\n\t\t\tthis.b = color1.b + (color2.b - color1.b) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerpHSL(color, alpha) {\r\n\t\t\tthis.getHSL(_hslA);\r\n\t\t\tcolor.getHSL(_hslB);\r\n\t\t\tconst h = lerp(_hslA.h, _hslB.h, alpha);\r\n\t\t\tconst s = lerp(_hslA.s, _hslB.s, alpha);\r\n\t\t\tconst l = lerp(_hslA.l, _hslB.l, alpha);\r\n\t\t\tthis.setHSL(h, s, l);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(c) {\r\n\t\t\treturn c.r === this.r && c.g === this.g && c.b === this.b;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tthis.r = array[offset];\r\n\t\t\tthis.g = array[offset + 1];\r\n\t\t\tthis.b = array[offset + 2];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tarray[offset] = this.r;\r\n\t\t\tarray[offset + 1] = this.g;\r\n\t\t\tarray[offset + 2] = this.b;\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tfromBufferAttribute(attribute, index) {\r\n\t\t\tthis.r = attribute.getX(index);\r\n\t\t\tthis.g = attribute.getY(index);\r\n\t\t\tthis.b = attribute.getZ(index);\r\n\r\n\t\t\tif (attribute.normalized === true) {\r\n\t\t\t\t// assuming Uint8Array\r\n\t\t\t\tthis.r /= 255;\r\n\t\t\t\tthis.g /= 255;\r\n\t\t\t\tthis.b /= 255;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\treturn this.getHex();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tColor.NAMES = _colorKeywords;\r\n\tColor.prototype.isColor = true;\r\n\tColor.prototype.r = 1;\r\n\tColor.prototype.g = 1;\r\n\tColor.prototype.b = 1;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\topacity: <float>,\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tlightMap: new THREE.Texture( <Image> ),\r\n\t *\tlightMapIntensity: <float>\r\n\t *\r\n\t *\taoMap: new THREE.Texture( <Image> ),\r\n\t *\taoMapIntensity: <float>\r\n\t *\r\n\t *\tspecularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *\tcombine: THREE.Multiply,\r\n\t *\treflectivity: <float>,\r\n\t *\trefractionRatio: <float>,\r\n\t *\r\n\t *\tdepthTest: <bool>,\r\n\t *\tdepthWrite: <bool>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>,\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshBasicMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'MeshBasicMaterial';\r\n\t\t\tthis.color = new Color(0xffffff); // emissive\r\n\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.lightMap = null;\r\n\t\t\tthis.lightMapIntensity = 1.0;\r\n\t\t\tthis.aoMap = null;\r\n\t\t\tthis.aoMapIntensity = 1.0;\r\n\t\t\tthis.specularMap = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.envMap = null;\r\n\t\t\tthis.combine = MultiplyOperation;\r\n\t\t\tthis.reflectivity = 1;\r\n\t\t\tthis.refractionRatio = 0.98;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.wireframeLinecap = 'round';\r\n\t\t\tthis.wireframeLinejoin = 'round';\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.lightMap = source.lightMap;\r\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\t\tthis.aoMap = source.aoMap;\r\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\t\tthis.specularMap = source.specularMap;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.envMap = source.envMap;\r\n\t\t\tthis.combine = source.combine;\r\n\t\t\tthis.reflectivity = source.reflectivity;\r\n\t\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\r\n\r\n\tconst _vector$9 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vector2$1 = /*@__PURE__*/new Vector2();\r\n\r\n\tclass BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tif (Array.isArray(array)) {\r\n\t\t\t\tthrow new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\r\n\t\t\t}\r\n\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.array = array;\r\n\t\t\tthis.itemSize = itemSize;\r\n\t\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\r\n\t\t\tthis.normalized = normalized === true;\r\n\t\t\tthis.usage = StaticDrawUsage;\r\n\t\t\tthis.updateRange = {\r\n\t\t\t\toffset: 0,\r\n\t\t\t\tcount: -1\r\n\t\t\t};\r\n\t\t\tthis.version = 0;\r\n\t\t}\r\n\r\n\t\tonUploadCallback() {}\r\n\r\n\t\tset needsUpdate(value) {\r\n\t\t\tif (value === true) this.version++;\r\n\t\t}\r\n\r\n\t\tsetUsage(value) {\r\n\t\t\tthis.usage = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.name = source.name;\r\n\t\t\tthis.array = new source.array.constructor(source.array);\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\t\tthis.count = source.count;\r\n\t\t\tthis.normalized = source.normalized;\r\n\t\t\tthis.usage = source.usage;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyAt(index1, attribute, index2) {\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\t\tfor (let i = 0, l = this.itemSize; i < l; i++) {\r\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyArray(array) {\r\n\t\t\tthis.array.set(array);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyColorsArray(colors) {\r\n\t\t\tconst array = this.array;\r\n\t\t\tlet offset = 0;\r\n\r\n\t\t\tfor (let i = 0, l = colors.length; i < l; i++) {\r\n\t\t\t\tlet color = colors[i];\r\n\r\n\t\t\t\tif (color === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\r\n\t\t\t\t\tcolor = new Color();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[offset++] = color.r;\r\n\t\t\t\tarray[offset++] = color.g;\r\n\t\t\t\tarray[offset++] = color.b;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyVector2sArray(vectors) {\r\n\t\t\tconst array = this.array;\r\n\t\t\tlet offset = 0;\r\n\r\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\r\n\t\t\t\tlet vector = vectors[i];\r\n\r\n\t\t\t\tif (vector === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\r\n\t\t\t\t\tvector = new Vector2();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[offset++] = vector.x;\r\n\t\t\t\tarray[offset++] = vector.y;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyVector3sArray(vectors) {\r\n\t\t\tconst array = this.array;\r\n\t\t\tlet offset = 0;\r\n\r\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\r\n\t\t\t\tlet vector = vectors[i];\r\n\r\n\t\t\t\tif (vector === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\r\n\t\t\t\t\tvector = new Vector3();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[offset++] = vector.x;\r\n\t\t\t\tarray[offset++] = vector.y;\r\n\t\t\t\tarray[offset++] = vector.z;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyVector4sArray(vectors) {\r\n\t\t\tconst array = this.array;\r\n\t\t\tlet offset = 0;\r\n\r\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\r\n\t\t\t\tlet vector = vectors[i];\r\n\r\n\t\t\t\tif (vector === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\r\n\t\t\t\t\tvector = new Vector4();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[offset++] = vector.x;\r\n\t\t\t\tarray[offset++] = vector.y;\r\n\t\t\t\tarray[offset++] = vector.z;\r\n\t\t\t\tarray[offset++] = vector.w;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyMatrix3(m) {\r\n\t\t\tif (this.itemSize === 2) {\r\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t\t_vector2$1.fromBufferAttribute(this, i);\r\n\r\n\t\t\t\t\t_vector2$1.applyMatrix3(m);\r\n\r\n\t\t\t\t\tthis.setXY(i, _vector2$1.x, _vector2$1.y);\r\n\t\t\t\t}\r\n\t\t\t} else if (this.itemSize === 3) {\r\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t\t_vector$9.fromBufferAttribute(this, i);\r\n\r\n\t\t\t\t\t_vector$9.applyMatrix3(m);\r\n\r\n\t\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(m) {\r\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t_vector$9.x = this.getX(i);\r\n\t\t\t\t_vector$9.y = this.getY(i);\r\n\t\t\t\t_vector$9.z = this.getZ(i);\r\n\r\n\t\t\t\t_vector$9.applyMatrix4(m);\r\n\r\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyNormalMatrix(m) {\r\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t_vector$9.x = this.getX(i);\r\n\t\t\t\t_vector$9.y = this.getY(i);\r\n\t\t\t\t_vector$9.z = this.getZ(i);\r\n\r\n\t\t\t\t_vector$9.applyNormalMatrix(m);\r\n\r\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttransformDirection(m) {\r\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t_vector$9.x = this.getX(i);\r\n\t\t\t\t_vector$9.y = this.getY(i);\r\n\t\t\t\t_vector$9.z = this.getZ(i);\r\n\r\n\t\t\t\t_vector$9.transformDirection(m);\r\n\r\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tset(value, offset = 0) {\r\n\t\t\tthis.array.set(value, offset);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetX(index) {\r\n\t\t\treturn this.array[index * this.itemSize];\r\n\t\t}\r\n\r\n\t\tsetX(index, x) {\r\n\t\t\tthis.array[index * this.itemSize] = x;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetY(index) {\r\n\t\t\treturn this.array[index * this.itemSize + 1];\r\n\t\t}\r\n\r\n\t\tsetY(index, y) {\r\n\t\t\tthis.array[index * this.itemSize + 1] = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetZ(index) {\r\n\t\t\treturn this.array[index * this.itemSize + 2];\r\n\t\t}\r\n\r\n\t\tsetZ(index, z) {\r\n\t\t\tthis.array[index * this.itemSize + 2] = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetW(index) {\r\n\t\t\treturn this.array[index * this.itemSize + 3];\r\n\t\t}\r\n\r\n\t\tsetW(index, w) {\r\n\t\t\tthis.array[index * this.itemSize + 3] = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetXY(index, x, y) {\r\n\t\t\tindex *= this.itemSize;\r\n\t\t\tthis.array[index + 0] = x;\r\n\t\t\tthis.array[index + 1] = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetXYZ(index, x, y, z) {\r\n\t\t\tindex *= this.itemSize;\r\n\t\t\tthis.array[index + 0] = x;\r\n\t\t\tthis.array[index + 1] = y;\r\n\t\t\tthis.array[index + 2] = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetXYZW(index, x, y, z, w) {\r\n\t\t\tindex *= this.itemSize;\r\n\t\t\tthis.array[index + 0] = x;\r\n\t\t\tthis.array[index + 1] = y;\r\n\t\t\tthis.array[index + 2] = z;\r\n\t\t\tthis.array[index + 3] = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tonUpload(callback) {\r\n\t\t\tthis.onUploadCallback = callback;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this.array, this.itemSize).copy(this);\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = {\r\n\t\t\t\titemSize: this.itemSize,\r\n\t\t\t\ttype: this.array.constructor.name,\r\n\t\t\t\tarray: Array.prototype.slice.call(this.array),\r\n\t\t\t\tnormalized: this.normalized\r\n\t\t\t};\r\n\t\t\tif (this.name !== '') data.name = this.name;\r\n\t\t\tif (this.usage !== StaticDrawUsage) data.usage = this.usage;\r\n\t\t\tif (this.updateRange.offset !== 0 || this.updateRange.count !== -1) data.updateRange = this.updateRange;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBufferAttribute.prototype.isBufferAttribute = true; //\r\n\r\n\tclass Int8BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Int8Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Uint8BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Uint8Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Uint8ClampedBufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Uint8ClampedArray(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Int16BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Int16Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Uint16BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Int32BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Int32Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Uint32BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Uint32Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Float16BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\r\n\r\n\tclass Float32BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Float32Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Float64BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Float64Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t} //\r\n\r\n\tlet _id = 0;\r\n\r\n\tconst _m1 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _obj = /*@__PURE__*/new Object3D();\r\n\r\n\tconst _offset = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _box$1 = /*@__PURE__*/new Box3();\r\n\r\n\tconst _boxMorphTargets = /*@__PURE__*/new Box3();\r\n\r\n\tconst _vector$8 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass BufferGeometry extends EventDispatcher {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tObject.defineProperty(this, 'id', {\r\n\t\t\t\tvalue: _id++\r\n\t\t\t});\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.type = 'BufferGeometry';\r\n\t\t\tthis.index = null;\r\n\t\t\tthis.attributes = {};\r\n\t\t\tthis.morphAttributes = {};\r\n\t\t\tthis.morphTargetsRelative = false;\r\n\t\t\tthis.groups = [];\r\n\t\t\tthis.boundingBox = null;\r\n\t\t\tthis.boundingSphere = null;\r\n\t\t\tthis.drawRange = {\r\n\t\t\t\tstart: 0,\r\n\t\t\t\tcount: Infinity\r\n\t\t\t};\r\n\t\t\tthis.userData = {};\r\n\t\t}\r\n\r\n\t\tgetIndex() {\r\n\t\t\treturn this.index;\r\n\t\t}\r\n\r\n\t\tsetIndex(index) {\r\n\t\t\tif (Array.isArray(index)) {\r\n\t\t\t\tthis.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis.index = index;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetAttribute(name) {\r\n\t\t\treturn this.attributes[name];\r\n\t\t}\r\n\r\n\t\tsetAttribute(name, attribute) {\r\n\t\t\tthis.attributes[name] = attribute;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdeleteAttribute(name) {\r\n\t\t\tdelete this.attributes[name];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\thasAttribute(name) {\r\n\t\t\treturn this.attributes[name] !== undefined;\r\n\t\t}\r\n\r\n\t\taddGroup(start, count, materialIndex = 0) {\r\n\t\t\tthis.groups.push({\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tclearGroups() {\r\n\t\t\tthis.groups = [];\r\n\t\t}\r\n\r\n\t\tsetDrawRange(start, count) {\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(matrix) {\r\n\t\t\tconst position = this.attributes.position;\r\n\r\n\t\t\tif (position !== undefined) {\r\n\t\t\t\tposition.applyMatrix4(matrix);\r\n\t\t\t\tposition.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tconst normal = this.attributes.normal;\r\n\r\n\t\t\tif (normal !== undefined) {\r\n\t\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix(matrix);\r\n\t\t\t\tnormal.applyNormalMatrix(normalMatrix);\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tconst tangent = this.attributes.tangent;\r\n\r\n\t\t\tif (tangent !== undefined) {\r\n\t\t\t\ttangent.transformDirection(matrix);\r\n\t\t\t\ttangent.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.boundingBox !== null) {\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.boundingSphere !== null) {\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyQuaternion(q) {\r\n\t\t\t_m1.makeRotationFromQuaternion(q);\r\n\r\n\t\t\tthis.applyMatrix4(_m1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotateX(angle) {\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\t\t_m1.makeRotationX(angle);\r\n\r\n\t\t\tthis.applyMatrix4(_m1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotateY(angle) {\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\t\t_m1.makeRotationY(angle);\r\n\r\n\t\t\tthis.applyMatrix4(_m1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotateZ(angle) {\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\t\t_m1.makeRotationZ(angle);\r\n\r\n\t\t\tthis.applyMatrix4(_m1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslate(x, y, z) {\r\n\t\t\t// translate geometry\r\n\t\t\t_m1.makeTranslation(x, y, z);\r\n\r\n\t\t\tthis.applyMatrix4(_m1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tscale(x, y, z) {\r\n\t\t\t// scale geometry\r\n\t\t\t_m1.makeScale(x, y, z);\r\n\r\n\t\t\tthis.applyMatrix4(_m1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlookAt(vector) {\r\n\t\t\t_obj.lookAt(vector);\r\n\r\n\t\t\t_obj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix4(_obj.matrix);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcenter() {\r\n\t\t\tthis.computeBoundingBox();\r\n\t\t\tthis.boundingBox.getCenter(_offset).negate();\r\n\t\t\tthis.translate(_offset.x, _offset.y, _offset.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromPoints(points) {\r\n\t\t\tconst position = [];\r\n\r\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\r\n\t\t\t\tconst point = points[i];\r\n\t\t\t\tposition.push(point.x, point.y, point.z || 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(position, 3));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcomputeBoundingBox() {\r\n\t\t\tif (this.boundingBox === null) {\r\n\t\t\t\tthis.boundingBox = new Box3();\r\n\t\t\t}\r\n\r\n\t\t\tconst position = this.attributes.position;\r\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\r\n\r\n\t\t\tif (position && position.isGLBufferAttribute) {\r\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\r\n\t\t\t\tthis.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (position !== undefined) {\r\n\t\t\t\tthis.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\r\n\r\n\t\t\t\tif (morphAttributesPosition) {\r\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\r\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\r\n\r\n\t\t\t\t\t\t_box$1.setFromBufferAttribute(morphAttribute);\r\n\r\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\r\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.min, _box$1.min);\r\n\r\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\r\n\r\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.max, _box$1.max);\r\n\r\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.min);\r\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.max);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.boundingBox.makeEmpty();\r\n\t\t\t}\r\n\r\n\t\t\tif (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\r\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcomputeBoundingSphere() {\r\n\t\t\tif (this.boundingSphere === null) {\r\n\t\t\t\tthis.boundingSphere = new Sphere();\r\n\t\t\t}\r\n\r\n\t\t\tconst position = this.attributes.position;\r\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\r\n\r\n\t\t\tif (position && position.isGLBufferAttribute) {\r\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\r\n\t\t\t\tthis.boundingSphere.set(new Vector3(), Infinity);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (position) {\r\n\t\t\t\t// first, find the center of the bounding sphere\r\n\t\t\t\tconst center = this.boundingSphere.center;\r\n\r\n\t\t\t\t_box$1.setFromBufferAttribute(position); // process morph attributes if present\r\n\r\n\r\n\t\t\t\tif (morphAttributesPosition) {\r\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\r\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\r\n\r\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute(morphAttribute);\r\n\r\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\r\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.min, _boxMorphTargets.min);\r\n\r\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\r\n\r\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.max, _boxMorphTargets.max);\r\n\r\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.min);\r\n\r\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.max);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_box$1.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\r\n\t\t\t\tlet maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor (let i = 0, il = position.count; i < il; i++) {\r\n\t\t\t\t\t_vector$8.fromBufferAttribute(position, i);\r\n\r\n\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\r\n\t\t\t\t} // process morph attributes if present\r\n\r\n\r\n\t\t\t\tif (morphAttributesPosition) {\r\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\r\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\r\n\t\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\r\n\r\n\t\t\t\t\t\tfor (let j = 0, jl = morphAttribute.count; j < jl; j++) {\r\n\t\t\t\t\t\t\t_vector$8.fromBufferAttribute(morphAttribute, j);\r\n\r\n\t\t\t\t\t\t\tif (morphTargetsRelative) {\r\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute(position, j);\r\n\r\n\t\t\t\t\t\t\t\t_vector$8.add(_offset);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt(maxRadiusSq);\r\n\r\n\t\t\t\tif (isNaN(this.boundingSphere.radius)) {\r\n\t\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcomputeTangents() {\r\n\t\t\tconst index = this.index;\r\n\t\t\tconst attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\r\n\t\t\t// (per vertex tangents)\r\n\r\n\t\t\tif (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\r\n\t\t\t\tconsole.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst indices = index.array;\r\n\t\t\tconst positions = attributes.position.array;\r\n\t\t\tconst normals = attributes.normal.array;\r\n\t\t\tconst uvs = attributes.uv.array;\r\n\t\t\tconst nVertices = positions.length / 3;\r\n\r\n\t\t\tif (attributes.tangent === undefined) {\r\n\t\t\t\tthis.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\r\n\t\t\t}\r\n\r\n\t\t\tconst tangents = attributes.tangent.array;\r\n\t\t\tconst tan1 = [],\r\n\t\t\t\t\t\ttan2 = [];\r\n\r\n\t\t\tfor (let i = 0; i < nVertices; i++) {\r\n\t\t\t\ttan1[i] = new Vector3();\r\n\t\t\t\ttan2[i] = new Vector3();\r\n\t\t\t}\r\n\r\n\t\t\tconst vA = new Vector3(),\r\n\t\t\t\t\t\tvB = new Vector3(),\r\n\t\t\t\t\t\tvC = new Vector3(),\r\n\t\t\t\t\t\tuvA = new Vector2(),\r\n\t\t\t\t\t\tuvB = new Vector2(),\r\n\t\t\t\t\t\tuvC = new Vector2(),\r\n\t\t\t\t\t\tsdir = new Vector3(),\r\n\t\t\t\t\t\ttdir = new Vector3();\r\n\r\n\t\t\tfunction handleTriangle(a, b, c) {\r\n\t\t\t\tvA.fromArray(positions, a * 3);\r\n\t\t\t\tvB.fromArray(positions, b * 3);\r\n\t\t\t\tvC.fromArray(positions, c * 3);\r\n\t\t\t\tuvA.fromArray(uvs, a * 2);\r\n\t\t\t\tuvB.fromArray(uvs, b * 2);\r\n\t\t\t\tuvC.fromArray(uvs, c * 2);\r\n\t\t\t\tvB.sub(vA);\r\n\t\t\t\tvC.sub(vA);\r\n\t\t\t\tuvB.sub(uvA);\r\n\t\t\t\tuvC.sub(uvA);\r\n\t\t\t\tconst r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\r\n\r\n\t\t\t\tif (!isFinite(r)) return;\r\n\t\t\t\tsdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\r\n\t\t\t\ttdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\r\n\t\t\t\ttan1[a].add(sdir);\r\n\t\t\t\ttan1[b].add(sdir);\r\n\t\t\t\ttan1[c].add(sdir);\r\n\t\t\t\ttan2[a].add(tdir);\r\n\t\t\t\ttan2[b].add(tdir);\r\n\t\t\t\ttan2[c].add(tdir);\r\n\t\t\t}\r\n\r\n\t\t\tlet groups = this.groups;\r\n\r\n\t\t\tif (groups.length === 0) {\r\n\t\t\t\tgroups = [{\r\n\t\t\t\t\tstart: 0,\r\n\t\t\t\t\tcount: indices.length\r\n\t\t\t\t}];\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\r\n\t\t\t\tconst group = groups[i];\r\n\t\t\t\tconst start = group.start;\r\n\t\t\t\tconst count = group.count;\r\n\r\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\r\n\t\t\t\t\thandleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst tmp = new Vector3(),\r\n\t\t\t\t\t\ttmp2 = new Vector3();\r\n\t\t\tconst n = new Vector3(),\r\n\t\t\t\t\t\tn2 = new Vector3();\r\n\r\n\t\t\tfunction handleVertex(v) {\r\n\t\t\t\tn.fromArray(normals, v * 3);\r\n\t\t\t\tn2.copy(n);\r\n\t\t\t\tconst t = tan1[v]; // Gram-Schmidt orthogonalize\r\n\r\n\t\t\t\ttmp.copy(t);\r\n\t\t\t\ttmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\r\n\r\n\t\t\t\ttmp2.crossVectors(n2, t);\r\n\t\t\t\tconst test = tmp2.dot(tan2[v]);\r\n\t\t\t\tconst w = test < 0.0 ? -1.0 : 1.0;\r\n\t\t\t\ttangents[v * 4] = tmp.x;\r\n\t\t\t\ttangents[v * 4 + 1] = tmp.y;\r\n\t\t\t\ttangents[v * 4 + 2] = tmp.z;\r\n\t\t\t\ttangents[v * 4 + 3] = w;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\r\n\t\t\t\tconst group = groups[i];\r\n\t\t\t\tconst start = group.start;\r\n\t\t\t\tconst count = group.count;\r\n\r\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\r\n\t\t\t\t\thandleVertex(indices[j + 0]);\r\n\t\t\t\t\thandleVertex(indices[j + 1]);\r\n\t\t\t\t\thandleVertex(indices[j + 2]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcomputeVertexNormals() {\r\n\t\t\tconst index = this.index;\r\n\t\t\tconst positionAttribute = this.getAttribute('position');\r\n\r\n\t\t\tif (positionAttribute !== undefined) {\r\n\t\t\t\tlet normalAttribute = this.getAttribute('normal');\r\n\r\n\t\t\t\tif (normalAttribute === undefined) {\r\n\t\t\t\t\tnormalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\r\n\t\t\t\t\tthis.setAttribute('normal', normalAttribute);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// reset existing normals to zero\r\n\t\t\t\t\tfor (let i = 0, il = normalAttribute.count; i < il; i++) {\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(i, 0, 0, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pA = new Vector3(),\r\n\t\t\t\t\t\t\tpB = new Vector3(),\r\n\t\t\t\t\t\t\tpC = new Vector3();\r\n\t\t\t\tconst nA = new Vector3(),\r\n\t\t\t\t\t\t\tnB = new Vector3(),\r\n\t\t\t\t\t\t\tnC = new Vector3();\r\n\t\t\t\tconst cb = new Vector3(),\r\n\t\t\t\t\t\t\tab = new Vector3(); // indexed elements\r\n\r\n\t\t\t\tif (index) {\r\n\t\t\t\t\tfor (let i = 0, il = index.count; i < il; i += 3) {\r\n\t\t\t\t\t\tconst vA = index.getX(i + 0);\r\n\t\t\t\t\t\tconst vB = index.getX(i + 1);\r\n\t\t\t\t\t\tconst vC = index.getX(i + 2);\r\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, vA);\r\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, vB);\r\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, vC);\r\n\t\t\t\t\t\tcb.subVectors(pC, pB);\r\n\t\t\t\t\t\tab.subVectors(pA, pB);\r\n\t\t\t\t\t\tcb.cross(ab);\r\n\t\t\t\t\t\tnA.fromBufferAttribute(normalAttribute, vA);\r\n\t\t\t\t\t\tnB.fromBufferAttribute(normalAttribute, vB);\r\n\t\t\t\t\t\tnC.fromBufferAttribute(normalAttribute, vC);\r\n\t\t\t\t\t\tnA.add(cb);\r\n\t\t\t\t\t\tnB.add(cb);\r\n\t\t\t\t\t\tnC.add(cb);\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\t\t\t\t\tfor (let i = 0, il = positionAttribute.count; i < il; i += 3) {\r\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, i + 0);\r\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, i + 1);\r\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, i + 2);\r\n\t\t\t\t\t\tcb.subVectors(pC, pB);\r\n\t\t\t\t\t\tab.subVectors(pA, pB);\r\n\t\t\t\t\t\tcb.cross(ab);\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 0, cb.x, cb.y, cb.z);\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 1, cb.x, cb.y, cb.z);\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 2, cb.x, cb.y, cb.z);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.normalizeNormals();\r\n\t\t\t\tnormalAttribute.needsUpdate = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmerge(geometry, offset) {\r\n\t\t\tif (!(geometry && geometry.isBufferGeometry)) {\r\n\t\t\t\tconsole.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (offset === undefined) {\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tconsole.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\r\n\t\t\t}\r\n\r\n\t\t\tconst attributes = this.attributes;\r\n\r\n\t\t\tfor (const key in attributes) {\r\n\t\t\t\tif (geometry.attributes[key] === undefined) continue;\r\n\t\t\t\tconst attribute1 = attributes[key];\r\n\t\t\t\tconst attributeArray1 = attribute1.array;\r\n\t\t\t\tconst attribute2 = geometry.attributes[key];\r\n\t\t\t\tconst attributeArray2 = attribute2.array;\r\n\t\t\t\tconst attributeOffset = attribute2.itemSize * offset;\r\n\t\t\t\tconst length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\r\n\r\n\t\t\t\tfor (let i = 0, j = attributeOffset; i < length; i++, j++) {\r\n\t\t\t\t\tattributeArray1[j] = attributeArray2[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tnormalizeNormals() {\r\n\t\t\tconst normals = this.attributes.normal;\r\n\r\n\t\t\tfor (let i = 0, il = normals.count; i < il; i++) {\r\n\t\t\t\t_vector$8.fromBufferAttribute(normals, i);\r\n\r\n\t\t\t\t_vector$8.normalize();\r\n\r\n\t\t\t\tnormals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoNonIndexed() {\r\n\t\t\tfunction convertBufferAttribute(attribute, indices) {\r\n\t\t\t\tconst array = attribute.array;\r\n\t\t\t\tconst itemSize = attribute.itemSize;\r\n\t\t\t\tconst normalized = attribute.normalized;\r\n\t\t\t\tconst array2 = new array.constructor(indices.length * itemSize);\r\n\t\t\t\tlet index = 0,\r\n\t\t\t\t\t\tindex2 = 0;\r\n\r\n\t\t\t\tfor (let i = 0, l = indices.length; i < l; i++) {\r\n\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\r\n\t\t\t\t\t\tindex = indices[i] * attribute.data.stride + attribute.offset;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tindex = indices[i] * itemSize;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let j = 0; j < itemSize; j++) {\r\n\t\t\t\t\t\tarray2[index2++] = array[index++];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new BufferAttribute(array2, itemSize, normalized);\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (this.index === null) {\r\n\t\t\t\tconsole.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tconst geometry2 = new BufferGeometry();\r\n\t\t\tconst indices = this.index.array;\r\n\t\t\tconst attributes = this.attributes; // attributes\r\n\r\n\t\t\tfor (const name in attributes) {\r\n\t\t\t\tconst attribute = attributes[name];\r\n\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\r\n\t\t\t\tgeometry2.setAttribute(name, newAttribute);\r\n\t\t\t} // morph attributes\r\n\r\n\r\n\t\t\tconst morphAttributes = this.morphAttributes;\r\n\r\n\t\t\tfor (const name in morphAttributes) {\r\n\t\t\t\tconst morphArray = [];\r\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\t\tfor (let i = 0, il = morphAttribute.length; i < il; i++) {\r\n\t\t\t\t\tconst attribute = morphAttribute[i];\r\n\t\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\r\n\t\t\t\t\tmorphArray.push(newAttribute);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry2.morphAttributes[name] = morphArray;\r\n\t\t\t}\r\n\r\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\r\n\r\n\t\t\tconst groups = this.groups;\r\n\r\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\r\n\t\t\t\tconst group = groups[i];\r\n\t\t\t\tgeometry2.addGroup(group.start, group.count, group.materialIndex);\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry2;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t}; // standard BufferGeometry serialization\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif (this.name !== '') data.name = this.name;\r\n\t\t\tif (Object.keys(this.userData).length > 0) data.userData = this.userData;\r\n\r\n\t\t\tif (this.parameters !== undefined) {\r\n\t\t\t\tconst parameters = this.parameters;\r\n\r\n\t\t\t\tfor (const key in parameters) {\r\n\t\t\t\t\tif (parameters[key] !== undefined) data[key] = parameters[key];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\t\t\t} // for simplicity the code assumes attributes are not shared across geometries, see #15811\r\n\r\n\r\n\t\t\tdata.data = {\r\n\t\t\t\tattributes: {}\r\n\t\t\t};\r\n\t\t\tconst index = this.index;\r\n\r\n\t\t\tif (index !== null) {\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: Array.prototype.slice.call(index.array)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tconst attributes = this.attributes;\r\n\r\n\t\t\tfor (const key in attributes) {\r\n\t\t\t\tconst attribute = attributes[key];\r\n\t\t\t\tdata.data.attributes[key] = attribute.toJSON(data.data);\r\n\t\t\t}\r\n\r\n\t\t\tconst morphAttributes = {};\r\n\t\t\tlet hasMorphAttributes = false;\r\n\r\n\t\t\tfor (const key in this.morphAttributes) {\r\n\t\t\t\tconst attributeArray = this.morphAttributes[key];\r\n\t\t\t\tconst array = [];\r\n\r\n\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\r\n\t\t\t\t\tconst attribute = attributeArray[i];\r\n\t\t\t\t\tarray.push(attribute.toJSON(data.data));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (array.length > 0) {\r\n\t\t\t\t\tmorphAttributes[key] = array;\r\n\t\t\t\t\thasMorphAttributes = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasMorphAttributes) {\r\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\r\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\r\n\t\t\t}\r\n\r\n\t\t\tconst groups = this.groups;\r\n\r\n\t\t\tif (groups.length > 0) {\r\n\t\t\t\tdata.data.groups = JSON.parse(JSON.stringify(groups));\r\n\t\t\t}\r\n\r\n\t\t\tconst boundingSphere = this.boundingSphere;\r\n\r\n\t\t\tif (boundingSphere !== null) {\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\t// reset\r\n\t\t\tthis.index = null;\r\n\t\t\tthis.attributes = {};\r\n\t\t\tthis.morphAttributes = {};\r\n\t\t\tthis.groups = [];\r\n\t\t\tthis.boundingBox = null;\r\n\t\t\tthis.boundingSphere = null; // used for storing cloned, shared data\r\n\r\n\t\t\tconst data = {}; // name\r\n\r\n\t\t\tthis.name = source.name; // index\r\n\r\n\t\t\tconst index = source.index;\r\n\r\n\t\t\tif (index !== null) {\r\n\t\t\t\tthis.setIndex(index.clone(data));\r\n\t\t\t} // attributes\r\n\r\n\r\n\t\t\tconst attributes = source.attributes;\r\n\r\n\t\t\tfor (const name in attributes) {\r\n\t\t\t\tconst attribute = attributes[name];\r\n\t\t\t\tthis.setAttribute(name, attribute.clone(data));\r\n\t\t\t} // morph attributes\r\n\r\n\r\n\t\t\tconst morphAttributes = source.morphAttributes;\r\n\r\n\t\t\tfor (const name in morphAttributes) {\r\n\t\t\t\tconst array = [];\r\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\t\tfor (let i = 0, l = morphAttribute.length; i < l; i++) {\r\n\t\t\t\t\tarray.push(morphAttribute[i].clone(data));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphAttributes[name] = array;\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative; // groups\r\n\r\n\t\t\tconst groups = source.groups;\r\n\r\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\r\n\t\t\t\tconst group = groups[i];\r\n\t\t\t\tthis.addGroup(group.start, group.count, group.materialIndex);\r\n\t\t\t} // bounding box\r\n\r\n\r\n\t\t\tconst boundingBox = source.boundingBox;\r\n\r\n\t\t\tif (boundingBox !== null) {\r\n\t\t\t\tthis.boundingBox = boundingBox.clone();\r\n\t\t\t} // bounding sphere\r\n\r\n\r\n\t\t\tconst boundingSphere = source.boundingSphere;\r\n\r\n\t\t\tif (boundingSphere !== null) {\r\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\r\n\t\t\t} // draw range\r\n\r\n\r\n\t\t\tthis.drawRange.start = source.drawRange.start;\r\n\t\t\tthis.drawRange.count = source.drawRange.count; // user data\r\n\r\n\t\t\tthis.userData = source.userData; // geometry generator parameters\r\n\r\n\t\t\tif (source.parameters !== undefined) this.parameters = Object.assign({}, source.parameters);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.dispatchEvent({\r\n\t\t\t\ttype: 'dispose'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBufferGeometry.prototype.isBufferGeometry = true;\r\n\r\n\tconst _inverseMatrix$2 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _ray$2 = /*@__PURE__*/new Ray();\r\n\r\n\tconst _sphere$3 = /*@__PURE__*/new Sphere();\r\n\r\n\tconst _vA$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vB$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vC$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _tempA = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _tempB = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _tempC = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _morphA = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _morphB = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _morphC = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _uvA$1 = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _uvB$1 = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _uvC$1 = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _intersectionPoint = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _intersectionPointWorld = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Mesh extends Object3D {\r\n\t\tconstructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Mesh';\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = material;\r\n\t\t\tthis.updateMorphTargets();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\r\n\t\t\tif (source.morphTargetInfluences !== undefined) {\r\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\r\n\t\t\t}\r\n\r\n\t\t\tif (source.morphTargetDictionary !== undefined) {\r\n\t\t\t\tthis.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\r\n\t\t\t}\r\n\r\n\t\t\tthis.material = source.material;\r\n\t\t\tthis.geometry = source.geometry;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tupdateMorphTargets() {\r\n\t\t\tconst geometry = this.geometry;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\t\t\tconst keys = Object.keys(morphAttributes);\r\n\r\n\t\t\t\tif (keys.length > 0) {\r\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\r\n\r\n\t\t\t\t\tif (morphAttribute !== undefined) {\r\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\r\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\r\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\r\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst morphTargets = geometry.morphTargets;\r\n\r\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\r\n\t\t\t\t\tconsole.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\traycast(raycaster, intersects) {\r\n\t\t\tconst geometry = this.geometry;\r\n\t\t\tconst material = this.material;\r\n\t\t\tconst matrixWorld = this.matrixWorld;\r\n\t\t\tif (material === undefined) return; // Checking boundingSphere distance to ray\r\n\r\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere$3.copy(geometry.boundingSphere);\r\n\r\n\t\t\t_sphere$3.applyMatrix4(matrixWorld);\r\n\r\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\r\n\r\n\t\t\t_inverseMatrix$2.copy(matrixWorld).invert();\r\n\r\n\t\t\t_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2); // Check boundingBox before continuing\r\n\r\n\r\n\t\t\tif (geometry.boundingBox !== null) {\r\n\t\t\t\tif (_ray$2.intersectsBox(geometry.boundingBox) === false) return;\r\n\t\t\t}\r\n\r\n\t\t\tlet intersection;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\tconst index = geometry.index;\r\n\t\t\t\tconst position = geometry.attributes.position;\r\n\t\t\t\tconst morphPosition = geometry.morphAttributes.position;\r\n\t\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\r\n\t\t\t\tconst uv = geometry.attributes.uv;\r\n\t\t\t\tconst uv2 = geometry.attributes.uv2;\r\n\t\t\t\tconst groups = geometry.groups;\r\n\t\t\t\tconst drawRange = geometry.drawRange;\r\n\r\n\t\t\t\tif (index !== null) {\r\n\t\t\t\t\t// indexed buffer geometry\r\n\t\t\t\t\tif (Array.isArray(material)) {\r\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst group = groups[i];\r\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\r\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\r\n\t\t\t\t\t\t\tconst end = Math.min(index.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\r\n\r\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\r\n\t\t\t\t\t\t\t\tconst a = index.getX(j);\r\n\t\t\t\t\t\t\t\tconst b = index.getX(j + 1);\r\n\t\t\t\t\t\t\t\tconst c = index.getX(j + 2);\r\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\r\n\r\n\t\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\r\n\r\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\r\n\t\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\r\n\t\t\t\t\t\t\tconst a = index.getX(i);\r\n\t\t\t\t\t\t\tconst b = index.getX(i + 1);\r\n\t\t\t\t\t\t\tconst c = index.getX(i + 2);\r\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\r\n\r\n\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\r\n\r\n\t\t\t\t\t\t\t\tintersects.push(intersection);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (position !== undefined) {\r\n\t\t\t\t\t// non-indexed buffer geometry\r\n\t\t\t\t\tif (Array.isArray(material)) {\r\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst group = groups[i];\r\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\r\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\r\n\t\t\t\t\t\t\tconst end = Math.min(position.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\r\n\r\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\r\n\t\t\t\t\t\t\t\tconst a = j;\r\n\t\t\t\t\t\t\t\tconst b = j + 1;\r\n\t\t\t\t\t\t\t\tconst c = j + 2;\r\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\r\n\r\n\t\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\r\n\r\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\r\n\t\t\t\t\t\tconst end = Math.min(position.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\r\n\t\t\t\t\t\t\tconst a = i;\r\n\t\t\t\t\t\t\tconst b = i + 1;\r\n\t\t\t\t\t\t\tconst c = i + 2;\r\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\r\n\r\n\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\r\n\r\n\t\t\t\t\t\t\t\tintersects.push(intersection);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (geometry.isGeometry) {\r\n\t\t\t\tconsole.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMesh.prototype.isMesh = true;\r\n\r\n\tfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\r\n\t\tlet intersect;\r\n\r\n\t\tif (material.side === BackSide) {\r\n\t\t\tintersect = ray.intersectTriangle(pC, pB, pA, true, point);\r\n\t\t} else {\r\n\t\t\tintersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\r\n\t\t}\r\n\r\n\t\tif (intersect === null) return null;\r\n\r\n\t\t_intersectionPointWorld.copy(point);\r\n\r\n\t\t_intersectionPointWorld.applyMatrix4(object.matrixWorld);\r\n\r\n\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\r\n\t\tif (distance < raycaster.near || distance > raycaster.far) return null;\r\n\t\treturn {\r\n\t\t\tdistance: distance,\r\n\t\t\tpoint: _intersectionPointWorld.clone(),\r\n\t\t\tobject: object\r\n\t\t};\r\n\t}\r\n\r\n\tfunction checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\r\n\t\t_vA$1.fromBufferAttribute(position, a);\r\n\r\n\t\t_vB$1.fromBufferAttribute(position, b);\r\n\r\n\t\t_vC$1.fromBufferAttribute(position, c);\r\n\r\n\t\tconst morphInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif (morphPosition && morphInfluences) {\r\n\t\t\t_morphA.set(0, 0, 0);\r\n\r\n\t\t\t_morphB.set(0, 0, 0);\r\n\r\n\t\t\t_morphC.set(0, 0, 0);\r\n\r\n\t\t\tfor (let i = 0, il = morphPosition.length; i < il; i++) {\r\n\t\t\t\tconst influence = morphInfluences[i];\r\n\t\t\t\tconst morphAttribute = morphPosition[i];\r\n\t\t\t\tif (influence === 0) continue;\r\n\r\n\t\t\t\t_tempA.fromBufferAttribute(morphAttribute, a);\r\n\r\n\t\t\t\t_tempB.fromBufferAttribute(morphAttribute, b);\r\n\r\n\t\t\t\t_tempC.fromBufferAttribute(morphAttribute, c);\r\n\r\n\t\t\t\tif (morphTargetsRelative) {\r\n\t\t\t\t\t_morphA.addScaledVector(_tempA, influence);\r\n\r\n\t\t\t\t\t_morphB.addScaledVector(_tempB, influence);\r\n\r\n\t\t\t\t\t_morphC.addScaledVector(_tempC, influence);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_morphA.addScaledVector(_tempA.sub(_vA$1), influence);\r\n\r\n\t\t\t\t\t_morphB.addScaledVector(_tempB.sub(_vB$1), influence);\r\n\r\n\t\t\t\t\t_morphC.addScaledVector(_tempC.sub(_vC$1), influence);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_vA$1.add(_morphA);\r\n\r\n\t\t\t_vB$1.add(_morphB);\r\n\r\n\t\t\t_vC$1.add(_morphC);\r\n\t\t}\r\n\r\n\t\tif (object.isSkinnedMesh) {\r\n\t\t\tobject.boneTransform(a, _vA$1);\r\n\t\t\tobject.boneTransform(b, _vB$1);\r\n\t\t\tobject.boneTransform(c, _vC$1);\r\n\t\t}\r\n\r\n\t\tconst intersection = checkIntersection(object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint);\r\n\r\n\t\tif (intersection) {\r\n\t\t\tif (uv) {\r\n\t\t\t\t_uvA$1.fromBufferAttribute(uv, a);\r\n\r\n\t\t\t\t_uvB$1.fromBufferAttribute(uv, b);\r\n\r\n\t\t\t\t_uvC$1.fromBufferAttribute(uv, c);\r\n\r\n\t\t\t\tintersection.uv = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\r\n\t\t\t}\r\n\r\n\t\t\tif (uv2) {\r\n\t\t\t\t_uvA$1.fromBufferAttribute(uv2, a);\r\n\r\n\t\t\t\t_uvB$1.fromBufferAttribute(uv2, b);\r\n\r\n\t\t\t\t_uvC$1.fromBufferAttribute(uv2, c);\r\n\r\n\t\t\t\tintersection.uv2 = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\r\n\t\t\t}\r\n\r\n\t\t\tconst face = {\r\n\t\t\t\ta: a,\r\n\t\t\t\tb: b,\r\n\t\t\t\tc: c,\r\n\t\t\t\tnormal: new Vector3(),\r\n\t\t\t\tmaterialIndex: 0\r\n\t\t\t};\r\n\t\t\tTriangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\r\n\t\t\tintersection.face = face;\r\n\t\t}\r\n\r\n\t\treturn intersection;\r\n\t}\r\n\r\n\tclass BoxGeometry extends BufferGeometry {\r\n\t\tconstructor(width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'BoxGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height,\r\n\t\t\t\tdepth: depth,\r\n\t\t\t\twidthSegments: widthSegments,\r\n\t\t\t\theightSegments: heightSegments,\r\n\t\t\t\tdepthSegments: depthSegments\r\n\t\t\t};\r\n\t\t\tconst scope = this; // segments\r\n\r\n\t\t\twidthSegments = Math.floor(widthSegments);\r\n\t\t\theightSegments = Math.floor(heightSegments);\r\n\t\t\tdepthSegments = Math.floor(depthSegments); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tlet numberOfVertices = 0;\r\n\t\t\tlet groupStart = 0; // build each side of the box geometry\r\n\r\n\t\t\tbuildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\r\n\r\n\t\t\tbuildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\r\n\r\n\t\t\tbuildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\r\n\r\n\t\t\tbuildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\r\n\r\n\t\t\tbuildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\r\n\r\n\t\t\tbuildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\r\n\t\t\t// build geometry\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\r\n\t\t\tfunction buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\r\n\t\t\t\tconst segmentWidth = width / gridX;\r\n\t\t\t\tconst segmentHeight = height / gridY;\r\n\t\t\t\tconst widthHalf = width / 2;\r\n\t\t\t\tconst heightHalf = height / 2;\r\n\t\t\t\tconst depthHalf = depth / 2;\r\n\t\t\t\tconst gridX1 = gridX + 1;\r\n\t\t\t\tconst gridY1 = gridY + 1;\r\n\t\t\t\tlet vertexCounter = 0;\r\n\t\t\t\tlet groupCount = 0;\r\n\t\t\t\tconst vector = new Vector3(); // generate vertices, normals and uvs\r\n\r\n\t\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\r\n\t\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\t\t\tconst x = ix * segmentWidth - widthHalf; // set values to correct vector component\r\n\r\n\t\t\t\t\t\tvector[u] = x * udir;\r\n\t\t\t\t\t\tvector[v] = y * vdir;\r\n\t\t\t\t\t\tvector[w] = depthHalf; // now apply vector to vertex buffer\r\n\r\n\t\t\t\t\t\tvertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\r\n\r\n\t\t\t\t\t\tvector[u] = 0;\r\n\t\t\t\t\t\tvector[v] = 0;\r\n\t\t\t\t\t\tvector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\r\n\r\n\t\t\t\t\t\tnormals.push(vector.x, vector.y, vector.z); // uvs\r\n\r\n\t\t\t\t\t\tuvs.push(ix / gridX);\r\n\t\t\t\t\t\tuvs.push(1 - iy / gridY); // counters\r\n\r\n\t\t\t\t\t\tvertexCounter += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // indices\r\n\t\t\t\t// 1. you need three indices to draw a single face\r\n\t\t\t\t// 2. a single segment consists of two faces\r\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\r\n\r\n\r\n\t\t\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * (iy + 1);\r\n\t\t\t\t\t\tconst c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\r\n\t\t\t\t\t\tconst d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\r\n\r\n\t\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\t\tindices.push(b, c, d); // increase counter\r\n\r\n\t\t\t\t\t\tgroupCount += 6;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\r\n\r\n\r\n\t\t\t\tscope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\r\n\r\n\t\t\t\tgroupStart += groupCount; // update total number of vertices\r\n\r\n\t\t\t\tnumberOfVertices += vertexCounter;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\tfunction cloneUniforms(src) {\r\n\t\tconst dst = {};\r\n\r\n\t\tfor (const u in src) {\r\n\t\t\tdst[u] = {};\r\n\r\n\t\t\tfor (const p in src[u]) {\r\n\t\t\t\tconst property = src[u][p];\r\n\r\n\t\t\t\tif (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture || property.isQuaternion)) {\r\n\t\t\t\t\tdst[u][p] = property.clone();\r\n\t\t\t\t} else if (Array.isArray(property)) {\r\n\t\t\t\t\tdst[u][p] = property.slice();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdst[u][p] = property;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn dst;\r\n\t}\r\n\tfunction mergeUniforms(uniforms) {\r\n\t\tconst merged = {};\r\n\r\n\t\tfor (let u = 0; u < uniforms.length; u++) {\r\n\t\t\tconst tmp = cloneUniforms(uniforms[u]);\r\n\r\n\t\t\tfor (const p in tmp) {\r\n\t\t\t\tmerged[p] = tmp[p];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\t} // Legacy\r\n\r\n\tconst UniformsUtils = {\r\n\t\tclone: cloneUniforms,\r\n\t\tmerge: mergeUniforms\r\n\t};\r\n\r\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\r\n\r\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tdefines: { \"label\" : \"value\" },\r\n\t *\tuniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\r\n\t *\r\n\t *\tfragmentShader: <string>,\r\n\t *\tvertexShader: <string>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>,\r\n\t *\r\n\t *\tlights: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tclass ShaderMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'ShaderMaterial';\r\n\t\t\tthis.defines = {};\r\n\t\t\tthis.uniforms = {};\r\n\t\t\tthis.vertexShader = default_vertex;\r\n\t\t\tthis.fragmentShader = default_fragment;\r\n\t\t\tthis.linewidth = 1;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.fog = false; // set to use scene fog\r\n\r\n\t\t\tthis.lights = false; // set to use scene lights\r\n\r\n\t\t\tthis.clipping = false; // set to use user-defined clipping planes\r\n\r\n\t\t\tthis.extensions = {\r\n\t\t\t\tderivatives: false,\r\n\t\t\t\t// set to use derivatives\r\n\t\t\t\tfragDepth: false,\r\n\t\t\t\t// set to use fragment depth values\r\n\t\t\t\tdrawBuffers: false,\r\n\t\t\t\t// set to use draw buffers\r\n\t\t\t\tshaderTextureLOD: false // set to use shader texture LOD\r\n\r\n\t\t\t}; // When rendered geometry doesn't include these attributes but the material does,\r\n\t\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\r\n\t\t\tthis.defaultAttributeValues = {\r\n\t\t\t\t'color': [1, 1, 1],\r\n\t\t\t\t'uv': [0, 0],\r\n\t\t\t\t'uv2': [0, 0]\r\n\t\t\t};\r\n\t\t\tthis.index0AttributeName = undefined;\r\n\t\t\tthis.uniformsNeedUpdate = false;\r\n\t\t\tthis.glslVersion = null;\r\n\r\n\t\t\tif (parameters !== undefined) {\r\n\t\t\t\tif (parameters.attributes !== undefined) {\r\n\t\t\t\t\tconsole.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setValues(parameters);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\t\tthis.vertexShader = source.vertexShader;\r\n\t\t\tthis.uniforms = cloneUniforms(source.uniforms);\r\n\t\t\tthis.defines = Object.assign({}, source.defines);\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.lights = source.lights;\r\n\t\t\tthis.clipping = source.clipping;\r\n\t\t\tthis.extensions = Object.assign({}, source.extensions);\r\n\t\t\tthis.glslVersion = source.glslVersion;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tdata.glslVersion = this.glslVersion;\r\n\t\t\tdata.uniforms = {};\r\n\r\n\t\t\tfor (const name in this.uniforms) {\r\n\t\t\t\tconst uniform = this.uniforms[name];\r\n\t\t\t\tconst value = uniform.value;\r\n\r\n\t\t\t\tif (value && value.isTexture) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 't',\r\n\t\t\t\t\t\tvalue: value.toJSON(meta).uuid\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (value && value.isColor) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 'c',\r\n\t\t\t\t\t\tvalue: value.getHex()\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (value && value.isVector2) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 'v2',\r\n\t\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (value && value.isVector3) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 'v3',\r\n\t\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (value && value.isVector4) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 'v4',\r\n\t\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (value && value.isMatrix3) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 'm3',\r\n\t\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (value && value.isMatrix4) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 'm4',\r\n\t\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t}; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (Object.keys(this.defines).length > 0) data.defines = this.defines;\r\n\t\t\tdata.vertexShader = this.vertexShader;\r\n\t\t\tdata.fragmentShader = this.fragmentShader;\r\n\t\t\tconst extensions = {};\r\n\r\n\t\t\tfor (const key in this.extensions) {\r\n\t\t\t\tif (this.extensions[key] === true) extensions[key] = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (Object.keys(extensions).length > 0) data.extensions = extensions;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tShaderMaterial.prototype.isShaderMaterial = true;\r\n\r\n\tclass Camera extends Object3D {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Camera';\r\n\t\t\tthis.matrixWorldInverse = new Matrix4();\r\n\t\t\tthis.projectionMatrix = new Matrix4();\r\n\t\t\tthis.projectionMatrixInverse = new Matrix4();\r\n\t\t}\r\n\r\n\t\tcopy(source, recursive) {\r\n\t\t\tsuper.copy(source, recursive);\r\n\t\t\tthis.matrixWorldInverse.copy(source.matrixWorldInverse);\r\n\t\t\tthis.projectionMatrix.copy(source.projectionMatrix);\r\n\t\t\tthis.projectionMatrixInverse.copy(source.projectionMatrixInverse);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetWorldDirection(target) {\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\t\t\tconst e = this.matrixWorld.elements;\r\n\t\t\treturn target.set(-e[8], -e[9], -e[10]).normalize();\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\r\n\t\t}\r\n\r\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\r\n\t\t\tsuper.updateWorldMatrix(updateParents, updateChildren);\r\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCamera.prototype.isCamera = true;\r\n\r\n\tclass PerspectiveCamera extends Camera {\r\n\t\tconstructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'PerspectiveCamera';\r\n\t\t\tthis.fov = fov;\r\n\t\t\tthis.zoom = 1;\r\n\t\t\tthis.near = near;\r\n\t\t\tthis.far = far;\r\n\t\t\tthis.focus = 10;\r\n\t\t\tthis.aspect = aspect;\r\n\t\t\tthis.view = null;\r\n\t\t\tthis.filmGauge = 35; // width of the film (default in millimeters)\r\n\r\n\t\t\tthis.filmOffset = 0; // horizontal film offset (same unit as gauge)\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\r\n\t\tcopy(source, recursive) {\r\n\t\t\tsuper.copy(source, recursive);\r\n\t\t\tthis.fov = source.fov;\r\n\t\t\tthis.zoom = source.zoom;\r\n\t\t\tthis.near = source.near;\r\n\t\t\tthis.far = source.far;\r\n\t\t\tthis.focus = source.focus;\r\n\t\t\tthis.aspect = source.aspect;\r\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\r\n\t\t\tthis.filmGauge = source.filmGauge;\r\n\t\t\tthis.filmOffset = source.filmOffset;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t/**\r\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\r\n\t\t *\r\n\t\t * The default film gauge is 35, so that the focal length can be specified for\r\n\t\t * a 35mm (full frame) camera.\r\n\t\t *\r\n\t\t * Values for focal length and film gauge must have the same unit.\r\n\t\t */\r\n\r\n\r\n\t\tsetFocalLength(focalLength) {\r\n\t\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\r\n\t\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\r\n\t\t\tthis.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\t\t/**\r\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\r\n\t\t */\r\n\r\n\r\n\t\tgetFocalLength() {\r\n\t\t\tconst vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\r\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\r\n\t\t}\r\n\r\n\t\tgetEffectiveFOV() {\r\n\t\t\treturn RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom);\r\n\t\t}\r\n\r\n\t\tgetFilmWidth() {\r\n\t\t\t// film not completely covered in portrait format (aspect < 1)\r\n\t\t\treturn this.filmGauge * Math.min(this.aspect, 1);\r\n\t\t}\r\n\r\n\t\tgetFilmHeight() {\r\n\t\t\t// film not completely covered in landscape format (aspect > 1)\r\n\t\t\treturn this.filmGauge / Math.max(this.aspect, 1);\r\n\t\t}\r\n\t\t/**\r\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t\t * multi-monitor/multi-machine setups.\r\n\t\t *\r\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t\t * the monitors are in grid like this\r\n\t\t *\r\n\t\t *\t +---+---+---+\r\n\t\t *\t | A | B | C |\r\n\t\t *\t +---+---+---+\r\n\t\t *\t | D | E | F |\r\n\t\t *\t +---+---+---+\r\n\t\t *\r\n\t\t * then for each monitor you would call it like this\r\n\t\t *\r\n\t\t *\t const w = 1920;\r\n\t\t *\t const h = 1080;\r\n\t\t *\t const fullWidth = w * 3;\r\n\t\t *\t const fullHeight = h * 2;\r\n\t\t *\r\n\t\t *\t --A--\r\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t\t *\t --B--\r\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t\t *\t --C--\r\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t\t *\t --D--\r\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t\t *\t --E--\r\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t\t *\t --F--\r\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t\t *\r\n\t\t *\t Note there is no reason monitors have to be the same size or in a grid.\r\n\t\t */\r\n\r\n\r\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\r\n\t\t\tthis.aspect = fullWidth / fullHeight;\r\n\r\n\t\t\tif (this.view === null) {\r\n\t\t\t\tthis.view = {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tfullWidth: 1,\r\n\t\t\t\t\tfullHeight: 1,\r\n\t\t\t\t\toffsetX: 0,\r\n\t\t\t\t\toffsetY: 0,\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.view.enabled = true;\r\n\t\t\tthis.view.fullWidth = fullWidth;\r\n\t\t\tthis.view.fullHeight = fullHeight;\r\n\t\t\tthis.view.offsetX = x;\r\n\t\t\tthis.view.offsetY = y;\r\n\t\t\tthis.view.width = width;\r\n\t\t\tthis.view.height = height;\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\r\n\t\tclearViewOffset() {\r\n\t\t\tif (this.view !== null) {\r\n\t\t\t\tthis.view.enabled = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\r\n\t\tupdateProjectionMatrix() {\r\n\t\t\tconst near = this.near;\r\n\t\t\tlet top = near * Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom;\r\n\t\t\tlet height = 2 * top;\r\n\t\t\tlet width = this.aspect * height;\r\n\t\t\tlet left = -0.5 * width;\r\n\t\t\tconst view = this.view;\r\n\r\n\t\t\tif (this.view !== null && this.view.enabled) {\r\n\t\t\t\tconst fullWidth = view.fullWidth,\r\n\t\t\t\t\t\t\tfullHeight = view.fullHeight;\r\n\t\t\t\tleft += view.offsetX * width / fullWidth;\r\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\r\n\t\t\t\twidth *= view.width / fullWidth;\r\n\t\t\t\theight *= view.height / fullHeight;\r\n\t\t\t}\r\n\r\n\t\t\tconst skew = this.filmOffset;\r\n\t\t\tif (skew !== 0) left += near * skew / this.getFilmWidth();\r\n\t\t\tthis.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\r\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tdata.object.fov = this.fov;\r\n\t\t\tdata.object.zoom = this.zoom;\r\n\t\t\tdata.object.near = this.near;\r\n\t\t\tdata.object.far = this.far;\r\n\t\t\tdata.object.focus = this.focus;\r\n\t\t\tdata.object.aspect = this.aspect;\r\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\r\n\t\t\tdata.object.filmGauge = this.filmGauge;\r\n\t\t\tdata.object.filmOffset = this.filmOffset;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPerspectiveCamera.prototype.isPerspectiveCamera = true;\r\n\r\n\tconst fov = 90,\r\n\t\t\t\taspect = 1;\r\n\r\n\tclass CubeCamera extends Object3D {\r\n\t\tconstructor(near, far, renderTarget) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CubeCamera';\r\n\r\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget !== true) {\r\n\t\t\t\tconsole.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderTarget = renderTarget;\r\n\t\t\tconst cameraPX = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tcameraPX.layers = this.layers;\r\n\t\t\tcameraPX.up.set(0, -1, 0);\r\n\t\t\tcameraPX.lookAt(new Vector3(1, 0, 0));\r\n\t\t\tthis.add(cameraPX);\r\n\t\t\tconst cameraNX = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tcameraNX.layers = this.layers;\r\n\t\t\tcameraNX.up.set(0, -1, 0);\r\n\t\t\tcameraNX.lookAt(new Vector3(-1, 0, 0));\r\n\t\t\tthis.add(cameraNX);\r\n\t\t\tconst cameraPY = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tcameraPY.layers = this.layers;\r\n\t\t\tcameraPY.up.set(0, 0, 1);\r\n\t\t\tcameraPY.lookAt(new Vector3(0, 1, 0));\r\n\t\t\tthis.add(cameraPY);\r\n\t\t\tconst cameraNY = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tcameraNY.layers = this.layers;\r\n\t\t\tcameraNY.up.set(0, 0, -1);\r\n\t\t\tcameraNY.lookAt(new Vector3(0, -1, 0));\r\n\t\t\tthis.add(cameraNY);\r\n\t\t\tconst cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tcameraPZ.layers = this.layers;\r\n\t\t\tcameraPZ.up.set(0, -1, 0);\r\n\t\t\tcameraPZ.lookAt(new Vector3(0, 0, 1));\r\n\t\t\tthis.add(cameraPZ);\r\n\t\t\tconst cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tcameraNZ.layers = this.layers;\r\n\t\t\tcameraNZ.up.set(0, -1, 0);\r\n\t\t\tcameraNZ.lookAt(new Vector3(0, 0, -1));\r\n\t\t\tthis.add(cameraNZ);\r\n\t\t}\r\n\r\n\t\tupdate(renderer, scene) {\r\n\t\t\tif (this.parent === null) this.updateMatrixWorld();\r\n\t\t\tconst renderTarget = this.renderTarget;\r\n\t\t\tconst [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] = this.children;\r\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\r\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\t\trenderer.xr.enabled = false;\r\n\t\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\t\t\trenderTarget.texture.generateMipmaps = false;\r\n\t\t\trenderer.setRenderTarget(renderTarget, 0);\r\n\t\t\trenderer.render(scene, cameraPX);\r\n\t\t\trenderer.setRenderTarget(renderTarget, 1);\r\n\t\t\trenderer.render(scene, cameraNX);\r\n\t\t\trenderer.setRenderTarget(renderTarget, 2);\r\n\t\t\trenderer.render(scene, cameraPY);\r\n\t\t\trenderer.setRenderTarget(renderTarget, 3);\r\n\t\t\trenderer.render(scene, cameraNY);\r\n\t\t\trenderer.setRenderTarget(renderTarget, 4);\r\n\t\t\trenderer.render(scene, cameraPZ);\r\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\t\t\trenderer.setRenderTarget(renderTarget, 5);\r\n\t\t\trenderer.render(scene, cameraNZ);\r\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\r\n\t\t\trenderer.xr.enabled = currentXrEnabled;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass CubeTexture extends Texture {\r\n\t\tconstructor(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\r\n\t\t\timages = images !== undefined ? images : [];\r\n\t\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\r\n\t\t\tsuper(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\r\n\t\t\tthis.flipY = false;\r\n\t\t}\r\n\r\n\t\tget images() {\r\n\t\t\treturn this.image;\r\n\t\t}\r\n\r\n\t\tset images(value) {\r\n\t\t\tthis.image = value;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCubeTexture.prototype.isCubeTexture = true;\r\n\r\n\tclass WebGLCubeRenderTarget extends WebGLRenderTarget {\r\n\t\tconstructor(size, options, dummy) {\r\n\t\t\tif (Number.isInteger(options)) {\r\n\t\t\t\tconsole.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');\r\n\t\t\t\toptions = dummy;\r\n\t\t\t}\r\n\r\n\t\t\tsuper(size, size, options);\r\n\t\t\toptions = options || {}; // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\r\n\t\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\r\n\t\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\r\n\t\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\r\n\t\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\r\n\t\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\r\n\r\n\t\t\tthis.texture = new CubeTexture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\r\n\t\t\tthis.texture.isRenderTargetTexture = true;\r\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\r\n\t\t\tthis.texture._needsFlipEnvMap = false;\r\n\t\t}\r\n\r\n\t\tfromEquirectangularTexture(renderer, texture) {\r\n\t\t\tthis.texture.type = texture.type;\r\n\t\t\tthis.texture.format = RGBAFormat; // see #18859\r\n\r\n\t\t\tthis.texture.encoding = texture.encoding;\r\n\t\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\r\n\t\t\tthis.texture.minFilter = texture.minFilter;\r\n\t\t\tthis.texture.magFilter = texture.magFilter;\r\n\t\t\tconst shader = {\r\n\t\t\t\tuniforms: {\r\n\t\t\t\t\ttEquirect: {\r\n\t\t\t\t\t\tvalue: null\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tvertexShader:\r\n\t\t\t\t/* glsl */\r\n\t\t\t\t`\r\n\r\n\t\t\t\tvarying vec3 vWorldDirection;\r\n\r\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\r\n\r\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\r\n\r\n\t\t\t\t\t#include <begin_vertex>\r\n\t\t\t\t\t#include <project_vertex>\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\tfragmentShader:\r\n\t\t\t\t/* glsl */\r\n\t\t\t\t`\r\n\r\n\t\t\t\tuniform sampler2D tEquirect;\r\n\r\n\t\t\t\tvarying vec3 vWorldDirection;\r\n\r\n\t\t\t\t#include <common>\r\n\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\r\n\r\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\r\n\r\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\r\n\r\n\t\t\t\t}\r\n\t\t\t`\r\n\t\t\t};\r\n\t\t\tconst geometry = new BoxGeometry(5, 5, 5);\r\n\t\t\tconst material = new ShaderMaterial({\r\n\t\t\t\tname: 'CubemapFromEquirect',\r\n\t\t\t\tuniforms: cloneUniforms(shader.uniforms),\r\n\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\tfragmentShader: shader.fragmentShader,\r\n\t\t\t\tside: BackSide,\r\n\t\t\t\tblending: NoBlending\r\n\t\t\t});\r\n\t\t\tmaterial.uniforms.tEquirect.value = texture;\r\n\t\t\tconst mesh = new Mesh(geometry, material);\r\n\t\t\tconst currentMinFilter = texture.minFilter; // Avoid blurred poles\r\n\r\n\t\t\tif (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\r\n\t\t\tconst camera = new CubeCamera(1, 10, this);\r\n\t\t\tcamera.update(renderer, mesh);\r\n\t\t\ttexture.minFilter = currentMinFilter;\r\n\t\t\tmesh.geometry.dispose();\r\n\t\t\tmesh.material.dispose();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclear(renderer, color, depth, stencil) {\r\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\trenderer.setRenderTarget(this, i);\r\n\t\t\t\trenderer.clear(color, depth, stencil);\r\n\t\t\t}\r\n\r\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\r\n\r\n\tconst _vector1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vector2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _normalMatrix = /*@__PURE__*/new Matrix3();\r\n\r\n\tclass Plane {\r\n\t\tconstructor(normal = new Vector3(1, 0, 0), constant = 0) {\r\n\t\t\t// normal is assumed to be normalized\r\n\t\t\tthis.normal = normal;\r\n\t\t\tthis.constant = constant;\r\n\t\t}\r\n\r\n\t\tset(normal, constant) {\r\n\t\t\tthis.normal.copy(normal);\r\n\t\t\tthis.constant = constant;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetComponents(x, y, z, w) {\r\n\t\t\tthis.normal.set(x, y, z);\r\n\t\t\tthis.constant = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromNormalAndCoplanarPoint(normal, point) {\r\n\t\t\tthis.normal.copy(normal);\r\n\t\t\tthis.constant = -point.dot(this.normal);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromCoplanarPoints(a, b, c) {\r\n\t\t\tconst normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint(normal, a);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(plane) {\r\n\t\t\tthis.normal.copy(plane.normal);\r\n\t\t\tthis.constant = plane.constant;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tnormalize() {\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\t\t\tconst inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar(inverseNormalLength);\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tnegate() {\r\n\t\t\tthis.constant *= -1;\r\n\t\t\tthis.normal.negate();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdistanceToPoint(point) {\r\n\t\t\treturn this.normal.dot(point) + this.constant;\r\n\t\t}\r\n\r\n\t\tdistanceToSphere(sphere) {\r\n\t\t\treturn this.distanceToPoint(sphere.center) - sphere.radius;\r\n\t\t}\r\n\r\n\t\tprojectPoint(point, target) {\r\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\r\n\t\t}\r\n\r\n\t\tintersectLine(line, target) {\r\n\t\t\tconst direction = line.delta(_vector1);\r\n\t\t\tconst denominator = this.normal.dot(direction);\r\n\r\n\t\t\tif (denominator === 0) {\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif (this.distanceToPoint(line.start) === 0) {\r\n\t\t\t\t\treturn target.copy(line.start);\r\n\t\t\t\t} // Unsure if this is the correct method to handle this case.\r\n\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst t = -(line.start.dot(this.normal) + this.constant) / denominator;\r\n\r\n\t\t\tif (t < 0 || t > 1) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy(direction).multiplyScalar(t).add(line.start);\r\n\t\t}\r\n\r\n\t\tintersectsLine(line) {\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\t\t\tconst startSign = this.distanceToPoint(line.start);\r\n\t\t\tconst endSign = this.distanceToPoint(line.end);\r\n\t\t\treturn startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\treturn box.intersectsPlane(this);\r\n\t\t}\r\n\r\n\t\tintersectsSphere(sphere) {\r\n\t\t\treturn sphere.intersectsPlane(this);\r\n\t\t}\r\n\r\n\t\tcoplanarPoint(target) {\r\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.constant);\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(matrix, optionalNormalMatrix) {\r\n\t\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\r\n\r\n\t\t\tconst referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\r\n\t\t\tconst normal = this.normal.applyMatrix3(normalMatrix).normalize();\r\n\t\t\tthis.constant = -referencePoint.dot(normal);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslate(offset) {\r\n\t\t\tthis.constant -= offset.dot(this.normal);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(plane) {\r\n\t\t\treturn plane.normal.equals(this.normal) && plane.constant === this.constant;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPlane.prototype.isPlane = true;\r\n\r\n\tconst _sphere$2 = /*@__PURE__*/new Sphere();\r\n\r\n\tconst _vector$7 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Frustum {\r\n\t\tconstructor(p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane()) {\r\n\t\t\tthis.planes = [p0, p1, p2, p3, p4, p5];\r\n\t\t}\r\n\r\n\t\tset(p0, p1, p2, p3, p4, p5) {\r\n\t\t\tconst planes = this.planes;\r\n\t\t\tplanes[0].copy(p0);\r\n\t\t\tplanes[1].copy(p1);\r\n\t\t\tplanes[2].copy(p2);\r\n\t\t\tplanes[3].copy(p3);\r\n\t\t\tplanes[4].copy(p4);\r\n\t\t\tplanes[5].copy(p5);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(frustum) {\r\n\t\t\tconst planes = this.planes;\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tplanes[i].copy(frustum.planes[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromProjectionMatrix(m) {\r\n\t\t\tconst planes = this.planes;\r\n\t\t\tconst me = m.elements;\r\n\t\t\tconst me0 = me[0],\r\n\t\t\t\t\t\tme1 = me[1],\r\n\t\t\t\t\t\tme2 = me[2],\r\n\t\t\t\t\t\tme3 = me[3];\r\n\t\t\tconst me4 = me[4],\r\n\t\t\t\t\t\tme5 = me[5],\r\n\t\t\t\t\t\tme6 = me[6],\r\n\t\t\t\t\t\tme7 = me[7];\r\n\t\t\tconst me8 = me[8],\r\n\t\t\t\t\t\tme9 = me[9],\r\n\t\t\t\t\t\tme10 = me[10],\r\n\t\t\t\t\t\tme11 = me[11];\r\n\t\t\tconst me12 = me[12],\r\n\t\t\t\t\t\tme13 = me[13],\r\n\t\t\t\t\t\tme14 = me[14],\r\n\t\t\t\t\t\tme15 = me[15];\r\n\t\t\tplanes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\r\n\t\t\tplanes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\r\n\t\t\tplanes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\r\n\t\t\tplanes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\r\n\t\t\tplanes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\r\n\t\t\tplanes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tintersectsObject(object) {\r\n\t\t\tconst geometry = object.geometry;\r\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\r\n\r\n\t\t\treturn this.intersectsSphere(_sphere$2);\r\n\t\t}\r\n\r\n\t\tintersectsSprite(sprite) {\r\n\t\t\t_sphere$2.center.set(0, 0, 0);\r\n\r\n\t\t\t_sphere$2.radius = 0.7071067811865476;\r\n\r\n\t\t\t_sphere$2.applyMatrix4(sprite.matrixWorld);\r\n\r\n\t\t\treturn this.intersectsSphere(_sphere$2);\r\n\t\t}\r\n\r\n\t\tintersectsSphere(sphere) {\r\n\t\t\tconst planes = this.planes;\r\n\t\t\tconst center = sphere.center;\r\n\t\t\tconst negRadius = -sphere.radius;\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tconst distance = planes[i].distanceToPoint(center);\r\n\r\n\t\t\t\tif (distance < negRadius) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\tconst planes = this.planes;\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tconst plane = planes[i]; // corner at max distance\r\n\r\n\t\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tif (plane.distanceToPoint(_vector$7) < 0) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tcontainsPoint(point) {\r\n\t\t\tconst planes = this.planes;\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tif (planes[i].distanceToPoint(point) < 0) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction WebGLAnimation() {\r\n\t\tlet context = null;\r\n\t\tlet isAnimating = false;\r\n\t\tlet animationLoop = null;\r\n\t\tlet requestId = null;\r\n\r\n\t\tfunction onAnimationFrame(time, frame) {\r\n\t\t\tanimationLoop(time, frame);\r\n\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstart: function () {\r\n\t\t\t\tif (isAnimating === true) return;\r\n\t\t\t\tif (animationLoop === null) return;\r\n\t\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\r\n\t\t\t\tisAnimating = true;\r\n\t\t\t},\r\n\t\t\tstop: function () {\r\n\t\t\t\tcontext.cancelAnimationFrame(requestId);\r\n\t\t\t\tisAnimating = false;\r\n\t\t\t},\r\n\t\t\tsetAnimationLoop: function (callback) {\r\n\t\t\t\tanimationLoop = callback;\r\n\t\t\t},\r\n\t\t\tsetContext: function (value) {\r\n\t\t\t\tcontext = value;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLAttributes(gl, capabilities) {\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\t\tconst buffers = new WeakMap();\r\n\r\n\t\tfunction createBuffer(attribute, bufferType) {\r\n\t\t\tconst array = attribute.array;\r\n\t\t\tconst usage = attribute.usage;\r\n\t\t\tconst buffer = gl.createBuffer();\r\n\t\t\tgl.bindBuffer(bufferType, buffer);\r\n\t\t\tgl.bufferData(bufferType, array, usage);\r\n\t\t\tattribute.onUploadCallback();\r\n\t\t\tlet type = gl.FLOAT;\r\n\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\ttype = gl.FLOAT;\r\n\t\t\t} else if (array instanceof Float64Array) {\r\n\t\t\t\tconsole.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\r\n\t\t\t} else if (array instanceof Uint16Array) {\r\n\t\t\t\tif (attribute.isFloat16BufferAttribute) {\r\n\t\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\t\ttype = gl.HALF_FLOAT;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttype = gl.UNSIGNED_SHORT;\r\n\t\t\t\t}\r\n\t\t\t} else if (array instanceof Int16Array) {\r\n\t\t\t\ttype = gl.SHORT;\r\n\t\t\t} else if (array instanceof Uint32Array) {\r\n\t\t\t\ttype = gl.UNSIGNED_INT;\r\n\t\t\t} else if (array instanceof Int32Array) {\r\n\t\t\t\ttype = gl.INT;\r\n\t\t\t} else if (array instanceof Int8Array) {\r\n\t\t\t\ttype = gl.BYTE;\r\n\t\t\t} else if (array instanceof Uint8Array) {\r\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\r\n\t\t\t} else if (array instanceof Uint8ClampedArray) {\r\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tbuffer: buffer,\r\n\t\t\t\ttype: type,\r\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\r\n\t\t\t\tversion: attribute.version\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction updateBuffer(buffer, attribute, bufferType) {\r\n\t\t\tconst array = attribute.array;\r\n\t\t\tconst updateRange = attribute.updateRange;\r\n\t\t\tgl.bindBuffer(bufferType, buffer);\r\n\r\n\t\t\tif (updateRange.count === -1) {\r\n\t\t\t\t// Not using update ranges\r\n\t\t\t\tgl.bufferSubData(bufferType, 0, array);\r\n\t\t\t} else {\r\n\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tupdateRange.count = -1; // reset range\r\n\t\t\t}\r\n\t\t} //\r\n\r\n\r\n\t\tfunction get(attribute) {\r\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\r\n\t\t\treturn buffers.get(attribute);\r\n\t\t}\r\n\r\n\t\tfunction remove(attribute) {\r\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\r\n\t\t\tconst data = buffers.get(attribute);\r\n\r\n\t\t\tif (data) {\r\n\t\t\t\tgl.deleteBuffer(data.buffer);\r\n\t\t\t\tbuffers.delete(attribute);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction update(attribute, bufferType) {\r\n\t\t\tif (attribute.isGLBufferAttribute) {\r\n\t\t\t\tconst cached = buffers.get(attribute);\r\n\r\n\t\t\t\tif (!cached || cached.version < attribute.version) {\r\n\t\t\t\t\tbuffers.set(attribute, {\r\n\t\t\t\t\t\tbuffer: attribute.buffer,\r\n\t\t\t\t\t\ttype: attribute.type,\r\n\t\t\t\t\t\tbytesPerElement: attribute.elementSize,\r\n\t\t\t\t\t\tversion: attribute.version\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\r\n\t\t\tconst data = buffers.get(attribute);\r\n\r\n\t\t\tif (data === undefined) {\r\n\t\t\t\tbuffers.set(attribute, createBuffer(attribute, bufferType));\r\n\t\t\t} else if (data.version < attribute.version) {\r\n\t\t\t\tupdateBuffer(data.buffer, attribute, bufferType);\r\n\t\t\t\tdata.version = attribute.version;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tremove: remove,\r\n\t\t\tupdate: update\r\n\t\t};\r\n\t}\r\n\r\n\tclass PlaneGeometry extends BufferGeometry {\r\n\t\tconstructor(width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'PlaneGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height,\r\n\t\t\t\twidthSegments: widthSegments,\r\n\t\t\t\theightSegments: heightSegments\r\n\t\t\t};\r\n\t\t\tconst width_half = width / 2;\r\n\t\t\tconst height_half = height / 2;\r\n\t\t\tconst gridX = Math.floor(widthSegments);\r\n\t\t\tconst gridY = Math.floor(heightSegments);\r\n\t\t\tconst gridX1 = gridX + 1;\r\n\t\t\tconst gridY1 = gridY + 1;\r\n\t\t\tconst segment_width = width / gridX;\r\n\t\t\tconst segment_height = height / gridY; //\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = [];\r\n\r\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\t\tconst y = iy * segment_height - height_half;\r\n\r\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\t\tconst x = ix * segment_width - width_half;\r\n\t\t\t\t\tvertices.push(x, -y, 0);\r\n\t\t\t\t\tnormals.push(0, 0, 1);\r\n\t\t\t\t\tuvs.push(ix / gridX);\r\n\t\t\t\t\tuvs.push(1 - iy / gridY);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\t\tconst a = ix + gridX1 * iy;\r\n\t\t\t\t\tconst b = ix + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst c = ix + 1 + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst d = ix + 1 + gridX1 * iy;\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\r\n\r\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\r\n\r\n\tvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\r\n\r\n\tvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\r\n\r\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\r\n\r\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\r\n\r\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\r\n\r\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\r\n\r\n\tvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenTint, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenTint * ( D * V );\\n}\\n#endif\";\r\n\r\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\r\n\r\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\r\n\r\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\r\n\r\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\r\n\r\n\tvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\r\n\r\n\tvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\r\n\r\n\tvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\r\n\r\n\tvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\r\n\r\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\r\n\r\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\r\n\r\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\r\n\r\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\r\n\r\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\r\n\r\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\r\n\r\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\r\n\r\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\r\n\r\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\r\n\r\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\r\n\r\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\r\n\r\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\r\n\r\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\r\n\r\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\r\n\r\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tlightMapIrradiance *= PI;\\n\\t#endif\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\r\n\r\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\r\n\r\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\r\n\r\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\r\n\r\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec;\\n\\t\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\t\\treflectVec = reflect( - viewDir, normal );\\n\\t\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treflectVec = refract( - viewDir, normal, refractionRatio );\\n\\t\\t\\t#endif\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\r\n\r\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\r\n\r\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\r\n\r\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\r\n\r\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\r\n\r\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularTintFactor = specularTint;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARTINTMAP\\n\\t\\t\\tspecularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularTintFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenTint = sheenTint;\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n#endif\";\r\n\r\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenTint;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\t\t0, 1,\t\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenTint, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\r\n\r\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\r\n\r\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\r\n\r\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\r\n\r\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\r\n\r\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\r\n\r\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\r\n\r\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\r\n\r\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\r\n\r\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\r\n\r\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\r\n\r\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\r\n\r\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\r\n\r\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\r\n\r\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform vec2 morphTargetsTextureSize;\\n\\t\\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\\n\\t\\t\\tfloat texelIndex = float( vertexIndex * stride + offset );\\n\\t\\t\\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\\n\\t\\t\\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\\n\\t\\t\\treturn texture( morphTargetsTexture, morphUV ).xyz;\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\r\n\r\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#else\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\r\n\r\n\tvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\r\n\r\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\r\n\r\n\tvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\r\n\r\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\r\n\r\n\tvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\r\n\r\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\r\n\r\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\r\n\r\n\tvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\r\n\r\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\r\n\r\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\r\n\r\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\r\n\r\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\r\n\r\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\r\n\r\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\r\n\r\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\r\n\r\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\r\n\r\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\r\n\r\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\r\n\r\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\r\n\r\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\r\n\r\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\r\n\r\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\r\n\r\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\r\n\r\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\r\n\r\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\r\n\r\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\r\n\r\n\tvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationTint, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\r\n\r\n\tvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationTint;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( float roughness, float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\\n\\t\\tvec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\r\n\r\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\r\n\r\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\r\n\r\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\r\n\r\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\r\n\r\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\r\n\r\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\r\n\r\n\tconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\r\n\tconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\r\n\r\n\tconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\r\n\tconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\r\n\r\n\tconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\r\n\tconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\r\n\r\n\tconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\r\n\tconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\r\n\r\n\tconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\r\n\tconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\r\n\r\n\tconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\tconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\r\n\r\n\tconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\tconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\n\tconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\tconst fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\n\tconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\r\n\tconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\n\tconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\r\n\tconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\r\n\r\n\tconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\tconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\n\tconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\r\n\tconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularTint;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARTINTMAP\\n\\t\\tuniform sampler2D specularTintMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenTint;\\n\\tuniform float sheenRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\n\tconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\tconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\n\tconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\tconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\r\n\r\n\tconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\tconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\r\n\r\n\tconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\tconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\r\n\r\n\tconst ShaderChunk = {\r\n\t\talphamap_fragment: alphamap_fragment,\r\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\r\n\t\talphatest_fragment: alphatest_fragment,\r\n\t\talphatest_pars_fragment: alphatest_pars_fragment,\r\n\t\taomap_fragment: aomap_fragment,\r\n\t\taomap_pars_fragment: aomap_pars_fragment,\r\n\t\tbegin_vertex: begin_vertex,\r\n\t\tbeginnormal_vertex: beginnormal_vertex,\r\n\t\tbsdfs: bsdfs,\r\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\r\n\t\tclipping_planes_fragment: clipping_planes_fragment,\r\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\r\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\r\n\t\tclipping_planes_vertex: clipping_planes_vertex,\r\n\t\tcolor_fragment: color_fragment,\r\n\t\tcolor_pars_fragment: color_pars_fragment,\r\n\t\tcolor_pars_vertex: color_pars_vertex,\r\n\t\tcolor_vertex: color_vertex,\r\n\t\tcommon: common,\r\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\r\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\r\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\r\n\t\tdisplacementmap_vertex: displacementmap_vertex,\r\n\t\temissivemap_fragment: emissivemap_fragment,\r\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\r\n\t\tencodings_fragment: encodings_fragment,\r\n\t\tencodings_pars_fragment: encodings_pars_fragment,\r\n\t\tenvmap_fragment: envmap_fragment,\r\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\r\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\r\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\r\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\r\n\t\tenvmap_vertex: envmap_vertex,\r\n\t\tfog_vertex: fog_vertex,\r\n\t\tfog_pars_vertex: fog_pars_vertex,\r\n\t\tfog_fragment: fog_fragment,\r\n\t\tfog_pars_fragment: fog_pars_fragment,\r\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\r\n\t\tlightmap_fragment: lightmap_fragment,\r\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\r\n\t\tlights_lambert_vertex: lights_lambert_vertex,\r\n\t\tlights_pars_begin: lights_pars_begin,\r\n\t\tlights_toon_fragment: lights_toon_fragment,\r\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\r\n\t\tlights_phong_fragment: lights_phong_fragment,\r\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\r\n\t\tlights_physical_fragment: lights_physical_fragment,\r\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\r\n\t\tlights_fragment_begin: lights_fragment_begin,\r\n\t\tlights_fragment_maps: lights_fragment_maps,\r\n\t\tlights_fragment_end: lights_fragment_end,\r\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\r\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\r\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\r\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\r\n\t\tmap_fragment: map_fragment,\r\n\t\tmap_pars_fragment: map_pars_fragment,\r\n\t\tmap_particle_fragment: map_particle_fragment,\r\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\r\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\r\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\r\n\t\tmorphnormal_vertex: morphnormal_vertex,\r\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\r\n\t\tmorphtarget_vertex: morphtarget_vertex,\r\n\t\tnormal_fragment_begin: normal_fragment_begin,\r\n\t\tnormal_fragment_maps: normal_fragment_maps,\r\n\t\tnormal_pars_fragment: normal_pars_fragment,\r\n\t\tnormal_pars_vertex: normal_pars_vertex,\r\n\t\tnormal_vertex: normal_vertex,\r\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\r\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\r\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\r\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\r\n\t\toutput_fragment: output_fragment,\r\n\t\tpacking: packing,\r\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\r\n\t\tproject_vertex: project_vertex,\r\n\t\tdithering_fragment: dithering_fragment,\r\n\t\tdithering_pars_fragment: dithering_pars_fragment,\r\n\t\troughnessmap_fragment: roughnessmap_fragment,\r\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\r\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\r\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\r\n\t\tshadowmap_vertex: shadowmap_vertex,\r\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\r\n\t\tskinbase_vertex: skinbase_vertex,\r\n\t\tskinning_pars_vertex: skinning_pars_vertex,\r\n\t\tskinning_vertex: skinning_vertex,\r\n\t\tskinnormal_vertex: skinnormal_vertex,\r\n\t\tspecularmap_fragment: specularmap_fragment,\r\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\r\n\t\ttonemapping_fragment: tonemapping_fragment,\r\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\r\n\t\ttransmission_fragment: transmission_fragment,\r\n\t\ttransmission_pars_fragment: transmission_pars_fragment,\r\n\t\tuv_pars_fragment: uv_pars_fragment,\r\n\t\tuv_pars_vertex: uv_pars_vertex,\r\n\t\tuv_vertex: uv_vertex,\r\n\t\tuv2_pars_fragment: uv2_pars_fragment,\r\n\t\tuv2_pars_vertex: uv2_pars_vertex,\r\n\t\tuv2_vertex: uv2_vertex,\r\n\t\tworldpos_vertex: worldpos_vertex,\r\n\t\tbackground_vert: vertex$g,\r\n\t\tbackground_frag: fragment$g,\r\n\t\tcube_vert: vertex$f,\r\n\t\tcube_frag: fragment$f,\r\n\t\tdepth_vert: vertex$e,\r\n\t\tdepth_frag: fragment$e,\r\n\t\tdistanceRGBA_vert: vertex$d,\r\n\t\tdistanceRGBA_frag: fragment$d,\r\n\t\tequirect_vert: vertex$c,\r\n\t\tequirect_frag: fragment$c,\r\n\t\tlinedashed_vert: vertex$b,\r\n\t\tlinedashed_frag: fragment$b,\r\n\t\tmeshbasic_vert: vertex$a,\r\n\t\tmeshbasic_frag: fragment$a,\r\n\t\tmeshlambert_vert: vertex$9,\r\n\t\tmeshlambert_frag: fragment$9,\r\n\t\tmeshmatcap_vert: vertex$8,\r\n\t\tmeshmatcap_frag: fragment$8,\r\n\t\tmeshnormal_vert: vertex$7,\r\n\t\tmeshnormal_frag: fragment$7,\r\n\t\tmeshphong_vert: vertex$6,\r\n\t\tmeshphong_frag: fragment$6,\r\n\t\tmeshphysical_vert: vertex$5,\r\n\t\tmeshphysical_frag: fragment$5,\r\n\t\tmeshtoon_vert: vertex$4,\r\n\t\tmeshtoon_frag: fragment$4,\r\n\t\tpoints_vert: vertex$3,\r\n\t\tpoints_frag: fragment$3,\r\n\t\tshadow_vert: vertex$2,\r\n\t\tshadow_frag: fragment$2,\r\n\t\tsprite_vert: vertex$1,\r\n\t\tsprite_frag: fragment$1\r\n\t};\r\n\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\r\n\tconst UniformsLib = {\r\n\t\tcommon: {\r\n\t\t\tdiffuse: {\r\n\t\t\t\tvalue: new Color(0xffffff)\r\n\t\t\t},\r\n\t\t\topacity: {\r\n\t\t\t\tvalue: 1.0\r\n\t\t\t},\r\n\t\t\tmap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tuvTransform: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t},\r\n\t\t\tuv2Transform: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t},\r\n\t\t\talphaMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\talphaTest: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tspecularmap: {\r\n\t\t\tspecularMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tenvmap: {\r\n\t\t\tenvMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tflipEnvMap: {\r\n\t\t\t\tvalue: -1\r\n\t\t\t},\r\n\t\t\treflectivity: {\r\n\t\t\t\tvalue: 1.0\r\n\t\t\t},\r\n\t\t\t// basic, lambert, phong\r\n\t\t\tior: {\r\n\t\t\t\tvalue: 1.5\r\n\t\t\t},\r\n\t\t\t// standard, physical\r\n\t\t\trefractionRatio: {\r\n\t\t\t\tvalue: 0.98\r\n\t\t\t},\r\n\t\t\tmaxMipLevel: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\taomap: {\r\n\t\t\taoMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\taoMapIntensity: {\r\n\t\t\t\tvalue: 1\r\n\t\t\t}\r\n\t\t},\r\n\t\tlightmap: {\r\n\t\t\tlightMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tlightMapIntensity: {\r\n\t\t\t\tvalue: 1\r\n\t\t\t}\r\n\t\t},\r\n\t\temissivemap: {\r\n\t\t\temissiveMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tbumpmap: {\r\n\t\t\tbumpMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tbumpScale: {\r\n\t\t\t\tvalue: 1\r\n\t\t\t}\r\n\t\t},\r\n\t\tnormalmap: {\r\n\t\t\tnormalMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tnormalScale: {\r\n\t\t\t\tvalue: new Vector2(1, 1)\r\n\t\t\t}\r\n\t\t},\r\n\t\tdisplacementmap: {\r\n\t\t\tdisplacementMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tdisplacementScale: {\r\n\t\t\t\tvalue: 1\r\n\t\t\t},\r\n\t\t\tdisplacementBias: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\troughnessmap: {\r\n\t\t\troughnessMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tmetalnessmap: {\r\n\t\t\tmetalnessMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tgradientmap: {\r\n\t\t\tgradientMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tfog: {\r\n\t\t\tfogDensity: {\r\n\t\t\t\tvalue: 0.00025\r\n\t\t\t},\r\n\t\t\tfogNear: {\r\n\t\t\t\tvalue: 1\r\n\t\t\t},\r\n\t\t\tfogFar: {\r\n\t\t\t\tvalue: 2000\r\n\t\t\t},\r\n\t\t\tfogColor: {\r\n\t\t\t\tvalue: new Color(0xffffff)\r\n\t\t\t}\r\n\t\t},\r\n\t\tlights: {\r\n\t\t\tambientLightColor: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tlightProbe: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tdirectionalLights: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tdirection: {},\r\n\t\t\t\t\tcolor: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdirectionalLightShadows: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tshadowBias: {},\r\n\t\t\t\t\tshadowNormalBias: {},\r\n\t\t\t\t\tshadowRadius: {},\r\n\t\t\t\t\tshadowMapSize: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdirectionalShadowMap: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tdirectionalShadowMatrix: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tspotLights: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tcolor: {},\r\n\t\t\t\t\tposition: {},\r\n\t\t\t\t\tdirection: {},\r\n\t\t\t\t\tdistance: {},\r\n\t\t\t\t\tconeCos: {},\r\n\t\t\t\t\tpenumbraCos: {},\r\n\t\t\t\t\tdecay: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tspotLightShadows: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tshadowBias: {},\r\n\t\t\t\t\tshadowNormalBias: {},\r\n\t\t\t\t\tshadowRadius: {},\r\n\t\t\t\t\tshadowMapSize: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tspotShadowMap: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tspotShadowMatrix: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tpointLights: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tcolor: {},\r\n\t\t\t\t\tposition: {},\r\n\t\t\t\t\tdecay: {},\r\n\t\t\t\t\tdistance: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpointLightShadows: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tshadowBias: {},\r\n\t\t\t\t\tshadowNormalBias: {},\r\n\t\t\t\t\tshadowRadius: {},\r\n\t\t\t\t\tshadowMapSize: {},\r\n\t\t\t\t\tshadowCameraNear: {},\r\n\t\t\t\t\tshadowCameraFar: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpointShadowMap: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tpointShadowMatrix: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\themisphereLights: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tdirection: {},\r\n\t\t\t\t\tskyColor: {},\r\n\t\t\t\t\tgroundColor: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\r\n\t\t\trectAreaLights: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tcolor: {},\r\n\t\t\t\t\tposition: {},\r\n\t\t\t\t\twidth: {},\r\n\t\t\t\t\theight: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tltc_1: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tltc_2: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tpoints: {\r\n\t\t\tdiffuse: {\r\n\t\t\t\tvalue: new Color(0xffffff)\r\n\t\t\t},\r\n\t\t\topacity: {\r\n\t\t\t\tvalue: 1.0\r\n\t\t\t},\r\n\t\t\tsize: {\r\n\t\t\t\tvalue: 1.0\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tvalue: 1.0\r\n\t\t\t},\r\n\t\t\tmap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\talphaMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\talphaTest: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tuvTransform: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t}\r\n\t\t},\r\n\t\tsprite: {\r\n\t\t\tdiffuse: {\r\n\t\t\t\tvalue: new Color(0xffffff)\r\n\t\t\t},\r\n\t\t\topacity: {\r\n\t\t\t\tvalue: 1.0\r\n\t\t\t},\r\n\t\t\tcenter: {\r\n\t\t\t\tvalue: new Vector2(0.5, 0.5)\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tvalue: 0.0\r\n\t\t\t},\r\n\t\t\tmap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\talphaMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\talphaTest: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tuvTransform: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst ShaderLib = {\r\n\t\tbasic: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\r\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\r\n\t\t},\r\n\t\tlambert: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\r\n\t\t\t\temissive: {\r\n\t\t\t\t\tvalue: new Color(0x000000)\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\r\n\t\t},\r\n\t\tphong: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\r\n\t\t\t\temissive: {\r\n\t\t\t\t\tvalue: new Color(0x000000)\r\n\t\t\t\t},\r\n\t\t\t\tspecular: {\r\n\t\t\t\t\tvalue: new Color(0x111111)\r\n\t\t\t\t},\r\n\t\t\t\tshininess: {\r\n\t\t\t\t\tvalue: 30\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\r\n\t\t},\r\n\t\tstandard: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\r\n\t\t\t\temissive: {\r\n\t\t\t\t\tvalue: new Color(0x000000)\r\n\t\t\t\t},\r\n\t\t\t\troughness: {\r\n\t\t\t\t\tvalue: 1.0\r\n\t\t\t\t},\r\n\t\t\t\tmetalness: {\r\n\t\t\t\t\tvalue: 0.0\r\n\t\t\t\t},\r\n\t\t\t\tenvMapIntensity: {\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t} // temporary\r\n\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\t\t},\r\n\t\ttoon: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\r\n\t\t\t\temissive: {\r\n\t\t\t\t\tvalue: new Color(0x000000)\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\r\n\t\t},\r\n\t\tmatcap: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\r\n\t\t\t\tmatcap: {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\r\n\t\t},\r\n\t\tpoints: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\r\n\t\t\tvertexShader: ShaderChunk.points_vert,\r\n\t\t\tfragmentShader: ShaderChunk.points_frag\r\n\t\t},\r\n\t\tdashed: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\r\n\t\t\t\tscale: {\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\tdashSize: {\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\ttotalSize: {\r\n\t\t\t\t\tvalue: 2\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\r\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\r\n\t\t},\r\n\t\tdepth: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\r\n\t\t\tvertexShader: ShaderChunk.depth_vert,\r\n\t\t\tfragmentShader: ShaderChunk.depth_frag\r\n\t\t},\r\n\t\tnormal: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\r\n\t\t\t\topacity: {\r\n\t\t\t\t\tvalue: 1.0\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.meshnormal_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshnormal_frag\r\n\t\t},\r\n\t\tsprite: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\r\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\r\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tuniforms: {\r\n\t\t\t\tuvTransform: {\r\n\t\t\t\t\tvalue: new Matrix3()\r\n\t\t\t\t},\r\n\t\t\t\tt2D: {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: ShaderChunk.background_vert,\r\n\t\t\tfragmentShader: ShaderChunk.background_frag\r\n\t\t},\r\n\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\tcube: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.envmap, {\r\n\t\t\t\topacity: {\r\n\t\t\t\t\tvalue: 1.0\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.cube_vert,\r\n\t\t\tfragmentShader: ShaderChunk.cube_frag\r\n\t\t},\r\n\t\tequirect: {\r\n\t\t\tuniforms: {\r\n\t\t\t\ttEquirect: {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\r\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\r\n\t\t},\r\n\t\tdistanceRGBA: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\r\n\t\t\t\treferencePosition: {\r\n\t\t\t\t\tvalue: new Vector3()\r\n\t\t\t\t},\r\n\t\t\t\tnearDistance: {\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\tfarDistance: {\r\n\t\t\t\t\tvalue: 1000\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\r\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\r\n\t\t},\r\n\t\tshadow: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\r\n\t\t\t\tcolor: {\r\n\t\t\t\t\tvalue: new Color(0x00000)\r\n\t\t\t\t},\r\n\t\t\t\topacity: {\r\n\t\t\t\t\tvalue: 1.0\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\r\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\r\n\t\t}\r\n\t};\r\n\tShaderLib.physical = {\r\n\t\tuniforms: mergeUniforms([ShaderLib.standard.uniforms, {\r\n\t\t\tclearcoat: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tclearcoatMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tclearcoatRoughness: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tclearcoatRoughnessMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tclearcoatNormalScale: {\r\n\t\t\t\tvalue: new Vector2(1, 1)\r\n\t\t\t},\r\n\t\t\tclearcoatNormalMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tsheen: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tsheenTint: {\r\n\t\t\t\tvalue: new Color(0x000000)\r\n\t\t\t},\r\n\t\t\tsheenRoughness: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\ttransmission: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\ttransmissionMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\ttransmissionSamplerSize: {\r\n\t\t\t\tvalue: new Vector2()\r\n\t\t\t},\r\n\t\t\ttransmissionSamplerMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tthickness: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tthicknessMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tattenuationDistance: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tattenuationTint: {\r\n\t\t\t\tvalue: new Color(0x000000)\r\n\t\t\t},\r\n\t\t\tspecularIntensity: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tspecularIntensityMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tspecularTint: {\r\n\t\t\t\tvalue: new Color(1, 1, 1)\r\n\t\t\t},\r\n\t\t\tspecularTintMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t}]),\r\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\t};\r\n\r\n\tfunction WebGLBackground(renderer, cubemaps, state, objects, premultipliedAlpha) {\r\n\t\tconst clearColor = new Color(0x000000);\r\n\t\tlet clearAlpha = 0;\r\n\t\tlet planeMesh;\r\n\t\tlet boxMesh;\r\n\t\tlet currentBackground = null;\r\n\t\tlet currentBackgroundVersion = 0;\r\n\t\tlet currentTonemapping = null;\r\n\r\n\t\tfunction render(renderList, scene) {\r\n\t\t\tlet forceClear = false;\r\n\t\t\tlet background = scene.isScene === true ? scene.background : null;\r\n\r\n\t\t\tif (background && background.isTexture) {\r\n\t\t\t\tbackground = cubemaps.get(background);\r\n\t\t\t} // Ignore background in AR\r\n\t\t\t// TODO: Reconsider this.\r\n\r\n\r\n\t\t\tconst xr = renderer.xr;\r\n\t\t\tconst session = xr.getSession && xr.getSession();\r\n\r\n\t\t\tif (session && session.environmentBlendMode === 'additive') {\r\n\t\t\t\tbackground = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (background === null) {\r\n\t\t\t\tsetClear(clearColor, clearAlpha);\r\n\t\t\t} else if (background && background.isColor) {\r\n\t\t\t\tsetClear(background, 1);\r\n\t\t\t\tforceClear = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (renderer.autoClear || forceClear) {\r\n\t\t\t\trenderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\r\n\t\t\t}\r\n\r\n\t\t\tif (background && (background.isCubeTexture || background.mapping === CubeUVReflectionMapping)) {\r\n\t\t\t\tif (boxMesh === undefined) {\r\n\t\t\t\t\tboxMesh = new Mesh(new BoxGeometry(1, 1, 1), new ShaderMaterial({\r\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\r\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.cube.uniforms),\r\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\r\n\t\t\t\t\t\tside: BackSide,\r\n\t\t\t\t\t\tdepthTest: false,\r\n\t\t\t\t\t\tdepthWrite: false,\r\n\t\t\t\t\t\tfog: false\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('normal');\r\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('uv');\r\n\r\n\t\t\t\t\tboxMesh.onBeforeRender = function (renderer, scene, camera) {\r\n\t\t\t\t\t\tthis.matrixWorld.copyPosition(camera.matrixWorld);\r\n\t\t\t\t\t}; // enable code injection for non-built-in material\r\n\r\n\r\n\t\t\t\t\tObject.defineProperty(boxMesh.material, 'envMap', {\r\n\t\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tobjects.update(boxMesh);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tboxMesh.material.uniforms.envMap.value = background;\r\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background.isRenderTargetTexture === false ? -1 : 1;\r\n\r\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\r\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\r\n\t\t\t\t\tcurrentBackground = background;\r\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\r\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\r\n\t\t\t\t} // push to the pre-sorted opaque render list\r\n\r\n\r\n\t\t\t\trenderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\r\n\t\t\t} else if (background && background.isTexture) {\r\n\t\t\t\tif (planeMesh === undefined) {\r\n\t\t\t\t\tplaneMesh = new Mesh(new PlaneGeometry(2, 2), new ShaderMaterial({\r\n\t\t\t\t\t\tname: 'BackgroundMaterial',\r\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.background.uniforms),\r\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\r\n\t\t\t\t\t\tside: FrontSide,\r\n\t\t\t\t\t\tdepthTest: false,\r\n\t\t\t\t\t\tdepthWrite: false,\r\n\t\t\t\t\t\tfog: false\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\r\n\r\n\t\t\t\t\tObject.defineProperty(planeMesh.material, 'map', {\r\n\t\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tobjects.update(planeMesh);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\r\n\r\n\t\t\t\tif (background.matrixAutoUpdate === true) {\r\n\t\t\t\t\tbackground.updateMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy(background.matrix);\r\n\r\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\r\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\r\n\t\t\t\t\tcurrentBackground = background;\r\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\r\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\r\n\t\t\t\t} // push to the pre-sorted opaque render list\r\n\r\n\r\n\t\t\t\trenderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setClear(color, alpha) {\r\n\t\t\tstate.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tgetClearColor: function () {\r\n\t\t\t\treturn clearColor;\r\n\t\t\t},\r\n\t\t\tsetClearColor: function (color, alpha = 1) {\r\n\t\t\t\tclearColor.set(color);\r\n\t\t\t\tclearAlpha = alpha;\r\n\t\t\t\tsetClear(clearColor, clearAlpha);\r\n\t\t\t},\r\n\t\t\tgetClearAlpha: function () {\r\n\t\t\t\treturn clearAlpha;\r\n\t\t\t},\r\n\t\t\tsetClearAlpha: function (alpha) {\r\n\t\t\t\tclearAlpha = alpha;\r\n\t\t\t\tsetClear(clearColor, clearAlpha);\r\n\t\t\t},\r\n\t\t\trender: render\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLBindingStates(gl, extensions, attributes, capabilities) {\r\n\t\tconst maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n\t\tconst extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\r\n\t\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\r\n\t\tconst bindingStates = {};\r\n\t\tconst defaultState = createBindingState(null);\r\n\t\tlet currentState = defaultState;\r\n\r\n\t\tfunction setup(object, material, program, geometry, index) {\r\n\t\t\tlet updateBuffers = false;\r\n\r\n\t\t\tif (vaoAvailable) {\r\n\t\t\t\tconst state = getBindingState(geometry, program, material);\r\n\r\n\t\t\t\tif (currentState !== state) {\r\n\t\t\t\t\tcurrentState = state;\r\n\t\t\t\t\tbindVertexArrayObject(currentState.object);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tupdateBuffers = needsUpdate(geometry, index);\r\n\t\t\t\tif (updateBuffers) saveCache(geometry, index);\r\n\t\t\t} else {\r\n\t\t\t\tconst wireframe = material.wireframe === true;\r\n\r\n\t\t\t\tif (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\r\n\t\t\t\t\tcurrentState.geometry = geometry.id;\r\n\t\t\t\t\tcurrentState.program = program.id;\r\n\t\t\t\t\tcurrentState.wireframe = wireframe;\r\n\t\t\t\t\tupdateBuffers = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (object.isInstancedMesh === true) {\r\n\t\t\t\tupdateBuffers = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (index !== null) {\r\n\t\t\t\tattributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\r\n\t\t\t}\r\n\r\n\t\t\tif (updateBuffers) {\r\n\t\t\t\tsetupVertexAttributes(object, material, program, geometry);\r\n\r\n\t\t\t\tif (index !== null) {\r\n\t\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.get(index).buffer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction createVertexArrayObject() {\r\n\t\t\tif (capabilities.isWebGL2) return gl.createVertexArray();\r\n\t\t\treturn extension.createVertexArrayOES();\r\n\t\t}\r\n\r\n\t\tfunction bindVertexArrayObject(vao) {\r\n\t\t\tif (capabilities.isWebGL2) return gl.bindVertexArray(vao);\r\n\t\t\treturn extension.bindVertexArrayOES(vao);\r\n\t\t}\r\n\r\n\t\tfunction deleteVertexArrayObject(vao) {\r\n\t\t\tif (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\r\n\t\t\treturn extension.deleteVertexArrayOES(vao);\r\n\t\t}\r\n\r\n\t\tfunction getBindingState(geometry, program, material) {\r\n\t\t\tconst wireframe = material.wireframe === true;\r\n\t\t\tlet programMap = bindingStates[geometry.id];\r\n\r\n\t\t\tif (programMap === undefined) {\r\n\t\t\t\tprogramMap = {};\r\n\t\t\t\tbindingStates[geometry.id] = programMap;\r\n\t\t\t}\r\n\r\n\t\t\tlet stateMap = programMap[program.id];\r\n\r\n\t\t\tif (stateMap === undefined) {\r\n\t\t\t\tstateMap = {};\r\n\t\t\t\tprogramMap[program.id] = stateMap;\r\n\t\t\t}\r\n\r\n\t\t\tlet state = stateMap[wireframe];\r\n\r\n\t\t\tif (state === undefined) {\r\n\t\t\t\tstate = createBindingState(createVertexArrayObject());\r\n\t\t\t\tstateMap[wireframe] = state;\r\n\t\t\t}\r\n\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\tfunction createBindingState(vao) {\r\n\t\t\tconst newAttributes = [];\r\n\t\t\tconst enabledAttributes = [];\r\n\t\t\tconst attributeDivisors = [];\r\n\r\n\t\t\tfor (let i = 0; i < maxVertexAttributes; i++) {\r\n\t\t\t\tnewAttributes[i] = 0;\r\n\t\t\t\tenabledAttributes[i] = 0;\r\n\t\t\t\tattributeDivisors[i] = 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t// for backward compatibility on non-VAO support browser\r\n\t\t\t\tgeometry: null,\r\n\t\t\t\tprogram: null,\r\n\t\t\t\twireframe: false,\r\n\t\t\t\tnewAttributes: newAttributes,\r\n\t\t\t\tenabledAttributes: enabledAttributes,\r\n\t\t\t\tattributeDivisors: attributeDivisors,\r\n\t\t\t\tobject: vao,\r\n\t\t\t\tattributes: {},\r\n\t\t\t\tindex: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction needsUpdate(geometry, index) {\r\n\t\t\tconst cachedAttributes = currentState.attributes;\r\n\t\t\tconst geometryAttributes = geometry.attributes;\r\n\t\t\tlet attributesNum = 0;\r\n\r\n\t\t\tfor (const key in geometryAttributes) {\r\n\t\t\t\tconst cachedAttribute = cachedAttributes[key];\r\n\t\t\t\tconst geometryAttribute = geometryAttributes[key];\r\n\t\t\t\tif (cachedAttribute === undefined) return true;\r\n\t\t\t\tif (cachedAttribute.attribute !== geometryAttribute) return true;\r\n\t\t\t\tif (cachedAttribute.data !== geometryAttribute.data) return true;\r\n\t\t\t\tattributesNum++;\r\n\t\t\t}\r\n\r\n\t\t\tif (currentState.attributesNum !== attributesNum) return true;\r\n\t\t\tif (currentState.index !== index) return true;\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfunction saveCache(geometry, index) {\r\n\t\t\tconst cache = {};\r\n\t\t\tconst attributes = geometry.attributes;\r\n\t\t\tlet attributesNum = 0;\r\n\r\n\t\t\tfor (const key in attributes) {\r\n\t\t\t\tconst attribute = attributes[key];\r\n\t\t\t\tconst data = {};\r\n\t\t\t\tdata.attribute = attribute;\r\n\r\n\t\t\t\tif (attribute.data) {\r\n\t\t\t\t\tdata.data = attribute.data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcache[key] = data;\r\n\t\t\t\tattributesNum++;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentState.attributes = cache;\r\n\t\t\tcurrentState.attributesNum = attributesNum;\r\n\t\t\tcurrentState.index = index;\r\n\t\t}\r\n\r\n\t\tfunction initAttributes() {\r\n\t\t\tconst newAttributes = currentState.newAttributes;\r\n\r\n\t\t\tfor (let i = 0, il = newAttributes.length; i < il; i++) {\r\n\t\t\t\tnewAttributes[i] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction enableAttribute(attribute) {\r\n\t\t\tenableAttributeAndDivisor(attribute, 0);\r\n\t\t}\r\n\r\n\t\tfunction enableAttributeAndDivisor(attribute, meshPerAttribute) {\r\n\t\t\tconst newAttributes = currentState.newAttributes;\r\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\r\n\t\t\tconst attributeDivisors = currentState.attributeDivisors;\r\n\t\t\tnewAttributes[attribute] = 1;\r\n\r\n\t\t\tif (enabledAttributes[attribute] === 0) {\r\n\t\t\t\tgl.enableVertexAttribArray(attribute);\r\n\t\t\t\tenabledAttributes[attribute] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (attributeDivisors[attribute] !== meshPerAttribute) {\r\n\t\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\r\n\t\t\t\textension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\r\n\t\t\t\tattributeDivisors[attribute] = meshPerAttribute;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction disableUnusedAttributes() {\r\n\t\t\tconst newAttributes = currentState.newAttributes;\r\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\r\n\r\n\t\t\tfor (let i = 0, il = enabledAttributes.length; i < il; i++) {\r\n\t\t\t\tif (enabledAttributes[i] !== newAttributes[i]) {\r\n\t\t\t\t\tgl.disableVertexAttribArray(i);\r\n\t\t\t\t\tenabledAttributes[i] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction vertexAttribPointer(index, size, type, normalized, stride, offset) {\r\n\t\t\tif (capabilities.isWebGL2 === true && (type === gl.INT || type === gl.UNSIGNED_INT)) {\r\n\t\t\t\tgl.vertexAttribIPointer(index, size, type, stride, offset);\r\n\t\t\t} else {\r\n\t\t\t\tgl.vertexAttribPointer(index, size, type, normalized, stride, offset);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setupVertexAttributes(object, material, program, geometry) {\r\n\t\t\tif (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\r\n\t\t\t\tif (extensions.get('ANGLE_instanced_arrays') === null) return;\r\n\t\t\t}\r\n\r\n\t\t\tinitAttributes();\r\n\t\t\tconst geometryAttributes = geometry.attributes;\r\n\t\t\tconst programAttributes = program.getAttributes();\r\n\t\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\t\tfor (const name in programAttributes) {\r\n\t\t\t\tconst programAttribute = programAttributes[name];\r\n\r\n\t\t\t\tif (programAttribute.location >= 0) {\r\n\t\t\t\t\tlet geometryAttribute = geometryAttributes[name];\r\n\r\n\t\t\t\t\tif (geometryAttribute === undefined) {\r\n\t\t\t\t\t\tif (name === 'instanceMatrix' && object.instanceMatrix) geometryAttribute = object.instanceMatrix;\r\n\t\t\t\t\t\tif (name === 'instanceColor' && object.instanceColor) geometryAttribute = object.instanceColor;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (geometryAttribute !== undefined) {\r\n\t\t\t\t\t\tconst normalized = geometryAttribute.normalized;\r\n\t\t\t\t\t\tconst size = geometryAttribute.itemSize;\r\n\t\t\t\t\t\tconst attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\r\n\r\n\t\t\t\t\t\tif (attribute === undefined) continue;\r\n\t\t\t\t\t\tconst buffer = attribute.buffer;\r\n\t\t\t\t\t\tconst type = attribute.type;\r\n\t\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\r\n\r\n\t\t\t\t\t\tif (geometryAttribute.isInterleavedBufferAttribute) {\r\n\t\t\t\t\t\t\tconst data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tconst stride = data.stride;\r\n\t\t\t\t\t\t\tconst offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t\tif (data && data.isInstancedInterleavedBuffer) {\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\r\n\t\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute.location + i, data.meshPerAttribute);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\r\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\r\n\t\t\t\t\t\t\t\t\tenableAttribute(programAttribute.location + i);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\r\n\t\t\t\t\t\t\t\tvertexAttribPointer(programAttribute.location + i, size / programAttribute.locationSize, type, normalized, stride * bytesPerElement, (offset + size / programAttribute.locationSize * i) * bytesPerElement);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (geometryAttribute.isInstancedBufferAttribute) {\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\r\n\t\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute.location + i, geometryAttribute.meshPerAttribute);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\r\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\r\n\t\t\t\t\t\t\t\t\tenableAttribute(programAttribute.location + i);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\r\n\t\t\t\t\t\t\t\tvertexAttribPointer(programAttribute.location + i, size / programAttribute.locationSize, type, normalized, size * bytesPerElement, size / programAttribute.locationSize * i * bytesPerElement);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (materialDefaultAttributeValues !== undefined) {\r\n\t\t\t\t\t\tconst value = materialDefaultAttributeValues[name];\r\n\r\n\t\t\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\t\t\tswitch (value.length) {\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv(programAttribute.location, value);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv(programAttribute.location, value);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv(programAttribute.location, value);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv(programAttribute.location, value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdisableUnusedAttributes();\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\treset();\r\n\r\n\t\t\tfor (const geometryId in bindingStates) {\r\n\t\t\t\tconst programMap = bindingStates[geometryId];\r\n\r\n\t\t\t\tfor (const programId in programMap) {\r\n\t\t\t\t\tconst stateMap = programMap[programId];\r\n\r\n\t\t\t\t\tfor (const wireframe in stateMap) {\r\n\t\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\r\n\t\t\t\t\t\tdelete stateMap[wireframe];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdelete programMap[programId];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete bindingStates[geometryId];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction releaseStatesOfGeometry(geometry) {\r\n\t\t\tif (bindingStates[geometry.id] === undefined) return;\r\n\t\t\tconst programMap = bindingStates[geometry.id];\r\n\r\n\t\t\tfor (const programId in programMap) {\r\n\t\t\t\tconst stateMap = programMap[programId];\r\n\r\n\t\t\t\tfor (const wireframe in stateMap) {\r\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\r\n\t\t\t\t\tdelete stateMap[wireframe];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete programMap[programId];\r\n\t\t\t}\r\n\r\n\t\t\tdelete bindingStates[geometry.id];\r\n\t\t}\r\n\r\n\t\tfunction releaseStatesOfProgram(program) {\r\n\t\t\tfor (const geometryId in bindingStates) {\r\n\t\t\t\tconst programMap = bindingStates[geometryId];\r\n\t\t\t\tif (programMap[program.id] === undefined) continue;\r\n\t\t\t\tconst stateMap = programMap[program.id];\r\n\r\n\t\t\t\tfor (const wireframe in stateMap) {\r\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\r\n\t\t\t\t\tdelete stateMap[wireframe];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete programMap[program.id];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction reset() {\r\n\t\t\tresetDefaultState();\r\n\t\t\tif (currentState === defaultState) return;\r\n\t\t\tcurrentState = defaultState;\r\n\t\t\tbindVertexArrayObject(currentState.object);\r\n\t\t} // for backward-compatilibity\r\n\r\n\r\n\t\tfunction resetDefaultState() {\r\n\t\t\tdefaultState.geometry = null;\r\n\t\t\tdefaultState.program = null;\r\n\t\t\tdefaultState.wireframe = false;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tsetup: setup,\r\n\t\t\treset: reset,\r\n\t\t\tresetDefaultState: resetDefaultState,\r\n\t\t\tdispose: dispose,\r\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\r\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\r\n\t\t\tinitAttributes: initAttributes,\r\n\t\t\tenableAttribute: enableAttribute,\r\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLBufferRenderer(gl, extensions, info, capabilities) {\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\t\tlet mode;\r\n\r\n\t\tfunction setMode(value) {\r\n\t\t\tmode = value;\r\n\t\t}\r\n\r\n\t\tfunction render(start, count) {\r\n\t\t\tgl.drawArrays(mode, start, count);\r\n\t\t\tinfo.update(count, mode, 1);\r\n\t\t}\r\n\r\n\t\tfunction renderInstances(start, count, primcount) {\r\n\t\t\tif (primcount === 0) return;\r\n\t\t\tlet extension, methodName;\r\n\r\n\t\t\tif (isWebGL2) {\r\n\t\t\t\textension = gl;\r\n\t\t\t\tmethodName = 'drawArraysInstanced';\r\n\t\t\t} else {\r\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\r\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\r\n\r\n\t\t\t\tif (extension === null) {\r\n\t\t\t\t\tconsole.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\textension[methodName](mode, start, count, primcount);\r\n\t\t\tinfo.update(count, mode, primcount);\r\n\t\t} //\r\n\r\n\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t}\r\n\r\n\tfunction WebGLCapabilities(gl, extensions, parameters) {\r\n\t\tlet maxAnisotropy;\r\n\r\n\t\tfunction getMaxAnisotropy() {\r\n\t\t\tif (maxAnisotropy !== undefined) return maxAnisotropy;\r\n\r\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\r\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\r\n\t\t\t\tmaxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n\t\t\t} else {\r\n\t\t\t\tmaxAnisotropy = 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn maxAnisotropy;\r\n\t\t}\r\n\r\n\t\tfunction getMaxPrecision(precision) {\r\n\t\t\tif (precision === 'highp') {\r\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\r\n\t\t\t\t\treturn 'highp';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprecision = 'mediump';\r\n\t\t\t}\r\n\r\n\t\t\tif (precision === 'mediump') {\r\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\r\n\t\t\t\t\treturn 'mediump';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn 'lowp';\r\n\t\t}\r\n\t\t/* eslint-disable no-undef */\r\n\r\n\r\n\t\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\r\n\t\t/* eslint-enable no-undef */\r\n\r\n\t\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\r\n\t\tconst maxPrecision = getMaxPrecision(precision);\r\n\r\n\t\tif (maxPrecision !== precision) {\r\n\t\t\tconsole.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\r\n\t\t\tprecision = maxPrecision;\r\n\t\t}\r\n\r\n\t\tconst drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\r\n\t\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\r\n\t\tconst maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n\t\tconst maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\r\n\t\tconst maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\t\tconst maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\r\n\t\tconst maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n\t\tconst maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\r\n\t\tconst maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\r\n\t\tconst maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\r\n\t\tconst vertexTextures = maxVertexTextures > 0;\r\n\t\tconst floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\r\n\t\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\r\n\t\tconst maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\r\n\t\treturn {\r\n\t\t\tisWebGL2: isWebGL2,\r\n\t\t\tdrawBuffers: drawBuffers,\r\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\r\n\t\t\tgetMaxPrecision: getMaxPrecision,\r\n\t\t\tprecision: precision,\r\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\r\n\t\t\tmaxTextures: maxTextures,\r\n\t\t\tmaxVertexTextures: maxVertexTextures,\r\n\t\t\tmaxTextureSize: maxTextureSize,\r\n\t\t\tmaxCubemapSize: maxCubemapSize,\r\n\t\t\tmaxAttributes: maxAttributes,\r\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\r\n\t\t\tmaxVaryings: maxVaryings,\r\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\r\n\t\t\tvertexTextures: vertexTextures,\r\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\r\n\t\t\tfloatVertexTextures: floatVertexTextures,\r\n\t\t\tmaxSamples: maxSamples\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLClipping(properties) {\r\n\t\tconst scope = this;\r\n\t\tlet globalState = null,\r\n\t\t\t\tnumGlobalPlanes = 0,\r\n\t\t\t\tlocalClippingEnabled = false,\r\n\t\t\t\trenderingShadows = false;\r\n\t\tconst plane = new Plane(),\r\n\t\t\t\t\tviewNormalMatrix = new Matrix3(),\r\n\t\t\t\t\tuniform = {\r\n\t\t\tvalue: null,\r\n\t\t\tneedsUpdate: false\r\n\t\t};\r\n\t\tthis.uniform = uniform;\r\n\t\tthis.numPlanes = 0;\r\n\t\tthis.numIntersection = 0;\r\n\r\n\t\tthis.init = function (planes, enableLocalClipping, camera) {\r\n\t\t\tconst enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\r\n\t\t\t// run another frame in order to reset the state:\r\n\t\t\tnumGlobalPlanes !== 0 || localClippingEnabled;\r\n\t\t\tlocalClippingEnabled = enableLocalClipping;\r\n\t\t\tglobalState = projectPlanes(planes, camera, 0);\r\n\t\t\tnumGlobalPlanes = planes.length;\r\n\t\t\treturn enabled;\r\n\t\t};\r\n\r\n\t\tthis.beginShadows = function () {\r\n\t\t\trenderingShadows = true;\r\n\t\t\tprojectPlanes(null);\r\n\t\t};\r\n\r\n\t\tthis.endShadows = function () {\r\n\t\t\trenderingShadows = false;\r\n\t\t\tresetGlobalState();\r\n\t\t};\r\n\r\n\t\tthis.setState = function (material, camera, useCache) {\r\n\t\t\tconst planes = material.clippingPlanes,\r\n\t\t\t\t\t\tclipIntersection = material.clipIntersection,\r\n\t\t\t\t\t\tclipShadows = material.clipShadows;\r\n\t\t\tconst materialProperties = properties.get(material);\r\n\r\n\t\t\tif (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\r\n\t\t\t\t// there's no local clipping\r\n\t\t\t\tif (renderingShadows) {\r\n\t\t\t\t\t// there's no global clipping\r\n\t\t\t\t\tprojectPlanes(null);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresetGlobalState();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\r\n\t\t\t\t\t\t\tlGlobal = nGlobal * 4;\r\n\t\t\t\tlet dstArray = materialProperties.clippingState || null;\r\n\t\t\t\tuniform.value = dstArray; // ensure unique state\r\n\r\n\t\t\t\tdstArray = projectPlanes(planes, camera, lGlobal, useCache);\r\n\r\n\t\t\t\tfor (let i = 0; i !== lGlobal; ++i) {\r\n\t\t\t\t\tdstArray[i] = globalState[i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterialProperties.clippingState = dstArray;\r\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\r\n\t\t\t\tthis.numPlanes += nGlobal;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction resetGlobalState() {\r\n\t\t\tif (uniform.value !== globalState) {\r\n\t\t\t\tuniform.value = globalState;\r\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\r\n\t\t\t}\r\n\r\n\t\t\tscope.numPlanes = numGlobalPlanes;\r\n\t\t\tscope.numIntersection = 0;\r\n\t\t}\r\n\r\n\t\tfunction projectPlanes(planes, camera, dstOffset, skipTransform) {\r\n\t\t\tconst nPlanes = planes !== null ? planes.length : 0;\r\n\t\t\tlet dstArray = null;\r\n\r\n\t\t\tif (nPlanes !== 0) {\r\n\t\t\t\tdstArray = uniform.value;\r\n\r\n\t\t\t\tif (skipTransform !== true || dstArray === null) {\r\n\t\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\r\n\t\t\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\r\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix(viewMatrix);\r\n\r\n\t\t\t\t\tif (dstArray === null || dstArray.length < flatSize) {\r\n\t\t\t\t\t\tdstArray = new Float32Array(flatSize);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\r\n\t\t\t\t\t\tplane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\r\n\t\t\t\t\t\tplane.normal.toArray(dstArray, i4);\r\n\t\t\t\t\t\tdstArray[i4 + 3] = plane.constant;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniform.value = dstArray;\r\n\t\t\t\tuniform.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tscope.numPlanes = nPlanes;\r\n\t\t\tscope.numIntersection = 0;\r\n\t\t\treturn dstArray;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction WebGLCubeMaps(renderer) {\r\n\t\tlet cubemaps = new WeakMap();\r\n\r\n\t\tfunction mapTextureMapping(texture, mapping) {\r\n\t\t\tif (mapping === EquirectangularReflectionMapping) {\r\n\t\t\t\ttexture.mapping = CubeReflectionMapping;\r\n\t\t\t} else if (mapping === EquirectangularRefractionMapping) {\r\n\t\t\t\ttexture.mapping = CubeRefractionMapping;\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t\tfunction get(texture) {\r\n\t\t\tif (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\r\n\t\t\t\tconst mapping = texture.mapping;\r\n\r\n\t\t\t\tif (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {\r\n\t\t\t\t\tif (cubemaps.has(texture)) {\r\n\t\t\t\t\t\tconst cubemap = cubemaps.get(texture).texture;\r\n\t\t\t\t\t\treturn mapTextureMapping(cubemap, texture.mapping);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst image = texture.image;\r\n\r\n\t\t\t\t\t\tif (image && image.height > 0) {\r\n\t\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget(image.height / 2);\r\n\t\t\t\t\t\t\trenderTarget.fromEquirectangularTexture(renderer, texture);\r\n\t\t\t\t\t\t\tcubemaps.set(texture, renderTarget);\r\n\t\t\t\t\t\t\trenderer.setRenderTarget(currentRenderTarget);\r\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\r\n\t\t\t\t\t\t\treturn mapTextureMapping(renderTarget.texture, texture.mapping);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t\tfunction onTextureDispose(event) {\r\n\t\t\tconst texture = event.target;\r\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\r\n\t\t\tconst cubemap = cubemaps.get(texture);\r\n\r\n\t\t\tif (cubemap !== undefined) {\r\n\t\t\t\tcubemaps.delete(texture);\r\n\t\t\t\tcubemap.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\tcubemaps = new WeakMap();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\t}\r\n\r\n\tclass OrthographicCamera extends Camera {\r\n\t\tconstructor(left = -1, right = 1, top = 1, bottom = -1, near = 0.1, far = 2000) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'OrthographicCamera';\r\n\t\t\tthis.zoom = 1;\r\n\t\t\tthis.view = null;\r\n\t\t\tthis.left = left;\r\n\t\t\tthis.right = right;\r\n\t\t\tthis.top = top;\r\n\t\t\tthis.bottom = bottom;\r\n\t\t\tthis.near = near;\r\n\t\t\tthis.far = far;\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\r\n\t\tcopy(source, recursive) {\r\n\t\t\tsuper.copy(source, recursive);\r\n\t\t\tthis.left = source.left;\r\n\t\t\tthis.right = source.right;\r\n\t\t\tthis.top = source.top;\r\n\t\t\tthis.bottom = source.bottom;\r\n\t\t\tthis.near = source.near;\r\n\t\t\tthis.far = source.far;\r\n\t\t\tthis.zoom = source.zoom;\r\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\r\n\t\t\tif (this.view === null) {\r\n\t\t\t\tthis.view = {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tfullWidth: 1,\r\n\t\t\t\t\tfullHeight: 1,\r\n\t\t\t\t\toffsetX: 0,\r\n\t\t\t\t\toffsetY: 0,\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.view.enabled = true;\r\n\t\t\tthis.view.fullWidth = fullWidth;\r\n\t\t\tthis.view.fullHeight = fullHeight;\r\n\t\t\tthis.view.offsetX = x;\r\n\t\t\tthis.view.offsetY = y;\r\n\t\t\tthis.view.width = width;\r\n\t\t\tthis.view.height = height;\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\r\n\t\tclearViewOffset() {\r\n\t\t\tif (this.view !== null) {\r\n\t\t\t\tthis.view.enabled = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\r\n\t\tupdateProjectionMatrix() {\r\n\t\t\tconst dx = (this.right - this.left) / (2 * this.zoom);\r\n\t\t\tconst dy = (this.top - this.bottom) / (2 * this.zoom);\r\n\t\t\tconst cx = (this.right + this.left) / 2;\r\n\t\t\tconst cy = (this.top + this.bottom) / 2;\r\n\t\t\tlet left = cx - dx;\r\n\t\t\tlet right = cx + dx;\r\n\t\t\tlet top = cy + dy;\r\n\t\t\tlet bottom = cy - dy;\r\n\r\n\t\t\tif (this.view !== null && this.view.enabled) {\r\n\t\t\t\tconst scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\r\n\t\t\t\tconst scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\r\n\t\t\t\tleft += scaleW * this.view.offsetX;\r\n\t\t\t\tright = left + scaleW * this.view.width;\r\n\t\t\t\ttop -= scaleH * this.view.offsetY;\r\n\t\t\t\tbottom = top - scaleH * this.view.height;\r\n\t\t\t}\r\n\r\n\t\t\tthis.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\r\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tdata.object.zoom = this.zoom;\r\n\t\t\tdata.object.left = this.left;\r\n\t\t\tdata.object.right = this.right;\r\n\t\t\tdata.object.top = this.top;\r\n\t\t\tdata.object.bottom = this.bottom;\r\n\t\t\tdata.object.near = this.near;\r\n\t\t\tdata.object.far = this.far;\r\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tOrthographicCamera.prototype.isOrthographicCamera = true;\r\n\r\n\tclass RawShaderMaterial extends ShaderMaterial {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper(parameters);\r\n\t\t\tthis.type = 'RawShaderMaterial';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\r\n\r\n\tconst LOD_MIN = 4;\r\n\tconst LOD_MAX = 8;\r\n\tconst SIZE_MAX = Math.pow(2, LOD_MAX); // The standard deviations (radians) associated with the extra mips. These are\r\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\r\n\t// geometric shadowing function. These sigma values squared must match the\r\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\r\n\r\n\tconst EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\r\n\tconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length; // The maximum length of the blur for loop. Smaller sigmas will use fewer\r\n\t// samples and exit early, but not recompile the shader.\r\n\r\n\tconst MAX_SAMPLES = 20;\r\n\tconst ENCODINGS = {\r\n\t\t[LinearEncoding]: 0,\r\n\t\t[sRGBEncoding]: 1,\r\n\t\t[RGBEEncoding]: 2,\r\n\t\t[RGBM7Encoding]: 3,\r\n\t\t[RGBM16Encoding]: 4,\r\n\t\t[RGBDEncoding]: 5,\r\n\t\t[GammaEncoding]: 6\r\n\t};\r\n\r\n\tconst _flatCamera = /*@__PURE__*/new OrthographicCamera();\r\n\r\n\tconst {\r\n\t\t_lodPlanes,\r\n\t\t_sizeLods,\r\n\t\t_sigmas\r\n\t} = /*@__PURE__*/_createPlanes();\r\n\r\n\tconst _clearColor = /*@__PURE__*/new Color();\r\n\r\n\tlet _oldTarget = null; // Golden Ratio\r\n\r\n\tconst PHI = (1 + Math.sqrt(5)) / 2;\r\n\tconst INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\r\n\t// same axis), used as axis directions evenly spread on a sphere.\r\n\r\n\tconst _axisDirections = [/*@__PURE__*/new Vector3(1, 1, 1), /*@__PURE__*/new Vector3(-1, 1, 1), /*@__PURE__*/new Vector3(1, 1, -1), /*@__PURE__*/new Vector3(-1, 1, -1), /*@__PURE__*/new Vector3(0, PHI, INV_PHI), /*@__PURE__*/new Vector3(0, PHI, -INV_PHI), /*@__PURE__*/new Vector3(INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(-INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(PHI, INV_PHI, 0), /*@__PURE__*/new Vector3(-PHI, INV_PHI, 0)];\r\n\t/**\r\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\r\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\r\n\t * blur to be quickly accessed based on material roughness. It is packed into a\r\n\t * special CubeUV format that allows us to perform custom interpolation so that\r\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\r\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\r\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\r\n\t * higher roughness levels. In this way we maintain resolution to smoothly\r\n\t * interpolate diffuse lighting while limiting sampling computation.\r\n\t *\r\n\t * Paper: Fast, Accurate Image-Based Lighting\r\n\t * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\r\n\t*/\r\n\r\n\tclass PMREMGenerator {\r\n\t\tconstructor(renderer) {\r\n\t\t\tthis._renderer = renderer;\r\n\t\t\tthis._pingPongRenderTarget = null;\r\n\t\t\tthis._blurMaterial = _getBlurShader(MAX_SAMPLES);\r\n\t\t\tthis._equirectShader = null;\r\n\t\t\tthis._cubemapShader = null;\r\n\r\n\t\t\tthis._compileMaterial(this._blurMaterial);\r\n\t\t}\r\n\t\t/**\r\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\r\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\r\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\r\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\r\n\t\t * is placed at the origin).\r\n\t\t */\r\n\r\n\r\n\t\tfromScene(scene, sigma = 0, near = 0.1, far = 100) {\r\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\r\n\r\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets();\r\n\r\n\t\t\tthis._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\r\n\r\n\t\t\tif (sigma > 0) {\r\n\t\t\t\tthis._blur(cubeUVRenderTarget, 0, 0, sigma);\r\n\t\t\t}\r\n\r\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\r\n\r\n\t\t\tthis._cleanup(cubeUVRenderTarget);\r\n\r\n\t\t\treturn cubeUVRenderTarget;\r\n\t\t}\r\n\t\t/**\r\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\r\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\r\n\t\t * as this matches best with the 256 x 256 cubemap output.\r\n\t\t */\r\n\r\n\r\n\t\tfromEquirectangular(equirectangular) {\r\n\t\t\treturn this._fromTexture(equirectangular);\r\n\t\t}\r\n\t\t/**\r\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\r\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\r\n\t\t * as this matches best with the 256 x 256 cubemap output.\r\n\t\t */\r\n\r\n\r\n\t\tfromCubemap(cubemap) {\r\n\t\t\treturn this._fromTexture(cubemap);\r\n\t\t}\r\n\t\t/**\r\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\r\n\t\t * your texture's network fetch for increased concurrency.\r\n\t\t */\r\n\r\n\r\n\t\tcompileCubemapShader() {\r\n\t\t\tif (this._cubemapShader === null) {\r\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\r\n\r\n\t\t\t\tthis._compileMaterial(this._cubemapShader);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/**\r\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\r\n\t\t * your texture's network fetch for increased concurrency.\r\n\t\t */\r\n\r\n\r\n\t\tcompileEquirectangularShader() {\r\n\t\t\tif (this._equirectShader === null) {\r\n\t\t\t\tthis._equirectShader = _getEquirectShader();\r\n\r\n\t\t\t\tthis._compileMaterial(this._equirectShader);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/**\r\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\r\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\r\n\t\t * one of them will cause any others to also become unusable.\r\n\t\t */\r\n\r\n\r\n\t\tdispose() {\r\n\t\t\tthis._blurMaterial.dispose();\r\n\r\n\t\t\tif (this._cubemapShader !== null) this._cubemapShader.dispose();\r\n\t\t\tif (this._equirectShader !== null) this._equirectShader.dispose();\r\n\r\n\t\t\tfor (let i = 0; i < _lodPlanes.length; i++) {\r\n\t\t\t\t_lodPlanes[i].dispose();\r\n\t\t\t}\r\n\t\t} // private interface\r\n\r\n\r\n\t\t_cleanup(outputTarget) {\r\n\t\t\tthis._pingPongRenderTarget.dispose();\r\n\r\n\t\t\tthis._renderer.setRenderTarget(_oldTarget);\r\n\r\n\t\t\toutputTarget.scissorTest = false;\r\n\r\n\t\t\t_setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\r\n\t\t}\r\n\r\n\t\t_fromTexture(texture) {\r\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\r\n\r\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets(texture);\r\n\r\n\t\t\tthis._textureToCubeUV(texture, cubeUVRenderTarget);\r\n\r\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\r\n\r\n\t\t\tthis._cleanup(cubeUVRenderTarget);\r\n\r\n\t\t\treturn cubeUVRenderTarget;\r\n\t\t}\r\n\r\n\t\t_allocateTargets(texture) {\r\n\t\t\t// warning: null texture is valid\r\n\t\t\tconst params = {\r\n\t\t\t\tmagFilter: NearestFilter,\r\n\t\t\t\tminFilter: NearestFilter,\r\n\t\t\t\tgenerateMipmaps: false,\r\n\t\t\t\ttype: UnsignedByteType,\r\n\t\t\t\tformat: RGBEFormat,\r\n\t\t\t\tencoding: _isLDR(texture) ? texture.encoding : RGBEEncoding,\r\n\t\t\t\tdepthBuffer: false\r\n\t\t\t};\r\n\r\n\t\t\tconst cubeUVRenderTarget = _createRenderTarget(params);\r\n\r\n\t\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\r\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget(params);\r\n\t\t\treturn cubeUVRenderTarget;\r\n\t\t}\r\n\r\n\t\t_compileMaterial(material) {\r\n\t\t\tconst tmpMesh = new Mesh(_lodPlanes[0], material);\r\n\r\n\t\t\tthis._renderer.compile(tmpMesh, _flatCamera);\r\n\t\t}\r\n\r\n\t\t_sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\r\n\t\t\tconst fov = 90;\r\n\t\t\tconst aspect = 1;\r\n\t\t\tconst cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tconst upSign = [1, -1, 1, 1, 1, 1];\r\n\t\t\tconst forwardSign = [1, 1, 1, -1, -1, -1];\r\n\t\t\tconst renderer = this._renderer;\r\n\t\t\tconst originalAutoClear = renderer.autoClear;\r\n\t\t\tconst outputEncoding = renderer.outputEncoding;\r\n\t\t\tconst toneMapping = renderer.toneMapping;\r\n\t\t\trenderer.getClearColor(_clearColor);\r\n\t\t\trenderer.toneMapping = NoToneMapping;\r\n\t\t\trenderer.outputEncoding = LinearEncoding;\r\n\t\t\trenderer.autoClear = false;\r\n\t\t\tconst backgroundMaterial = new MeshBasicMaterial({\r\n\t\t\t\tname: 'PMREM.Background',\r\n\t\t\t\tside: BackSide,\r\n\t\t\t\tdepthWrite: false,\r\n\t\t\t\tdepthTest: false\r\n\t\t\t});\r\n\t\t\tconst backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\r\n\t\t\tlet useSolidColor = false;\r\n\t\t\tconst background = scene.background;\r\n\r\n\t\t\tif (background) {\r\n\t\t\t\tif (background.isColor) {\r\n\t\t\t\t\tbackgroundMaterial.color.copy(background);\r\n\t\t\t\t\tscene.background = null;\r\n\t\t\t\t\tuseSolidColor = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbackgroundMaterial.color.copy(_clearColor);\r\n\t\t\t\tuseSolidColor = true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tconst col = i % 3;\r\n\r\n\t\t\t\tif (col == 0) {\r\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\r\n\t\t\t\t\tcubeCamera.lookAt(forwardSign[i], 0, 0);\r\n\t\t\t\t} else if (col == 1) {\r\n\t\t\t\t\tcubeCamera.up.set(0, 0, upSign[i]);\r\n\t\t\t\t\tcubeCamera.lookAt(0, forwardSign[i], 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\r\n\t\t\t\t\tcubeCamera.lookAt(0, 0, forwardSign[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_setViewport(cubeUVRenderTarget, col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX);\r\n\r\n\t\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\r\n\r\n\t\t\t\tif (useSolidColor) {\r\n\t\t\t\t\trenderer.render(backgroundBox, cubeCamera);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trenderer.render(scene, cubeCamera);\r\n\t\t\t}\r\n\r\n\t\t\tbackgroundBox.geometry.dispose();\r\n\t\t\tbackgroundBox.material.dispose();\r\n\t\t\trenderer.toneMapping = toneMapping;\r\n\t\t\trenderer.outputEncoding = outputEncoding;\r\n\t\t\trenderer.autoClear = originalAutoClear;\r\n\t\t\tscene.background = background;\r\n\t\t}\r\n\r\n\t\t_setEncoding(uniform, texture) {\r\n\t\t\tif (this._renderer.capabilities.isWebGL2 === true && texture.format === RGBAFormat && texture.type === UnsignedByteType && texture.encoding === sRGBEncoding) {\r\n\t\t\t\tuniform.value = ENCODINGS[LinearEncoding];\r\n\t\t\t} else {\r\n\t\t\t\tuniform.value = ENCODINGS[texture.encoding];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_textureToCubeUV(texture, cubeUVRenderTarget) {\r\n\t\t\tconst renderer = this._renderer;\r\n\r\n\t\t\tif (texture.isCubeTexture) {\r\n\t\t\t\tif (this._cubemapShader == null) {\r\n\t\t\t\t\tthis._cubemapShader = _getCubemapShader();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (this._equirectShader == null) {\r\n\t\t\t\t\tthis._equirectShader = _getEquirectShader();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\r\n\t\t\tconst mesh = new Mesh(_lodPlanes[0], material);\r\n\t\t\tconst uniforms = material.uniforms;\r\n\t\t\tuniforms['envMap'].value = texture;\r\n\r\n\t\t\tif (!texture.isCubeTexture) {\r\n\t\t\t\tuniforms['texelSize'].value.set(1.0 / texture.image.width, 1.0 / texture.image.height);\r\n\t\t\t}\r\n\r\n\t\t\tthis._setEncoding(uniforms['inputEncoding'], texture);\r\n\r\n\t\t\tthis._setEncoding(uniforms['outputEncoding'], cubeUVRenderTarget.texture);\r\n\r\n\t\t\t_setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\r\n\r\n\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\r\n\t\t\trenderer.render(mesh, _flatCamera);\r\n\t\t}\r\n\r\n\t\t_applyPMREM(cubeUVRenderTarget) {\r\n\t\t\tconst renderer = this._renderer;\r\n\t\t\tconst autoClear = renderer.autoClear;\r\n\t\t\trenderer.autoClear = false;\r\n\r\n\t\t\tfor (let i = 1; i < TOTAL_LODS; i++) {\r\n\t\t\t\tconst sigma = Math.sqrt(_sigmas[i] * _sigmas[i] - _sigmas[i - 1] * _sigmas[i - 1]);\r\n\t\t\t\tconst poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\r\n\r\n\t\t\t\tthis._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\r\n\t\t\t}\r\n\r\n\t\t\trenderer.autoClear = autoClear;\r\n\t\t}\r\n\t\t/**\r\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\r\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\r\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\r\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\r\n\t\t * accurate at the poles, but still does a decent job.\r\n\t\t */\r\n\r\n\r\n\t\t_blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\r\n\t\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\r\n\r\n\t\t\tthis._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, 'latitudinal', poleAxis);\r\n\r\n\t\t\tthis._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, 'longitudinal', poleAxis);\r\n\t\t}\r\n\r\n\t\t_halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\r\n\t\t\tconst renderer = this._renderer;\r\n\t\t\tconst blurMaterial = this._blurMaterial;\r\n\r\n\t\t\tif (direction !== 'latitudinal' && direction !== 'longitudinal') {\r\n\t\t\t\tconsole.error('blur direction must be either latitudinal or longitudinal!');\r\n\t\t\t} // Number of standard deviations at which to cut off the discrete approximation.\r\n\r\n\r\n\t\t\tconst STANDARD_DEVIATIONS = 3;\r\n\t\t\tconst blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\r\n\t\t\tconst blurUniforms = blurMaterial.uniforms;\r\n\t\t\tconst pixels = _sizeLods[lodIn] - 1;\r\n\t\t\tconst radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\r\n\t\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\r\n\t\t\tconst samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\r\n\r\n\t\t\tif (samples > MAX_SAMPLES) {\r\n\t\t\t\tconsole.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst weights = [];\r\n\t\t\tlet sum = 0;\r\n\r\n\t\t\tfor (let i = 0; i < MAX_SAMPLES; ++i) {\r\n\t\t\t\tconst x = i / sigmaPixels;\r\n\t\t\t\tconst weight = Math.exp(-x * x / 2);\r\n\t\t\t\tweights.push(weight);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tsum += weight;\r\n\t\t\t\t} else if (i < samples) {\r\n\t\t\t\t\tsum += 2 * weight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < weights.length; i++) {\r\n\t\t\t\tweights[i] = weights[i] / sum;\r\n\t\t\t}\r\n\r\n\t\t\tblurUniforms['envMap'].value = targetIn.texture;\r\n\t\t\tblurUniforms['samples'].value = samples;\r\n\t\t\tblurUniforms['weights'].value = weights;\r\n\t\t\tblurUniforms['latitudinal'].value = direction === 'latitudinal';\r\n\r\n\t\t\tif (poleAxis) {\r\n\t\t\t\tblurUniforms['poleAxis'].value = poleAxis;\r\n\t\t\t}\r\n\r\n\t\t\tblurUniforms['dTheta'].value = radiansPerPixel;\r\n\t\t\tblurUniforms['mipInt'].value = LOD_MAX - lodIn;\r\n\r\n\t\t\tthis._setEncoding(blurUniforms['inputEncoding'], targetIn.texture);\r\n\r\n\t\t\tthis._setEncoding(blurUniforms['outputEncoding'], targetIn.texture);\r\n\r\n\t\t\tconst outputSize = _sizeLods[lodOut];\r\n\t\t\tconst x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\r\n\t\t\tconst y = (lodOut === 0 ? 0 : 2 * SIZE_MAX) + 2 * outputSize * (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\r\n\r\n\t\t\t_setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\r\n\r\n\t\t\trenderer.setRenderTarget(targetOut);\r\n\t\t\trenderer.render(blurMesh, _flatCamera);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction _isLDR(texture) {\r\n\t\tif (texture === undefined || texture.type !== UnsignedByteType) return false;\r\n\t\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\r\n\t}\r\n\r\n\tfunction _createPlanes() {\r\n\t\tconst _lodPlanes = [];\r\n\t\tconst _sizeLods = [];\r\n\t\tconst _sigmas = [];\r\n\t\tlet lod = LOD_MAX;\r\n\r\n\t\tfor (let i = 0; i < TOTAL_LODS; i++) {\r\n\t\t\tconst sizeLod = Math.pow(2, lod);\r\n\r\n\t\t\t_sizeLods.push(sizeLod);\r\n\r\n\t\t\tlet sigma = 1.0 / sizeLod;\r\n\r\n\t\t\tif (i > LOD_MAX - LOD_MIN) {\r\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[i - LOD_MAX + LOD_MIN - 1];\r\n\t\t\t} else if (i == 0) {\r\n\t\t\t\tsigma = 0;\r\n\t\t\t}\r\n\r\n\t\t\t_sigmas.push(sigma);\r\n\r\n\t\t\tconst texelSize = 1.0 / (sizeLod - 1);\r\n\t\t\tconst min = -texelSize / 2;\r\n\t\t\tconst max = 1 + texelSize / 2;\r\n\t\t\tconst uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\r\n\t\t\tconst cubeFaces = 6;\r\n\t\t\tconst vertices = 6;\r\n\t\t\tconst positionSize = 3;\r\n\t\t\tconst uvSize = 2;\r\n\t\t\tconst faceIndexSize = 1;\r\n\t\t\tconst position = new Float32Array(positionSize * vertices * cubeFaces);\r\n\t\t\tconst uv = new Float32Array(uvSize * vertices * cubeFaces);\r\n\t\t\tconst faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\r\n\r\n\t\t\tfor (let face = 0; face < cubeFaces; face++) {\r\n\t\t\t\tconst x = face % 3 * 2 / 3 - 1;\r\n\t\t\t\tconst y = face > 2 ? 0 : -1;\r\n\t\t\t\tconst coordinates = [x, y, 0, x + 2 / 3, y, 0, x + 2 / 3, y + 1, 0, x, y, 0, x + 2 / 3, y + 1, 0, x, y + 1, 0];\r\n\t\t\t\tposition.set(coordinates, positionSize * vertices * face);\r\n\t\t\t\tuv.set(uv1, uvSize * vertices * face);\r\n\t\t\t\tconst fill = [face, face, face, face, face, face];\r\n\t\t\t\tfaceIndex.set(fill, faceIndexSize * vertices * face);\r\n\t\t\t}\r\n\r\n\t\t\tconst planes = new BufferGeometry();\r\n\t\t\tplanes.setAttribute('position', new BufferAttribute(position, positionSize));\r\n\t\t\tplanes.setAttribute('uv', new BufferAttribute(uv, uvSize));\r\n\t\t\tplanes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\r\n\r\n\t\t\t_lodPlanes.push(planes);\r\n\r\n\t\t\tif (lod > LOD_MIN) {\r\n\t\t\t\tlod--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t_lodPlanes,\r\n\t\t\t_sizeLods,\r\n\t\t\t_sigmas\r\n\t\t};\r\n\t}\r\n\r\n\tfunction _createRenderTarget(params) {\r\n\t\tconst cubeUVRenderTarget = new WebGLRenderTarget(3 * SIZE_MAX, 3 * SIZE_MAX, params);\r\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\r\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\r\n\t\tcubeUVRenderTarget.scissorTest = true;\r\n\t\treturn cubeUVRenderTarget;\r\n\t}\r\n\r\n\tfunction _setViewport(target, x, y, width, height) {\r\n\t\ttarget.viewport.set(x, y, width, height);\r\n\t\ttarget.scissor.set(x, y, width, height);\r\n\t}\r\n\r\n\tfunction _getBlurShader(maxSamples) {\r\n\t\tconst weights = new Float32Array(maxSamples);\r\n\t\tconst poleAxis = new Vector3(0, 1, 0);\r\n\t\tconst shaderMaterial = new RawShaderMaterial({\r\n\t\t\tname: 'SphericalGaussianBlur',\r\n\t\t\tdefines: {\r\n\t\t\t\t'n': maxSamples\r\n\t\t\t},\r\n\t\t\tuniforms: {\r\n\t\t\t\t'envMap': {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t},\r\n\t\t\t\t'samples': {\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\t'weights': {\r\n\t\t\t\t\tvalue: weights\r\n\t\t\t\t},\r\n\t\t\t\t'latitudinal': {\r\n\t\t\t\t\tvalue: false\r\n\t\t\t\t},\r\n\t\t\t\t'dTheta': {\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t},\r\n\t\t\t\t'mipInt': {\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t},\r\n\t\t\t\t'poleAxis': {\r\n\t\t\t\t\tvalue: poleAxis\r\n\t\t\t\t},\r\n\t\t\t\t'inputEncoding': {\r\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\r\n\t\t\t\t},\r\n\t\t\t\t'outputEncoding': {\r\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: _getCommonVertexShader(),\r\n\t\t\tfragmentShader:\r\n\t\t\t/* glsl */\r\n\t\t\t`\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform sampler2D envMap;\r\n\t\t\tuniform int samples;\r\n\t\t\tuniform float weights[ n ];\r\n\t\t\tuniform bool latitudinal;\r\n\t\t\tuniform float dTheta;\r\n\t\t\tuniform float mipInt;\r\n\t\t\tuniform vec3 poleAxis;\r\n\r\n\t\t\t${_getEncodings()}\r\n\r\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\r\n\t\t\t#include <cube_uv_reflection_fragment>\r\n\r\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\r\n\r\n\t\t\t\tfloat cosTheta = cos( theta );\r\n\t\t\t\t// Rodrigues' axis-angle rotation\r\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\r\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\r\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\r\n\r\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\r\n\r\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\r\n\r\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\taxis = normalize( axis );\r\n\r\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\r\n\r\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\r\n\r\n\t\t\t\t\tif ( i >= samples ) {\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfloat theta = dTheta * float( i );\r\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\r\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\t\t\tblending: NoBlending,\r\n\t\t\tdepthTest: false,\r\n\t\t\tdepthWrite: false\r\n\t\t});\r\n\t\treturn shaderMaterial;\r\n\t}\r\n\r\n\tfunction _getEquirectShader() {\r\n\t\tconst texelSize = new Vector2(1, 1);\r\n\t\tconst shaderMaterial = new RawShaderMaterial({\r\n\t\t\tname: 'EquirectangularToCubeUV',\r\n\t\t\tuniforms: {\r\n\t\t\t\t'envMap': {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t},\r\n\t\t\t\t'texelSize': {\r\n\t\t\t\t\tvalue: texelSize\r\n\t\t\t\t},\r\n\t\t\t\t'inputEncoding': {\r\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\r\n\t\t\t\t},\r\n\t\t\t\t'outputEncoding': {\r\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: _getCommonVertexShader(),\r\n\t\t\tfragmentShader:\r\n\t\t\t/* glsl */\r\n\t\t\t`\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform sampler2D envMap;\r\n\t\t\tuniform vec2 texelSize;\r\n\r\n\t\t\t${_getEncodings()}\r\n\r\n\t\t\t#include <common>\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\r\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\r\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\r\n\r\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\r\n\t\t\t\tuv -= f * texelSize;\r\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\r\n\t\t\t\tuv.x += texelSize.x;\r\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\r\n\t\t\t\tuv.y += texelSize.y;\r\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\r\n\t\t\t\tuv.x -= texelSize.x;\r\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\r\n\r\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\r\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\r\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\r\n\r\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\t\t\tblending: NoBlending,\r\n\t\t\tdepthTest: false,\r\n\t\t\tdepthWrite: false\r\n\t\t});\r\n\t\treturn shaderMaterial;\r\n\t}\r\n\r\n\tfunction _getCubemapShader() {\r\n\t\tconst shaderMaterial = new RawShaderMaterial({\r\n\t\t\tname: 'CubemapToCubeUV',\r\n\t\t\tuniforms: {\r\n\t\t\t\t'envMap': {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t},\r\n\t\t\t\t'inputEncoding': {\r\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\r\n\t\t\t\t},\r\n\t\t\t\t'outputEncoding': {\r\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: _getCommonVertexShader(),\r\n\t\t\tfragmentShader:\r\n\t\t\t/* glsl */\r\n\t\t\t`\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform samplerCube envMap;\r\n\r\n\t\t\t${_getEncodings()}\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\r\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\t\t\tblending: NoBlending,\r\n\t\t\tdepthTest: false,\r\n\t\t\tdepthWrite: false\r\n\t\t});\r\n\t\treturn shaderMaterial;\r\n\t}\r\n\r\n\tfunction _getCommonVertexShader() {\r\n\t\treturn (\r\n\t\t\t/* glsl */\r\n\t\t\t`\r\n\r\n\t\tprecision mediump float;\r\n\t\tprecision mediump int;\r\n\r\n\t\tattribute vec3 position;\r\n\t\tattribute vec2 uv;\r\n\t\tattribute float faceIndex;\r\n\r\n\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t// RH coordinate system; PMREM face-indexing convention\r\n\t\tvec3 getDirection( vec2 uv, float face ) {\r\n\r\n\t\t\tuv = 2.0 * uv - 1.0;\r\n\r\n\t\t\tvec3 direction = vec3( uv, 1.0 );\r\n\r\n\t\t\tif ( face == 0.0 ) {\r\n\r\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\r\n\r\n\t\t\t} else if ( face == 1.0 ) {\r\n\r\n\t\t\t\tdirection = direction.xzy;\r\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\r\n\r\n\t\t\t} else if ( face == 2.0 ) {\r\n\r\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\r\n\r\n\t\t\t} else if ( face == 3.0 ) {\r\n\r\n\t\t\t\tdirection = direction.zyx;\r\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\r\n\r\n\t\t\t} else if ( face == 4.0 ) {\r\n\r\n\t\t\t\tdirection = direction.xzy;\r\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\r\n\r\n\t\t\t} else if ( face == 5.0 ) {\r\n\r\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn direction;\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\r\n\t\t\tgl_Position = vec4( position, 1.0 );\r\n\r\n\t\t}\r\n\t`\r\n\t\t);\r\n\t}\r\n\r\n\tfunction _getEncodings() {\r\n\t\treturn (\r\n\t\t\t/* glsl */\r\n\t\t\t`\r\n\r\n\t\tuniform int inputEncoding;\r\n\t\tuniform int outputEncoding;\r\n\r\n\t\t#include <encodings_pars_fragment>\r\n\r\n\t\tvec4 inputTexelToLinear( vec4 value ) {\r\n\r\n\t\t\tif ( inputEncoding == 0 ) {\r\n\r\n\t\t\t\treturn value;\r\n\r\n\t\t\t} else if ( inputEncoding == 1 ) {\r\n\r\n\t\t\t\treturn sRGBToLinear( value );\r\n\r\n\t\t\t} else if ( inputEncoding == 2 ) {\r\n\r\n\t\t\t\treturn RGBEToLinear( value );\r\n\r\n\t\t\t} else if ( inputEncoding == 3 ) {\r\n\r\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\r\n\r\n\t\t\t} else if ( inputEncoding == 4 ) {\r\n\r\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\r\n\r\n\t\t\t} else if ( inputEncoding == 5 ) {\r\n\r\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn GammaToLinear( value, 2.2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvec4 linearToOutputTexel( vec4 value ) {\r\n\r\n\t\t\tif ( outputEncoding == 0 ) {\r\n\r\n\t\t\t\treturn value;\r\n\r\n\t\t\t} else if ( outputEncoding == 1 ) {\r\n\r\n\t\t\t\treturn LinearTosRGB( value );\r\n\r\n\t\t\t} else if ( outputEncoding == 2 ) {\r\n\r\n\t\t\t\treturn LinearToRGBE( value );\r\n\r\n\t\t\t} else if ( outputEncoding == 3 ) {\r\n\r\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\r\n\r\n\t\t\t} else if ( outputEncoding == 4 ) {\r\n\r\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\r\n\r\n\t\t\t} else if ( outputEncoding == 5 ) {\r\n\r\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn LinearToGamma( value, 2.2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\r\n\r\n\t\t\treturn inputTexelToLinear( color );\r\n\r\n\t\t}\r\n\t`\r\n\t\t);\r\n\t}\r\n\r\n\tfunction WebGLCubeUVMaps(renderer) {\r\n\t\tlet cubeUVmaps = new WeakMap();\r\n\t\tlet pmremGenerator = null;\r\n\r\n\t\tfunction get(texture) {\r\n\t\t\tif (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\r\n\t\t\t\tconst mapping = texture.mapping;\r\n\t\t\t\tconst isEquirectMap = mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping;\r\n\t\t\t\tconst isCubeMap = mapping === CubeReflectionMapping || mapping === CubeRefractionMapping;\r\n\r\n\t\t\t\tif (isEquirectMap || isCubeMap) {\r\n\t\t\t\t\t// equirect/cube map to cubeUV conversion\r\n\t\t\t\t\tif (cubeUVmaps.has(texture)) {\r\n\t\t\t\t\t\treturn cubeUVmaps.get(texture).texture;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst image = texture.image;\r\n\r\n\t\t\t\t\t\tif (isEquirectMap && image && image.height > 0 || isCubeMap && image && isCubeTextureComplete(image)) {\r\n\t\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\t\t\t\t\t\tif (pmremGenerator === null) pmremGenerator = new PMREMGenerator(renderer);\r\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture) : pmremGenerator.fromCubemap(texture);\r\n\t\t\t\t\t\t\tcubeUVmaps.set(texture, renderTarget);\r\n\t\t\t\t\t\t\trenderer.setRenderTarget(currentRenderTarget);\r\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\r\n\t\t\t\t\t\t\treturn renderTarget.texture;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t\tfunction isCubeTextureComplete(image) {\r\n\t\t\tlet count = 0;\r\n\t\t\tconst length = 6;\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tif (image[i] !== undefined) count++;\r\n\t\t\t}\r\n\r\n\t\t\treturn count === length;\r\n\t\t}\r\n\r\n\t\tfunction onTextureDispose(event) {\r\n\t\t\tconst texture = event.target;\r\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\r\n\t\t\tconst cubemapUV = cubeUVmaps.get(texture);\r\n\r\n\t\t\tif (cubemapUV !== undefined) {\r\n\t\t\t\tcubeUVmaps.delete(texture);\r\n\t\t\t\tcubemapUV.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\tcubeUVmaps = new WeakMap();\r\n\r\n\t\t\tif (pmremGenerator !== null) {\r\n\t\t\t\tpmremGenerator.dispose();\r\n\t\t\t\tpmremGenerator = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLExtensions(gl) {\r\n\t\tconst extensions = {};\r\n\r\n\t\tfunction getExtension(name) {\r\n\t\t\tif (extensions[name] !== undefined) {\r\n\t\t\t\treturn extensions[name];\r\n\t\t\t}\r\n\r\n\t\t\tlet extension;\r\n\r\n\t\t\tswitch (name) {\r\n\t\t\t\tcase 'WEBGL_depth_texture':\r\n\t\t\t\t\textension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\textension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\textension = gl.getExtension(name);\r\n\t\t\t}\r\n\r\n\t\t\textensions[name] = extension;\r\n\t\t\treturn extension;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thas: function (name) {\r\n\t\t\t\treturn getExtension(name) !== null;\r\n\t\t\t},\r\n\t\t\tinit: function (capabilities) {\r\n\t\t\t\tif (capabilities.isWebGL2) {\r\n\t\t\t\t\tgetExtension('EXT_color_buffer_float');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgetExtension('WEBGL_depth_texture');\r\n\t\t\t\t\tgetExtension('OES_texture_float');\r\n\t\t\t\t\tgetExtension('OES_texture_half_float');\r\n\t\t\t\t\tgetExtension('OES_texture_half_float_linear');\r\n\t\t\t\t\tgetExtension('OES_standard_derivatives');\r\n\t\t\t\t\tgetExtension('OES_element_index_uint');\r\n\t\t\t\t\tgetExtension('OES_vertex_array_object');\r\n\t\t\t\t\tgetExtension('ANGLE_instanced_arrays');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgetExtension('OES_texture_float_linear');\r\n\t\t\t\tgetExtension('EXT_color_buffer_half_float');\r\n\t\t\t\tgetExtension('EXT_multisampled_render_to_texture');\r\n\t\t\t},\r\n\t\t\tget: function (name) {\r\n\t\t\t\tconst extension = getExtension(name);\r\n\r\n\t\t\t\tif (extension === null) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn extension;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLGeometries(gl, attributes, info, bindingStates) {\r\n\t\tconst geometries = {};\r\n\t\tconst wireframeAttributes = new WeakMap();\r\n\r\n\t\tfunction onGeometryDispose(event) {\r\n\t\t\tconst geometry = event.target;\r\n\r\n\t\t\tif (geometry.index !== null) {\r\n\t\t\t\tattributes.remove(geometry.index);\r\n\t\t\t}\r\n\r\n\t\t\tfor (const name in geometry.attributes) {\r\n\t\t\t\tattributes.remove(geometry.attributes[name]);\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.removeEventListener('dispose', onGeometryDispose);\r\n\t\t\tdelete geometries[geometry.id];\r\n\t\t\tconst attribute = wireframeAttributes.get(geometry);\r\n\r\n\t\t\tif (attribute) {\r\n\t\t\t\tattributes.remove(attribute);\r\n\t\t\t\twireframeAttributes.delete(geometry);\r\n\t\t\t}\r\n\r\n\t\t\tbindingStates.releaseStatesOfGeometry(geometry);\r\n\r\n\t\t\tif (geometry.isInstancedBufferGeometry === true) {\r\n\t\t\t\tdelete geometry._maxInstanceCount;\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tinfo.memory.geometries--;\r\n\t\t}\r\n\r\n\t\tfunction get(object, geometry) {\r\n\t\t\tif (geometries[geometry.id] === true) return geometry;\r\n\t\t\tgeometry.addEventListener('dispose', onGeometryDispose);\r\n\t\t\tgeometries[geometry.id] = true;\r\n\t\t\tinfo.memory.geometries++;\r\n\t\t\treturn geometry;\r\n\t\t}\r\n\r\n\t\tfunction update(geometry) {\r\n\t\t\tconst geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\r\n\r\n\t\t\tfor (const name in geometryAttributes) {\r\n\t\t\t\tattributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\r\n\t\t\t} // morph targets\r\n\r\n\r\n\t\t\tconst morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor (const name in morphAttributes) {\r\n\t\t\t\tconst array = morphAttributes[name];\r\n\r\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\t\tattributes.update(array[i], gl.ARRAY_BUFFER);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction updateWireframeAttribute(geometry) {\r\n\t\t\tconst indices = [];\r\n\t\t\tconst geometryIndex = geometry.index;\r\n\t\t\tconst geometryPosition = geometry.attributes.position;\r\n\t\t\tlet version = 0;\r\n\r\n\t\t\tif (geometryIndex !== null) {\r\n\t\t\t\tconst array = geometryIndex.array;\r\n\t\t\t\tversion = geometryIndex.version;\r\n\r\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\r\n\t\t\t\t\tconst a = array[i + 0];\r\n\t\t\t\t\tconst b = array[i + 1];\r\n\t\t\t\t\tconst c = array[i + 2];\r\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst array = geometryPosition.array;\r\n\t\t\t\tversion = geometryPosition.version;\r\n\r\n\t\t\t\tfor (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\r\n\t\t\t\t\tconst a = i + 0;\r\n\t\t\t\t\tconst b = i + 1;\r\n\t\t\t\t\tconst c = i + 2;\r\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\r\n\t\t\tattribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\r\n\t\t\t//\r\n\r\n\t\t\tconst previousAttribute = wireframeAttributes.get(geometry);\r\n\t\t\tif (previousAttribute) attributes.remove(previousAttribute); //\r\n\r\n\t\t\twireframeAttributes.set(geometry, attribute);\r\n\t\t}\r\n\r\n\t\tfunction getWireframeAttribute(geometry) {\r\n\t\t\tconst currentAttribute = wireframeAttributes.get(geometry);\r\n\r\n\t\t\tif (currentAttribute) {\r\n\t\t\t\tconst geometryIndex = geometry.index;\r\n\r\n\t\t\t\tif (geometryIndex !== null) {\r\n\t\t\t\t\t// if the attribute is obsolete, create a new one\r\n\t\t\t\t\tif (currentAttribute.version < geometryIndex.version) {\r\n\t\t\t\t\t\tupdateWireframeAttribute(geometry);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tupdateWireframeAttribute(geometry);\r\n\t\t\t}\r\n\r\n\t\t\treturn wireframeAttributes.get(geometry);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tupdate: update,\r\n\t\t\tgetWireframeAttribute: getWireframeAttribute\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\t\tlet mode;\r\n\r\n\t\tfunction setMode(value) {\r\n\t\t\tmode = value;\r\n\t\t}\r\n\r\n\t\tlet type, bytesPerElement;\r\n\r\n\t\tfunction setIndex(value) {\r\n\t\t\ttype = value.type;\r\n\t\t\tbytesPerElement = value.bytesPerElement;\r\n\t\t}\r\n\r\n\t\tfunction render(start, count) {\r\n\t\t\tgl.drawElements(mode, count, type, start * bytesPerElement);\r\n\t\t\tinfo.update(count, mode, 1);\r\n\t\t}\r\n\r\n\t\tfunction renderInstances(start, count, primcount) {\r\n\t\t\tif (primcount === 0) return;\r\n\t\t\tlet extension, methodName;\r\n\r\n\t\t\tif (isWebGL2) {\r\n\t\t\t\textension = gl;\r\n\t\t\t\tmethodName = 'drawElementsInstanced';\r\n\t\t\t} else {\r\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\r\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\r\n\r\n\t\t\t\tif (extension === null) {\r\n\t\t\t\t\tconsole.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\textension[methodName](mode, count, type, start * bytesPerElement, primcount);\r\n\t\t\tinfo.update(count, mode, primcount);\r\n\t\t} //\r\n\r\n\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t}\r\n\r\n\tfunction WebGLInfo(gl) {\r\n\t\tconst memory = {\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\t};\r\n\t\tconst render = {\r\n\t\t\tframe: 0,\r\n\t\t\tcalls: 0,\r\n\t\t\ttriangles: 0,\r\n\t\t\tpoints: 0,\r\n\t\t\tlines: 0\r\n\t\t};\r\n\r\n\t\tfunction update(count, mode, instanceCount) {\r\n\t\t\trender.calls++;\r\n\r\n\t\t\tswitch (mode) {\r\n\t\t\t\tcase gl.TRIANGLES:\r\n\t\t\t\t\trender.triangles += instanceCount * (count / 3);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.LINES:\r\n\t\t\t\t\trender.lines += instanceCount * (count / 2);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.LINE_STRIP:\r\n\t\t\t\t\trender.lines += instanceCount * (count - 1);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.LINE_LOOP:\r\n\t\t\t\t\trender.lines += instanceCount * count;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.POINTS:\r\n\t\t\t\t\trender.points += instanceCount * count;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.error('THREE.WebGLInfo: Unknown draw mode:', mode);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction reset() {\r\n\t\t\trender.frame++;\r\n\t\t\trender.calls = 0;\r\n\t\t\trender.triangles = 0;\r\n\t\t\trender.points = 0;\r\n\t\t\trender.lines = 0;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tmemory: memory,\r\n\t\t\trender: render,\r\n\t\t\tprograms: null,\r\n\t\t\tautoReset: true,\r\n\t\t\treset: reset,\r\n\t\t\tupdate: update\r\n\t\t};\r\n\t}\r\n\r\n\tclass DataTexture2DArray extends Texture {\r\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\r\n\t\t\tsuper(null);\r\n\t\t\tthis.image = {\r\n\t\t\t\tdata,\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tdepth\r\n\t\t\t};\r\n\t\t\tthis.magFilter = NearestFilter;\r\n\t\t\tthis.minFilter = NearestFilter;\r\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\t\t\tthis.generateMipmaps = false;\r\n\t\t\tthis.flipY = false;\r\n\t\t\tthis.unpackAlignment = 1;\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\r\n\r\n\tfunction numericalSort(a, b) {\r\n\t\treturn a[0] - b[0];\r\n\t}\r\n\r\n\tfunction absNumericalSort(a, b) {\r\n\t\treturn Math.abs(b[1]) - Math.abs(a[1]);\r\n\t}\r\n\r\n\tfunction denormalize(morph, attribute) {\r\n\t\tlet denominator = 1;\r\n\t\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\r\n\t\tif (array instanceof Int8Array) denominator = 127;else if (array instanceof Int16Array) denominator = 32767;else if (array instanceof Int32Array) denominator = 2147483647;else console.error('THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array);\r\n\t\tmorph.divideScalar(denominator);\r\n\t}\r\n\r\n\tfunction WebGLMorphtargets(gl, capabilities, textures) {\r\n\t\tconst influencesList = {};\r\n\t\tconst morphInfluences = new Float32Array(8);\r\n\t\tconst morphTextures = new WeakMap();\r\n\t\tconst morph = new Vector3();\r\n\t\tconst workInfluences = [];\r\n\r\n\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\tworkInfluences[i] = [i, 0];\r\n\t\t}\r\n\r\n\t\tfunction update(object, geometry, material, program) {\r\n\t\t\tconst objectInfluences = object.morphTargetInfluences;\r\n\r\n\t\t\tif (capabilities.isWebGL2 === true) {\r\n\t\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\r\n\t\t\t\t// into an array of data textures. Each layer represents a single morph target.\r\n\t\t\t\tconst numberOfMorphTargets = geometry.morphAttributes.position.length;\r\n\t\t\t\tlet entry = morphTextures.get(geometry);\r\n\r\n\t\t\t\tif (entry === undefined || entry.count !== numberOfMorphTargets) {\r\n\t\t\t\t\tif (entry !== undefined) entry.texture.dispose();\r\n\t\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\r\n\t\t\t\t\tconst morphTargets = geometry.morphAttributes.position;\r\n\t\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\r\n\t\t\t\t\tconst numberOfVertices = geometry.attributes.position.count;\r\n\t\t\t\t\tconst numberOfVertexData = hasMorphNormals === true ? 2 : 1; // (v,n) vs. (v)\r\n\r\n\t\t\t\t\tlet width = numberOfVertices * numberOfVertexData;\r\n\t\t\t\t\tlet height = 1;\r\n\r\n\t\t\t\t\tif (width > capabilities.maxTextureSize) {\r\n\t\t\t\t\t\theight = Math.ceil(width / capabilities.maxTextureSize);\r\n\t\t\t\t\t\twidth = capabilities.maxTextureSize;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst buffer = new Float32Array(width * height * 4 * numberOfMorphTargets);\r\n\t\t\t\t\tconst texture = new DataTexture2DArray(buffer, width, height, numberOfMorphTargets);\r\n\t\t\t\t\ttexture.format = RGBAFormat; // using RGBA since RGB might be emulated (and is thus slower)\r\n\r\n\t\t\t\t\ttexture.type = FloatType; // fill buffer\r\n\r\n\t\t\t\t\tconst vertexDataStride = numberOfVertexData * 4;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < numberOfMorphTargets; i++) {\r\n\t\t\t\t\t\tconst morphTarget = morphTargets[i];\r\n\t\t\t\t\t\tconst morphNormal = morphNormals[i];\r\n\t\t\t\t\t\tconst offset = width * height * 4 * i;\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j < morphTarget.count; j++) {\r\n\t\t\t\t\t\t\tmorph.fromBufferAttribute(morphTarget, j);\r\n\t\t\t\t\t\t\tif (morphTarget.normalized === true) denormalize(morph, morphTarget);\r\n\t\t\t\t\t\t\tconst stride = j * vertexDataStride;\r\n\t\t\t\t\t\t\tbuffer[offset + stride + 0] = morph.x;\r\n\t\t\t\t\t\t\tbuffer[offset + stride + 1] = morph.y;\r\n\t\t\t\t\t\t\tbuffer[offset + stride + 2] = morph.z;\r\n\t\t\t\t\t\t\tbuffer[offset + stride + 3] = 0;\r\n\r\n\t\t\t\t\t\t\tif (hasMorphNormals === true) {\r\n\t\t\t\t\t\t\t\tmorph.fromBufferAttribute(morphNormal, j);\r\n\t\t\t\t\t\t\t\tif (morphNormal.normalized === true) denormalize(morph, morphNormal);\r\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 4] = morph.x;\r\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 5] = morph.y;\r\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 6] = morph.z;\r\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 7] = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tentry = {\r\n\t\t\t\t\t\tcount: numberOfMorphTargets,\r\n\t\t\t\t\t\ttexture: texture,\r\n\t\t\t\t\t\tsize: new Vector2(width, height)\r\n\t\t\t\t\t};\r\n\t\t\t\t\tmorphTextures.set(geometry, entry);\r\n\t\t\t\t} //\r\n\r\n\r\n\t\t\t\tlet morphInfluencesSum = 0;\r\n\r\n\t\t\t\tfor (let i = 0; i < objectInfluences.length; i++) {\r\n\t\t\t\t\tmorphInfluencesSum += objectInfluences[i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\r\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\r\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', objectInfluences);\r\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetsTexture', entry.texture, textures);\r\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetsTextureSize', entry.size);\r\n\t\t\t} else {\r\n\t\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\r\n\t\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\r\n\t\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\r\n\t\t\t\tlet influences = influencesList[geometry.id];\r\n\r\n\t\t\t\tif (influences === undefined || influences.length !== length) {\r\n\t\t\t\t\t// initialise list\r\n\t\t\t\t\tinfluences = [];\r\n\r\n\t\t\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\t\t\tinfluences[i] = [i, 0];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tinfluencesList[geometry.id] = influences;\r\n\t\t\t\t} // Collect influences\r\n\r\n\r\n\t\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\t\tconst influence = influences[i];\r\n\t\t\t\t\tinfluence[0] = i;\r\n\t\t\t\t\tinfluence[1] = objectInfluences[i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinfluences.sort(absNumericalSort);\r\n\r\n\t\t\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\t\t\tif (i < length && influences[i][1]) {\r\n\t\t\t\t\t\tworkInfluences[i][0] = influences[i][0];\r\n\t\t\t\t\t\tworkInfluences[i][1] = influences[i][1];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tworkInfluences[i][0] = Number.MAX_SAFE_INTEGER;\r\n\t\t\t\t\t\tworkInfluences[i][1] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tworkInfluences.sort(numericalSort);\r\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position;\r\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal;\r\n\t\t\t\tlet morphInfluencesSum = 0;\r\n\r\n\t\t\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\t\t\tconst influence = workInfluences[i];\r\n\t\t\t\t\tconst index = influence[0];\r\n\t\t\t\t\tconst value = influence[1];\r\n\r\n\t\t\t\t\tif (index !== Number.MAX_SAFE_INTEGER && value) {\r\n\t\t\t\t\t\tif (morphTargets && geometry.getAttribute('morphTarget' + i) !== morphTargets[index]) {\r\n\t\t\t\t\t\t\tgeometry.setAttribute('morphTarget' + i, morphTargets[index]);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (morphNormals && geometry.getAttribute('morphNormal' + i) !== morphNormals[index]) {\r\n\t\t\t\t\t\t\tgeometry.setAttribute('morphNormal' + i, morphNormals[index]);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmorphInfluences[i] = value;\r\n\t\t\t\t\t\tmorphInfluencesSum += value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (morphTargets && geometry.hasAttribute('morphTarget' + i) === true) {\r\n\t\t\t\t\t\t\tgeometry.deleteAttribute('morphTarget' + i);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (morphNormals && geometry.hasAttribute('morphNormal' + i) === true) {\r\n\t\t\t\t\t\t\tgeometry.deleteAttribute('morphNormal' + i);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmorphInfluences[i] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // GLSL shader uses formula baseinfluence * base + sum(target * influence)\r\n\t\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\r\n\t\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\r\n\r\n\r\n\t\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\r\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\r\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tupdate: update\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLObjects(gl, geometries, attributes, info) {\r\n\t\tlet updateMap = new WeakMap();\r\n\r\n\t\tfunction update(object) {\r\n\t\t\tconst frame = info.render.frame;\r\n\t\t\tconst geometry = object.geometry;\r\n\t\t\tconst buffergeometry = geometries.get(object, geometry); // Update once per frame\r\n\r\n\t\t\tif (updateMap.get(buffergeometry) !== frame) {\r\n\t\t\t\tgeometries.update(buffergeometry);\r\n\t\t\t\tupdateMap.set(buffergeometry, frame);\r\n\t\t\t}\r\n\r\n\t\t\tif (object.isInstancedMesh) {\r\n\t\t\t\tif (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\r\n\t\t\t\t\tobject.addEventListener('dispose', onInstancedMeshDispose);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes.update(object.instanceMatrix, gl.ARRAY_BUFFER);\r\n\r\n\t\t\t\tif (object.instanceColor !== null) {\r\n\t\t\t\t\tattributes.update(object.instanceColor, gl.ARRAY_BUFFER);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn buffergeometry;\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\tupdateMap = new WeakMap();\r\n\t\t}\r\n\r\n\t\tfunction onInstancedMeshDispose(event) {\r\n\t\t\tconst instancedMesh = event.target;\r\n\t\t\tinstancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\r\n\t\t\tattributes.remove(instancedMesh.instanceMatrix);\r\n\t\t\tif (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tupdate: update,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\t}\r\n\r\n\tclass DataTexture3D extends Texture {\r\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\r\n\t\t\t// We're going to add .setXXX() methods for setting properties later.\r\n\t\t\t// Users can still set in DataTexture3D directly.\r\n\t\t\t//\r\n\t\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\r\n\t\t\t// \ttexture.anisotropy = 16;\r\n\t\t\t//\r\n\t\t\t// See #14839\r\n\t\t\tsuper(null);\r\n\t\t\tthis.image = {\r\n\t\t\t\tdata,\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tdepth\r\n\t\t\t};\r\n\t\t\tthis.magFilter = NearestFilter;\r\n\t\t\tthis.minFilter = NearestFilter;\r\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\t\t\tthis.generateMipmaps = false;\r\n\t\t\tthis.flipY = false;\r\n\t\t\tthis.unpackAlignment = 1;\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tDataTexture3D.prototype.isDataTexture3D = true;\r\n\r\n\t/**\r\n\t * Uniforms of a program.\r\n\t * Those form a tree structure with a special top-level container for the root,\r\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\r\n\t *\r\n\t *\r\n\t * Properties of inner nodes including the top-level container:\r\n\t *\r\n\t * .seq - array of nested uniforms\r\n\t * .map - nested uniforms by name\r\n\t *\r\n\t *\r\n\t * Methods of all nodes except the top-level container:\r\n\t *\r\n\t * .setValue( gl, value, [textures] )\r\n\t *\r\n\t * \t\tuploads a uniform value(s)\r\n\t *\t\tthe 'textures' parameter is needed for sampler uniforms\r\n\t *\r\n\t *\r\n\t * Static methods of the top-level container (textures factorizations):\r\n\t *\r\n\t * .upload( gl, seq, values, textures )\r\n\t *\r\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n\t *\r\n\t * .seqWithValue( seq, values ) : filteredSeq\r\n\t *\r\n\t * \t\tfilters 'seq' entries with corresponding entry in values\r\n\t *\r\n\t *\r\n\t * Methods of the top-level container (textures factorizations):\r\n\t *\r\n\t * .setValue( gl, name, value, textures )\r\n\t *\r\n\t * \t\tsets uniform with\tname 'name' to 'value'\r\n\t *\r\n\t * .setOptional( gl, obj, prop )\r\n\t *\r\n\t * \t\tlike .set for an optional property of the object\r\n\t *\r\n\t */\r\n\tconst emptyTexture = new Texture();\r\n\tconst emptyTexture2dArray = new DataTexture2DArray();\r\n\tconst emptyTexture3d = new DataTexture3D();\r\n\tconst emptyCubeTexture = new CubeTexture(); // --- Utilities ---\r\n\t// Array Caches (provide typed arrays for temporary by size)\r\n\r\n\tconst arrayCacheF32 = [];\r\n\tconst arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\r\n\r\n\tconst mat4array = new Float32Array(16);\r\n\tconst mat3array = new Float32Array(9);\r\n\tconst mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\r\n\r\n\tfunction flatten(array, nBlocks, blockSize) {\r\n\t\tconst firstElem = array[0];\r\n\t\tif (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\r\n\t\t// see http://jacksondunstan.com/articles/983\r\n\r\n\t\tconst n = nBlocks * blockSize;\r\n\t\tlet r = arrayCacheF32[n];\r\n\r\n\t\tif (r === undefined) {\r\n\t\t\tr = new Float32Array(n);\r\n\t\t\tarrayCacheF32[n] = r;\r\n\t\t}\r\n\r\n\t\tif (nBlocks !== 0) {\r\n\t\t\tfirstElem.toArray(r, 0);\r\n\r\n\t\t\tfor (let i = 1, offset = 0; i !== nBlocks; ++i) {\r\n\t\t\t\toffset += blockSize;\r\n\t\t\t\tarray[i].toArray(r, offset);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\t}\r\n\r\n\tfunction arraysEqual(a, b) {\r\n\t\tif (a.length !== b.length) return false;\r\n\r\n\t\tfor (let i = 0, l = a.length; i < l; i++) {\r\n\t\t\tif (a[i] !== b[i]) return false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction copyArray(a, b) {\r\n\t\tfor (let i = 0, l = b.length; i < l; i++) {\r\n\t\t\ta[i] = b[i];\r\n\t\t}\r\n\t} // Texture unit allocation\r\n\r\n\r\n\tfunction allocTexUnits(textures, n) {\r\n\t\tlet r = arrayCacheI32[n];\r\n\r\n\t\tif (r === undefined) {\r\n\t\t\tr = new Int32Array(n);\r\n\t\t\tarrayCacheI32[n] = r;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i !== n; ++i) {\r\n\t\t\tr[i] = textures.allocateTextureUnit();\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\t} // --- Setters ---\r\n\t// Note: Defining these methods externally, because they come in a bunch\r\n\t// and this way their names minify.\r\n\t// Single scalar\r\n\r\n\r\n\tfunction setValueV1f(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (cache[0] === v) return;\r\n\t\tgl.uniform1f(this.addr, v);\r\n\t\tcache[0] = v;\r\n\t} // Single float vector (from flat array or THREE.VectorN)\r\n\r\n\r\n\tfunction setValueV2f(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\r\n\t\tif (v.x !== undefined) {\r\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y) {\r\n\t\t\t\tgl.uniform2f(this.addr, v.x, v.y);\r\n\t\t\t\tcache[0] = v.x;\r\n\t\t\t\tcache[1] = v.y;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (arraysEqual(cache, v)) return;\r\n\t\t\tgl.uniform2fv(this.addr, v);\r\n\t\t\tcopyArray(cache, v);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setValueV3f(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\r\n\t\tif (v.x !== undefined) {\r\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\r\n\t\t\t\tgl.uniform3f(this.addr, v.x, v.y, v.z);\r\n\t\t\t\tcache[0] = v.x;\r\n\t\t\t\tcache[1] = v.y;\r\n\t\t\t\tcache[2] = v.z;\r\n\t\t\t}\r\n\t\t} else if (v.r !== undefined) {\r\n\t\t\tif (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\r\n\t\t\t\tgl.uniform3f(this.addr, v.r, v.g, v.b);\r\n\t\t\t\tcache[0] = v.r;\r\n\t\t\t\tcache[1] = v.g;\r\n\t\t\t\tcache[2] = v.b;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (arraysEqual(cache, v)) return;\r\n\t\t\tgl.uniform3fv(this.addr, v);\r\n\t\t\tcopyArray(cache, v);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setValueV4f(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\r\n\t\tif (v.x !== undefined) {\r\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\r\n\t\t\t\tgl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\r\n\t\t\t\tcache[0] = v.x;\r\n\t\t\t\tcache[1] = v.y;\r\n\t\t\t\tcache[2] = v.z;\r\n\t\t\t\tcache[3] = v.w;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (arraysEqual(cache, v)) return;\r\n\t\t\tgl.uniform4fv(this.addr, v);\r\n\t\t\tcopyArray(cache, v);\r\n\t\t}\r\n\t} // Single matrix (from flat array or THREE.MatrixN)\r\n\r\n\r\n\tfunction setValueM2(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst elements = v.elements;\r\n\r\n\t\tif (elements === undefined) {\r\n\t\t\tif (arraysEqual(cache, v)) return;\r\n\t\t\tgl.uniformMatrix2fv(this.addr, false, v);\r\n\t\t\tcopyArray(cache, v);\r\n\t\t} else {\r\n\t\t\tif (arraysEqual(cache, elements)) return;\r\n\t\t\tmat2array.set(elements);\r\n\t\t\tgl.uniformMatrix2fv(this.addr, false, mat2array);\r\n\t\t\tcopyArray(cache, elements);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setValueM3(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst elements = v.elements;\r\n\r\n\t\tif (elements === undefined) {\r\n\t\t\tif (arraysEqual(cache, v)) return;\r\n\t\t\tgl.uniformMatrix3fv(this.addr, false, v);\r\n\t\t\tcopyArray(cache, v);\r\n\t\t} else {\r\n\t\t\tif (arraysEqual(cache, elements)) return;\r\n\t\t\tmat3array.set(elements);\r\n\t\t\tgl.uniformMatrix3fv(this.addr, false, mat3array);\r\n\t\t\tcopyArray(cache, elements);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setValueM4(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst elements = v.elements;\r\n\r\n\t\tif (elements === undefined) {\r\n\t\t\tif (arraysEqual(cache, v)) return;\r\n\t\t\tgl.uniformMatrix4fv(this.addr, false, v);\r\n\t\t\tcopyArray(cache, v);\r\n\t\t} else {\r\n\t\t\tif (arraysEqual(cache, elements)) return;\r\n\t\t\tmat4array.set(elements);\r\n\t\t\tgl.uniformMatrix4fv(this.addr, false, mat4array);\r\n\t\t\tcopyArray(cache, elements);\r\n\t\t}\r\n\t} // Single integer / boolean\r\n\r\n\r\n\tfunction setValueV1i(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (cache[0] === v) return;\r\n\t\tgl.uniform1i(this.addr, v);\r\n\t\tcache[0] = v;\r\n\t} // Single integer / boolean vector (from flat array)\r\n\r\n\r\n\tfunction setValueV2i(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (arraysEqual(cache, v)) return;\r\n\t\tgl.uniform2iv(this.addr, v);\r\n\t\tcopyArray(cache, v);\r\n\t}\r\n\r\n\tfunction setValueV3i(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (arraysEqual(cache, v)) return;\r\n\t\tgl.uniform3iv(this.addr, v);\r\n\t\tcopyArray(cache, v);\r\n\t}\r\n\r\n\tfunction setValueV4i(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (arraysEqual(cache, v)) return;\r\n\t\tgl.uniform4iv(this.addr, v);\r\n\t\tcopyArray(cache, v);\r\n\t} // Single unsigned integer\r\n\r\n\r\n\tfunction setValueV1ui(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (cache[0] === v) return;\r\n\t\tgl.uniform1ui(this.addr, v);\r\n\t\tcache[0] = v;\r\n\t} // Single unsigned integer vector (from flat array)\r\n\r\n\r\n\tfunction setValueV2ui(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (arraysEqual(cache, v)) return;\r\n\t\tgl.uniform2uiv(this.addr, v);\r\n\t\tcopyArray(cache, v);\r\n\t}\r\n\r\n\tfunction setValueV3ui(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (arraysEqual(cache, v)) return;\r\n\t\tgl.uniform3uiv(this.addr, v);\r\n\t\tcopyArray(cache, v);\r\n\t}\r\n\r\n\tfunction setValueV4ui(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (arraysEqual(cache, v)) return;\r\n\t\tgl.uniform4uiv(this.addr, v);\r\n\t\tcopyArray(cache, v);\r\n\t} // Single texture (2D / Cube)\r\n\r\n\r\n\tfunction setValueT1(gl, v, textures) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst unit = textures.allocateTextureUnit();\r\n\r\n\t\tif (cache[0] !== unit) {\r\n\t\t\tgl.uniform1i(this.addr, unit);\r\n\t\t\tcache[0] = unit;\r\n\t\t}\r\n\r\n\t\ttextures.safeSetTexture2D(v || emptyTexture, unit);\r\n\t}\r\n\r\n\tfunction setValueT3D1(gl, v, textures) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst unit = textures.allocateTextureUnit();\r\n\r\n\t\tif (cache[0] !== unit) {\r\n\t\t\tgl.uniform1i(this.addr, unit);\r\n\t\t\tcache[0] = unit;\r\n\t\t}\r\n\r\n\t\ttextures.setTexture3D(v || emptyTexture3d, unit);\r\n\t}\r\n\r\n\tfunction setValueT6(gl, v, textures) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst unit = textures.allocateTextureUnit();\r\n\r\n\t\tif (cache[0] !== unit) {\r\n\t\t\tgl.uniform1i(this.addr, unit);\r\n\t\t\tcache[0] = unit;\r\n\t\t}\r\n\r\n\t\ttextures.safeSetTextureCube(v || emptyCubeTexture, unit);\r\n\t}\r\n\r\n\tfunction setValueT2DArray1(gl, v, textures) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst unit = textures.allocateTextureUnit();\r\n\r\n\t\tif (cache[0] !== unit) {\r\n\t\t\tgl.uniform1i(this.addr, unit);\r\n\t\t\tcache[0] = unit;\r\n\t\t}\r\n\r\n\t\ttextures.setTexture2DArray(v || emptyTexture2dArray, unit);\r\n\t} // Helper to pick the right setter for the singular case\r\n\r\n\r\n\tfunction getSingularSetter(type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 0x1406:\r\n\t\t\t\treturn setValueV1f;\r\n\t\t\t// FLOAT\r\n\r\n\t\t\tcase 0x8b50:\r\n\t\t\t\treturn setValueV2f;\r\n\t\t\t// _VEC2\r\n\r\n\t\t\tcase 0x8b51:\r\n\t\t\t\treturn setValueV3f;\r\n\t\t\t// _VEC3\r\n\r\n\t\t\tcase 0x8b52:\r\n\t\t\t\treturn setValueV4f;\r\n\t\t\t// _VEC4\r\n\r\n\t\t\tcase 0x8b5a:\r\n\t\t\t\treturn setValueM2;\r\n\t\t\t// _MAT2\r\n\r\n\t\t\tcase 0x8b5b:\r\n\t\t\t\treturn setValueM3;\r\n\t\t\t// _MAT3\r\n\r\n\t\t\tcase 0x8b5c:\r\n\t\t\t\treturn setValueM4;\r\n\t\t\t// _MAT4\r\n\r\n\t\t\tcase 0x1404:\r\n\t\t\tcase 0x8b56:\r\n\t\t\t\treturn setValueV1i;\r\n\t\t\t// INT, BOOL\r\n\r\n\t\t\tcase 0x8b53:\r\n\t\t\tcase 0x8b57:\r\n\t\t\t\treturn setValueV2i;\r\n\t\t\t// _VEC2\r\n\r\n\t\t\tcase 0x8b54:\r\n\t\t\tcase 0x8b58:\r\n\t\t\t\treturn setValueV3i;\r\n\t\t\t// _VEC3\r\n\r\n\t\t\tcase 0x8b55:\r\n\t\t\tcase 0x8b59:\r\n\t\t\t\treturn setValueV4i;\r\n\t\t\t// _VEC4\r\n\r\n\t\t\tcase 0x1405:\r\n\t\t\t\treturn setValueV1ui;\r\n\t\t\t// UINT\r\n\r\n\t\t\tcase 0x8dc6:\r\n\t\t\t\treturn setValueV2ui;\r\n\t\t\t// _VEC2\r\n\r\n\t\t\tcase 0x8dc7:\r\n\t\t\t\treturn setValueV3ui;\r\n\t\t\t// _VEC3\r\n\r\n\t\t\tcase 0x8dc8:\r\n\t\t\t\treturn setValueV4ui;\r\n\t\t\t// _VEC4\r\n\r\n\t\t\tcase 0x8b5e: // SAMPLER_2D\r\n\r\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\r\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\r\n\r\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\r\n\t\t\tcase 0x8b62:\r\n\t\t\t\t// SAMPLER_2D_SHADOW\r\n\t\t\t\treturn setValueT1;\r\n\r\n\t\t\tcase 0x8b5f: // SAMPLER_3D\r\n\r\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\r\n\r\n\t\t\tcase 0x8dd3:\r\n\t\t\t\t// UNSIGNED_INT_SAMPLER_3D\r\n\t\t\t\treturn setValueT3D1;\r\n\r\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x8dc5:\r\n\t\t\t\t// SAMPLER_CUBE_SHADOW\r\n\t\t\t\treturn setValueT6;\r\n\r\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\r\n\r\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\r\n\r\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n\r\n\t\t\tcase 0x8dc4:\r\n\t\t\t\t// SAMPLER_2D_ARRAY_SHADOW\r\n\t\t\t\treturn setValueT2DArray1;\r\n\t\t}\r\n\t} // Array of scalars\r\n\r\n\r\n\tfunction setValueV1fArray(gl, v) {\r\n\t\tgl.uniform1fv(this.addr, v);\r\n\t} // Array of vectors (from flat array or array of THREE.VectorN)\r\n\r\n\r\n\tfunction setValueV2fArray(gl, v) {\r\n\t\tconst data = flatten(v, this.size, 2);\r\n\t\tgl.uniform2fv(this.addr, data);\r\n\t}\r\n\r\n\tfunction setValueV3fArray(gl, v) {\r\n\t\tconst data = flatten(v, this.size, 3);\r\n\t\tgl.uniform3fv(this.addr, data);\r\n\t}\r\n\r\n\tfunction setValueV4fArray(gl, v) {\r\n\t\tconst data = flatten(v, this.size, 4);\r\n\t\tgl.uniform4fv(this.addr, data);\r\n\t} // Array of matrices (from flat array or array of THREE.MatrixN)\r\n\r\n\r\n\tfunction setValueM2Array(gl, v) {\r\n\t\tconst data = flatten(v, this.size, 4);\r\n\t\tgl.uniformMatrix2fv(this.addr, false, data);\r\n\t}\r\n\r\n\tfunction setValueM3Array(gl, v) {\r\n\t\tconst data = flatten(v, this.size, 9);\r\n\t\tgl.uniformMatrix3fv(this.addr, false, data);\r\n\t}\r\n\r\n\tfunction setValueM4Array(gl, v) {\r\n\t\tconst data = flatten(v, this.size, 16);\r\n\t\tgl.uniformMatrix4fv(this.addr, false, data);\r\n\t} // Array of integer / boolean\r\n\r\n\r\n\tfunction setValueV1iArray(gl, v) {\r\n\t\tgl.uniform1iv(this.addr, v);\r\n\t} // Array of integer / boolean vectors (from flat array)\r\n\r\n\r\n\tfunction setValueV2iArray(gl, v) {\r\n\t\tgl.uniform2iv(this.addr, v);\r\n\t}\r\n\r\n\tfunction setValueV3iArray(gl, v) {\r\n\t\tgl.uniform3iv(this.addr, v);\r\n\t}\r\n\r\n\tfunction setValueV4iArray(gl, v) {\r\n\t\tgl.uniform4iv(this.addr, v);\r\n\t} // Array of unsigned integer\r\n\r\n\r\n\tfunction setValueV1uiArray(gl, v) {\r\n\t\tgl.uniform1uiv(this.addr, v);\r\n\t} // Array of unsigned integer vectors (from flat array)\r\n\r\n\r\n\tfunction setValueV2uiArray(gl, v) {\r\n\t\tgl.uniform2uiv(this.addr, v);\r\n\t}\r\n\r\n\tfunction setValueV3uiArray(gl, v) {\r\n\t\tgl.uniform3uiv(this.addr, v);\r\n\t}\r\n\r\n\tfunction setValueV4uiArray(gl, v) {\r\n\t\tgl.uniform4uiv(this.addr, v);\r\n\t} // Array of textures (2D / Cube)\r\n\r\n\r\n\tfunction setValueT1Array(gl, v, textures) {\r\n\t\tconst n = v.length;\r\n\t\tconst units = allocTexUnits(textures, n);\r\n\t\tgl.uniform1iv(this.addr, units);\r\n\r\n\t\tfor (let i = 0; i !== n; ++i) {\r\n\t\t\ttextures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setValueT6Array(gl, v, textures) {\r\n\t\tconst n = v.length;\r\n\t\tconst units = allocTexUnits(textures, n);\r\n\t\tgl.uniform1iv(this.addr, units);\r\n\r\n\t\tfor (let i = 0; i !== n; ++i) {\r\n\t\t\ttextures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\r\n\t\t}\r\n\t} // Helper to pick the right setter for a pure (bottom-level) array\r\n\r\n\r\n\tfunction getPureArraySetter(type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 0x1406:\r\n\t\t\t\treturn setValueV1fArray;\r\n\t\t\t// FLOAT\r\n\r\n\t\t\tcase 0x8b50:\r\n\t\t\t\treturn setValueV2fArray;\r\n\t\t\t// _VEC2\r\n\r\n\t\t\tcase 0x8b51:\r\n\t\t\t\treturn setValueV3fArray;\r\n\t\t\t// _VEC3\r\n\r\n\t\t\tcase 0x8b52:\r\n\t\t\t\treturn setValueV4fArray;\r\n\t\t\t// _VEC4\r\n\r\n\t\t\tcase 0x8b5a:\r\n\t\t\t\treturn setValueM2Array;\r\n\t\t\t// _MAT2\r\n\r\n\t\t\tcase 0x8b5b:\r\n\t\t\t\treturn setValueM3Array;\r\n\t\t\t// _MAT3\r\n\r\n\t\t\tcase 0x8b5c:\r\n\t\t\t\treturn setValueM4Array;\r\n\t\t\t// _MAT4\r\n\r\n\t\t\tcase 0x1404:\r\n\t\t\tcase 0x8b56:\r\n\t\t\t\treturn setValueV1iArray;\r\n\t\t\t// INT, BOOL\r\n\r\n\t\t\tcase 0x8b53:\r\n\t\t\tcase 0x8b57:\r\n\t\t\t\treturn setValueV2iArray;\r\n\t\t\t// _VEC2\r\n\r\n\t\t\tcase 0x8b54:\r\n\t\t\tcase 0x8b58:\r\n\t\t\t\treturn setValueV3iArray;\r\n\t\t\t// _VEC3\r\n\r\n\t\t\tcase 0x8b55:\r\n\t\t\tcase 0x8b59:\r\n\t\t\t\treturn setValueV4iArray;\r\n\t\t\t// _VEC4\r\n\r\n\t\t\tcase 0x1405:\r\n\t\t\t\treturn setValueV1uiArray;\r\n\t\t\t// UINT\r\n\r\n\t\t\tcase 0x8dc6:\r\n\t\t\t\treturn setValueV2uiArray;\r\n\t\t\t// _VEC2\r\n\r\n\t\t\tcase 0x8dc7:\r\n\t\t\t\treturn setValueV3uiArray;\r\n\t\t\t// _VEC3\r\n\r\n\t\t\tcase 0x8dc8:\r\n\t\t\t\treturn setValueV4uiArray;\r\n\t\t\t// _VEC4\r\n\r\n\t\t\tcase 0x8b5e: // SAMPLER_2D\r\n\r\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\r\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\r\n\r\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\r\n\t\t\tcase 0x8b62:\r\n\t\t\t\t// SAMPLER_2D_SHADOW\r\n\t\t\t\treturn setValueT1Array;\r\n\r\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x8dc5:\r\n\t\t\t\t// SAMPLER_CUBE_SHADOW\r\n\t\t\t\treturn setValueT6Array;\r\n\t\t}\r\n\t} // --- Uniform Classes ---\r\n\r\n\r\n\tfunction SingleUniform(id, activeInfo, addr) {\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\r\n\t}\r\n\r\n\tfunction PureArrayUniform(id, activeInfo, addr) {\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.size = activeInfo.size;\r\n\t\tthis.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\r\n\t}\r\n\r\n\tPureArrayUniform.prototype.updateCache = function (data) {\r\n\t\tconst cache = this.cache;\r\n\r\n\t\tif (data instanceof Float32Array && cache.length !== data.length) {\r\n\t\t\tthis.cache = new Float32Array(data.length);\r\n\t\t}\r\n\r\n\t\tcopyArray(cache, data);\r\n\t};\r\n\r\n\tfunction StructuredUniform(id) {\r\n\t\tthis.id = id;\r\n\t\tthis.seq = [];\r\n\t\tthis.map = {};\r\n\t}\r\n\r\n\tStructuredUniform.prototype.setValue = function (gl, value, textures) {\r\n\t\tconst seq = this.seq;\r\n\r\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\r\n\t\t\tconst u = seq[i];\r\n\t\t\tu.setValue(gl, value[u.id], textures);\r\n\t\t}\r\n\t}; // --- Top-level ---\r\n\t// Parser - builds up the property tree from the path strings\r\n\r\n\r\n\tconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\r\n\t// \t- the identifier (member name or array index)\r\n\t//\t- followed by an optional right bracket (found when array index)\r\n\t//\t- followed by an optional left bracket or dot (type of subscript)\r\n\t//\r\n\t// Note: These portions can be read in a non-overlapping fashion and\r\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\r\n\t// in the uniform names.\r\n\r\n\tfunction addUniform(container, uniformObject) {\r\n\t\tcontainer.seq.push(uniformObject);\r\n\t\tcontainer.map[uniformObject.id] = uniformObject;\r\n\t}\r\n\r\n\tfunction parseUniform(activeInfo, addr, container) {\r\n\t\tconst path = activeInfo.name,\r\n\t\t\t\t\tpathLength = path.length; // reset RegExp object, because of the early exit of a previous run\r\n\r\n\t\tRePathPart.lastIndex = 0;\r\n\r\n\t\twhile (true) {\r\n\t\t\tconst match = RePathPart.exec(path),\r\n\t\t\t\t\t\tmatchEnd = RePathPart.lastIndex;\r\n\t\t\tlet id = match[1];\r\n\t\t\tconst idIsIndex = match[2] === ']',\r\n\t\t\t\t\t\tsubscript = match[3];\r\n\t\t\tif (idIsIndex) id = id | 0; // convert to integer\r\n\r\n\t\t\tif (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\r\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n\t\t\t\taddUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\t// step into inner node / create it in case it doesn't exist\r\n\t\t\t\tconst map = container.map;\r\n\t\t\t\tlet next = map[id];\r\n\r\n\t\t\t\tif (next === undefined) {\r\n\t\t\t\t\tnext = new StructuredUniform(id);\r\n\t\t\t\t\taddUniform(container, next);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontainer = next;\r\n\t\t\t}\r\n\t\t}\r\n\t} // Root Container\r\n\r\n\r\n\tfunction WebGLUniforms(gl, program) {\r\n\t\tthis.seq = [];\r\n\t\tthis.map = {};\r\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n\t\tfor (let i = 0; i < n; ++i) {\r\n\t\t\tconst info = gl.getActiveUniform(program, i),\r\n\t\t\t\t\t\taddr = gl.getUniformLocation(program, info.name);\r\n\t\t\tparseUniform(info, addr, this);\r\n\t\t}\r\n\t}\r\n\r\n\tWebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\r\n\t\tconst u = this.map[name];\r\n\t\tif (u !== undefined) u.setValue(gl, value, textures);\r\n\t};\r\n\r\n\tWebGLUniforms.prototype.setOptional = function (gl, object, name) {\r\n\t\tconst v = object[name];\r\n\t\tif (v !== undefined) this.setValue(gl, name, v);\r\n\t}; // Static interface\r\n\r\n\r\n\tWebGLUniforms.upload = function (gl, seq, values, textures) {\r\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\r\n\t\t\tconst u = seq[i],\r\n\t\t\t\t\t\tv = values[u.id];\r\n\r\n\t\t\tif (v.needsUpdate !== false) {\r\n\t\t\t\t// note: always updating when .needsUpdate is undefined\r\n\t\t\t\tu.setValue(gl, v.value, textures);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tWebGLUniforms.seqWithValue = function (seq, values) {\r\n\t\tconst r = [];\r\n\r\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\r\n\t\t\tconst u = seq[i];\r\n\t\t\tif (u.id in values) r.push(u);\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\t};\r\n\r\n\tfunction WebGLShader(gl, type, string) {\r\n\t\tconst shader = gl.createShader(type);\r\n\t\tgl.shaderSource(shader, string);\r\n\t\tgl.compileShader(shader);\r\n\t\treturn shader;\r\n\t}\r\n\r\n\tlet programIdCount = 0;\r\n\r\n\tfunction addLineNumbers(string) {\r\n\t\tconst lines = string.split('\\n');\r\n\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tlines[i] = i + 1 + ': ' + lines[i];\r\n\t\t}\r\n\r\n\t\treturn lines.join('\\n');\r\n\t}\r\n\r\n\tfunction getEncodingComponents(encoding) {\r\n\t\tswitch (encoding) {\r\n\t\t\tcase LinearEncoding:\r\n\t\t\t\treturn ['Linear', '( value )'];\r\n\r\n\t\t\tcase sRGBEncoding:\r\n\t\t\t\treturn ['sRGB', '( value )'];\r\n\r\n\t\t\tcase RGBEEncoding:\r\n\t\t\t\treturn ['RGBE', '( value )'];\r\n\r\n\t\t\tcase RGBM7Encoding:\r\n\t\t\t\treturn ['RGBM', '( value, 7.0 )'];\r\n\r\n\t\t\tcase RGBM16Encoding:\r\n\t\t\t\treturn ['RGBM', '( value, 16.0 )'];\r\n\r\n\t\t\tcase RGBDEncoding:\r\n\t\t\t\treturn ['RGBD', '( value, 256.0 )'];\r\n\r\n\t\t\tcase GammaEncoding:\r\n\t\t\t\treturn ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\r\n\r\n\t\t\tcase LogLuvEncoding:\r\n\t\t\t\treturn ['LogLuv', '( value )'];\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\r\n\t\t\t\treturn ['Linear', '( value )'];\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getShaderErrors(gl, shader, type) {\r\n\t\tconst status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n\t\tconst errors = gl.getShaderInfoLog(shader).trim();\r\n\t\tif (status && errors === '') return ''; // --enable-privileged-webgl-extension\r\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + addLineNumbers(gl.getShaderSource(shader));\r\n\t}\r\n\r\n\tfunction getTexelDecodingFunction(functionName, encoding) {\r\n\t\tconst components = getEncodingComponents(encoding);\r\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\r\n\t}\r\n\r\n\tfunction getTexelEncodingFunction(functionName, encoding) {\r\n\t\tconst components = getEncodingComponents(encoding);\r\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\r\n\t}\r\n\r\n\tfunction getToneMappingFunction(functionName, toneMapping) {\r\n\t\tlet toneMappingName;\r\n\r\n\t\tswitch (toneMapping) {\r\n\t\t\tcase LinearToneMapping:\r\n\t\t\t\ttoneMappingName = 'Linear';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ReinhardToneMapping:\r\n\t\t\t\ttoneMappingName = 'Reinhard';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase CineonToneMapping:\r\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ACESFilmicToneMapping:\r\n\t\t\t\ttoneMappingName = 'ACESFilmic';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase CustomToneMapping:\r\n\t\t\t\ttoneMappingName = 'Custom';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\r\n\t\t\t\ttoneMappingName = 'Linear';\r\n\t\t}\r\n\r\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\r\n\t}\r\n\r\n\tfunction generateExtensions(parameters) {\r\n\t\tconst chunks = [parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\r\n\t\treturn chunks.filter(filterEmptyLine).join('\\n');\r\n\t}\r\n\r\n\tfunction generateDefines(defines) {\r\n\t\tconst chunks = [];\r\n\r\n\t\tfor (const name in defines) {\r\n\t\t\tconst value = defines[name];\r\n\t\t\tif (value === false) continue;\r\n\t\t\tchunks.push('#define ' + name + ' ' + value);\r\n\t\t}\r\n\r\n\t\treturn chunks.join('\\n');\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations(gl, program) {\r\n\t\tconst attributes = {};\r\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tconst info = gl.getActiveAttrib(program, i);\r\n\t\t\tconst name = info.name;\r\n\t\t\tlet locationSize = 1;\r\n\t\t\tif (info.type === gl.FLOAT_MAT2) locationSize = 2;\r\n\t\t\tif (info.type === gl.FLOAT_MAT3) locationSize = 3;\r\n\t\t\tif (info.type === gl.FLOAT_MAT4) locationSize = 4; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\r\n\r\n\t\t\tattributes[name] = {\r\n\t\t\t\ttype: info.type,\r\n\t\t\t\tlocation: gl.getAttribLocation(program, name),\r\n\t\t\t\tlocationSize: locationSize\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tfunction filterEmptyLine(string) {\r\n\t\treturn string !== '';\r\n\t}\r\n\r\n\tfunction replaceLightNums(string, parameters) {\r\n\t\treturn string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\r\n\t}\r\n\r\n\tfunction replaceClippingPlaneNums(string, parameters) {\r\n\t\treturn string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\r\n\t} // Resolve Includes\r\n\r\n\r\n\tconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n\r\n\tfunction resolveIncludes(string) {\r\n\t\treturn string.replace(includePattern, includeReplacer);\r\n\t}\r\n\r\n\tfunction includeReplacer(match, include) {\r\n\t\tconst string = ShaderChunk[include];\r\n\r\n\t\tif (string === undefined) {\r\n\t\t\tthrow new Error('Can not resolve #include <' + include + '>');\r\n\t\t}\r\n\r\n\t\treturn resolveIncludes(string);\r\n\t} // Unroll Loops\r\n\r\n\r\n\tconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\n\tconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\r\n\r\n\tfunction unrollLoops(string) {\r\n\t\treturn string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\r\n\t}\r\n\r\n\tfunction deprecatedLoopReplacer(match, start, end, snippet) {\r\n\t\tconsole.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\r\n\t\treturn loopReplacer(match, start, end, snippet);\r\n\t}\r\n\r\n\tfunction loopReplacer(match, start, end, snippet) {\r\n\t\tlet string = '';\r\n\r\n\t\tfor (let i = parseInt(start); i < parseInt(end); i++) {\r\n\t\t\tstring += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\r\n\t\t}\r\n\r\n\t\treturn string;\r\n\t} //\r\n\r\n\r\n\tfunction generatePrecision(parameters) {\r\n\t\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\r\n\r\n\t\tif (parameters.precision === 'highp') {\r\n\t\t\tprecisionstring += '\\n#define HIGH_PRECISION';\r\n\t\t} else if (parameters.precision === 'mediump') {\r\n\t\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\r\n\t\t} else if (parameters.precision === 'lowp') {\r\n\t\t\tprecisionstring += '\\n#define LOW_PRECISION';\r\n\t\t}\r\n\r\n\t\treturn precisionstring;\r\n\t}\r\n\r\n\tfunction generateShadowMapTypeDefine(parameters) {\r\n\t\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif (parameters.shadowMapType === PCFShadowMap) {\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\t\t} else if (parameters.shadowMapType === PCFSoftShadowMap) {\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\t\t} else if (parameters.shadowMapType === VSMShadowMap) {\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\r\n\t\t}\r\n\r\n\t\treturn shadowMapTypeDefine;\r\n\t}\r\n\r\n\tfunction generateEnvMapTypeDefine(parameters) {\r\n\t\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\r\n\t\tif (parameters.envMap) {\r\n\t\t\tswitch (parameters.envMapMode) {\r\n\t\t\t\tcase CubeReflectionMapping:\r\n\t\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase CubeUVReflectionMapping:\r\n\t\t\t\tcase CubeUVRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn envMapTypeDefine;\r\n\t}\r\n\r\n\tfunction generateEnvMapModeDefine(parameters) {\r\n\t\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\r\n\t\tif (parameters.envMap) {\r\n\t\t\tswitch (parameters.envMapMode) {\r\n\t\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\tcase CubeUVRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn envMapModeDefine;\r\n\t}\r\n\r\n\tfunction generateEnvMapBlendingDefine(parameters) {\r\n\t\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\r\n\r\n\t\tif (parameters.envMap) {\r\n\t\t\tswitch (parameters.combine) {\r\n\t\t\t\tcase MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn envMapBlendingDefine;\r\n\t}\r\n\r\n\tfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\r\n\t\t// TODO Send this event to Three.js DevTools\r\n\t\t// console.log( 'WebGLProgram', cacheKey );\r\n\t\tconst gl = renderer.getContext();\r\n\t\tconst defines = parameters.defines;\r\n\t\tlet vertexShader = parameters.vertexShader;\r\n\t\tlet fragmentShader = parameters.fragmentShader;\r\n\t\tconst shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\r\n\t\tconst envMapTypeDefine = generateEnvMapTypeDefine(parameters);\r\n\t\tconst envMapModeDefine = generateEnvMapModeDefine(parameters);\r\n\t\tconst envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\r\n\t\tconst gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\r\n\t\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\r\n\t\tconst customDefines = generateDefines(defines);\r\n\t\tconst program = gl.createProgram();\r\n\t\tlet prefixVertex, prefixFragment;\r\n\t\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\r\n\r\n\t\tif (parameters.isRawShaderMaterial) {\r\n\t\t\tprefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\r\n\r\n\t\t\tif (prefixVertex.length > 0) {\r\n\t\t\t\tprefixVertex += '\\n';\r\n\t\t\t}\r\n\r\n\t\t\tprefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\r\n\r\n\t\t\tif (prefixFragment.length > 0) {\r\n\t\t\t\tprefixFragment += '\\n';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tprefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularTintMap ? '#define USE_SPECULARTINTMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.morphTargets && parameters.isWebGL2 ? '#define MORPHTARGETS_TEXTURE' : '', parameters.morphTargets && parameters.isWebGL2 ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#if defined( USE_COLOR_ALPHA )', '\tattribute vec4 color;', '#elif defined( USE_COLOR )', '\tattribute vec3 color;', '#endif', '#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\r\n\t\t\tprefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoat ? '#define USE_CLEARCOAT' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularTintMap ? '#define USE_SPECULARTINTMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.alphaTest ? '#define USE_ALPHATEST' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\tparameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.format === RGBFormat ? '#define OPAQUE' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\tparameters.map ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcap ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMap ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMap ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.specularTintMap ? getTexelDecodingFunction('specularTintMapTexelToLinear', parameters.specularTintMapEncoding) : '', parameters.lightMap ? getTexelDecodingFunction('lightMapTexelToLinear', parameters.lightMapEncoding) : '', getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\r\n\t\t}\r\n\r\n\t\tvertexShader = resolveIncludes(vertexShader);\r\n\t\tvertexShader = replaceLightNums(vertexShader, parameters);\r\n\t\tvertexShader = replaceClippingPlaneNums(vertexShader, parameters);\r\n\t\tfragmentShader = resolveIncludes(fragmentShader);\r\n\t\tfragmentShader = replaceLightNums(fragmentShader, parameters);\r\n\t\tfragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\r\n\t\tvertexShader = unrollLoops(vertexShader);\r\n\t\tfragmentShader = unrollLoops(fragmentShader);\r\n\r\n\t\tif (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\r\n\t\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\r\n\t\t\tversionString = '#version 300 es\\n';\r\n\t\t\tprefixVertex = ['precision mediump sampler2DArray;', '#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\r\n\t\t\tprefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\r\n\t\t}\r\n\r\n\t\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\r\n\t\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\r\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n\t\tconst glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\r\n\t\tconst glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\r\n\t\tgl.attachShader(program, glVertexShader);\r\n\t\tgl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\r\n\r\n\t\tif (parameters.index0AttributeName !== undefined) {\r\n\t\t\tgl.bindAttribLocation(program, 0, parameters.index0AttributeName);\r\n\t\t} else if (parameters.morphTargets === true) {\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation(program, 0, 'position');\r\n\t\t}\r\n\r\n\t\tgl.linkProgram(program); // check for link errors\r\n\r\n\t\tif (renderer.debug.checkShaderErrors) {\r\n\t\t\tconst programLog = gl.getProgramInfoLog(program).trim();\r\n\t\t\tconst vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\r\n\t\t\tconst fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\r\n\t\t\tlet runnable = true;\r\n\t\t\tlet haveDiagnostics = true;\r\n\r\n\t\t\tif (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\r\n\t\t\t\trunnable = false;\r\n\t\t\t\tconst vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\r\n\t\t\t\tconst fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\r\n\t\t\t\tconsole.error('THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' + 'VALIDATE_STATUS ' + gl.getProgramParameter(program, gl.VALIDATE_STATUS) + '\\n\\n' + 'Program Info Log: ' + programLog + '\\n' + vertexErrors + '\\n' + fragmentErrors);\r\n\t\t\t} else if (programLog !== '') {\r\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Program Info Log:', programLog);\r\n\t\t\t} else if (vertexLog === '' || fragmentLog === '') {\r\n\t\t\t\thaveDiagnostics = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (haveDiagnostics) {\r\n\t\t\t\tthis.diagnostics = {\r\n\t\t\t\t\trunnable: runnable,\r\n\t\t\t\t\tprogramLog: programLog,\r\n\t\t\t\t\tvertexShader: {\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfragmentShader: {\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t} // Clean up\r\n\t\t// Crashes in iOS9 and iOS10. #18402\r\n\t\t// gl.detachShader( program, glVertexShader );\r\n\t\t// gl.detachShader( program, glFragmentShader );\r\n\r\n\r\n\t\tgl.deleteShader(glVertexShader);\r\n\t\tgl.deleteShader(glFragmentShader); // set up caching for uniform locations\r\n\r\n\t\tlet cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function () {\r\n\t\t\tif (cachedUniforms === undefined) {\r\n\t\t\t\tcachedUniforms = new WebGLUniforms(gl, program);\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\t\t}; // set up caching for attribute locations\r\n\r\n\r\n\t\tlet cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function () {\r\n\t\t\tif (cachedAttributes === undefined) {\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations(gl, program);\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\t\t}; // free resource\r\n\r\n\r\n\t\tthis.destroy = function () {\r\n\t\t\tbindingStates.releaseStatesOfProgram(this);\r\n\t\t\tgl.deleteProgram(program);\r\n\t\t\tthis.program = undefined;\r\n\t\t}; //\r\n\r\n\r\n\t\tthis.name = parameters.shaderName;\r\n\t\tthis.id = programIdCount++;\r\n\t\tthis.cacheKey = cacheKey;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tfunction WebGLPrograms(renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping) {\r\n\t\tconst programs = [];\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\t\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\r\n\t\tconst floatVertexTextures = capabilities.floatVertexTextures;\r\n\t\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\tconst vertexTextures = capabilities.vertexTextures;\r\n\t\tlet precision = capabilities.precision;\r\n\t\tconst shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tMeshToonMaterial: 'toon',\r\n\t\t\tMeshStandardMaterial: 'physical',\r\n\t\t\tMeshPhysicalMaterial: 'physical',\r\n\t\t\tMeshMatcapMaterial: 'matcap',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points',\r\n\t\t\tShadowMaterial: 'shadow',\r\n\t\t\tSpriteMaterial: 'sprite'\r\n\t\t};\r\n\t\tconst parameterNames = ['precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV', 'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoat', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap', 'specularIntensityMap', 'specularTintMap', 'specularTintMapEncoding', 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'alphaTest', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'morphTargetsCount', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering', 'format', 'sheen', 'transmission', 'transmissionMap', 'thicknessMap'];\r\n\r\n\t\tfunction getMaxBones(object) {\r\n\t\t\tconst skeleton = object.skeleton;\r\n\t\t\tconst bones = skeleton.bones;\r\n\r\n\t\t\tif (floatVertexTextures) {\r\n\t\t\t\treturn 1024;\r\n\t\t\t} else {\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//\t- leave some extra space for other uniforms\r\n\t\t\t\t//\t- limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//\t\t(up to 54 should be safe)\r\n\t\t\t\tconst nVertexUniforms = maxVertexUniforms;\r\n\t\t\t\tconst nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\r\n\t\t\t\tconst maxBones = Math.min(nVertexMatrices, bones.length);\r\n\r\n\t\t\t\tif (maxBones < bones.length) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn maxBones;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getTextureEncodingFromMap(map) {\r\n\t\t\tlet encoding;\r\n\r\n\t\t\tif (map && map.isTexture) {\r\n\t\t\t\tencoding = map.encoding;\r\n\t\t\t} else if (map && map.isWebGLRenderTarget) {\r\n\t\t\t\tconsole.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');\r\n\t\t\t\tencoding = map.texture.encoding;\r\n\t\t\t} else {\r\n\t\t\t\tencoding = LinearEncoding;\r\n\t\t\t}\r\n\r\n\t\t\tif (isWebGL2 && map && map.isTexture && map.format === RGBAFormat && map.type === UnsignedByteType && map.encoding === sRGBEncoding) {\r\n\t\t\t\tencoding = LinearEncoding; // disable inline decode for sRGB textures in WebGL 2\r\n\t\t\t}\r\n\r\n\t\t\treturn encoding;\r\n\t\t}\r\n\r\n\t\tfunction getParameters(material, lights, shadows, scene, object) {\r\n\t\t\tconst fog = scene.fog;\r\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\t\t\tconst envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\r\n\t\t\tconst shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\r\n\t\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\r\n\r\n\t\t\tif (material.precision !== null) {\r\n\t\t\t\tprecision = capabilities.getMaxPrecision(material.precision);\r\n\r\n\t\t\t\tif (precision !== material.precision) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet vertexShader, fragmentShader;\r\n\r\n\t\t\tif (shaderID) {\r\n\t\t\t\tconst shader = ShaderLib[shaderID];\r\n\t\t\t\tvertexShader = shader.vertexShader;\r\n\t\t\t\tfragmentShader = shader.fragmentShader;\r\n\t\t\t} else {\r\n\t\t\t\tvertexShader = material.vertexShader;\r\n\t\t\t\tfragmentShader = material.fragmentShader;\r\n\t\t\t}\r\n\r\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\t\tconst useAlphaTest = material.alphaTest > 0;\r\n\t\t\tconst useClearcoat = material.clearcoat > 0;\r\n\t\t\tconst parameters = {\r\n\t\t\t\tisWebGL2: isWebGL2,\r\n\t\t\t\tshaderID: shaderID,\r\n\t\t\t\tshaderName: material.type,\r\n\t\t\t\tvertexShader: vertexShader,\r\n\t\t\t\tfragmentShader: fragmentShader,\r\n\t\t\t\tdefines: material.defines,\r\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\r\n\t\t\t\tglslVersion: material.glslVersion,\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tinstancing: object.isInstancedMesh === true,\r\n\t\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\r\n\t\t\t\tsupportsVertexTextures: vertexTextures,\r\n\t\t\t\toutputEncoding: currentRenderTarget !== null ? getTextureEncodingFromMap(currentRenderTarget.texture) : renderer.outputEncoding,\r\n\t\t\t\tmap: !!material.map,\r\n\t\t\t\tmapEncoding: getTextureEncodingFromMap(material.map),\r\n\t\t\t\tmatcap: !!material.matcap,\r\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap(material.matcap),\r\n\t\t\t\tenvMap: !!envMap,\r\n\t\t\t\tenvMapMode: envMap && envMap.mapping,\r\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap(envMap),\r\n\t\t\t\tenvMapCubeUV: !!envMap && (envMap.mapping === CubeUVReflectionMapping || envMap.mapping === CubeUVRefractionMapping),\r\n\t\t\t\tlightMap: !!material.lightMap,\r\n\t\t\t\tlightMapEncoding: getTextureEncodingFromMap(material.lightMap),\r\n\t\t\t\taoMap: !!material.aoMap,\r\n\t\t\t\temissiveMap: !!material.emissiveMap,\r\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap),\r\n\t\t\t\tbumpMap: !!material.bumpMap,\r\n\t\t\t\tnormalMap: !!material.normalMap,\r\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\r\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\r\n\t\t\t\tclearcoat: useClearcoat,\r\n\t\t\t\tclearcoatMap: useClearcoat && !!material.clearcoatMap,\r\n\t\t\t\tclearcoatRoughnessMap: useClearcoat && !!material.clearcoatRoughnessMap,\r\n\t\t\t\tclearcoatNormalMap: useClearcoat && !!material.clearcoatNormalMap,\r\n\t\t\t\tdisplacementMap: !!material.displacementMap,\r\n\t\t\t\troughnessMap: !!material.roughnessMap,\r\n\t\t\t\tmetalnessMap: !!material.metalnessMap,\r\n\t\t\t\tspecularMap: !!material.specularMap,\r\n\t\t\t\tspecularIntensityMap: !!material.specularIntensityMap,\r\n\t\t\t\tspecularTintMap: !!material.specularTintMap,\r\n\t\t\t\tspecularTintMapEncoding: getTextureEncodingFromMap(material.specularTintMap),\r\n\t\t\t\talphaMap: !!material.alphaMap,\r\n\t\t\t\talphaTest: useAlphaTest,\r\n\t\t\t\tgradientMap: !!material.gradientMap,\r\n\t\t\t\tsheen: material.sheen > 0,\r\n\t\t\t\ttransmission: material.transmission > 0,\r\n\t\t\t\ttransmissionMap: !!material.transmissionMap,\r\n\t\t\t\tthicknessMap: !!material.thicknessMap,\r\n\t\t\t\tcombine: material.combine,\r\n\t\t\t\tvertexTangents: !!material.normalMap && !!object.geometry && !!object.geometry.attributes.tangent,\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\t\t\t\tvertexAlphas: material.vertexColors === true && !!object.geometry && !!object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\r\n\t\t\t\tvertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.displacementMap || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularTintMap,\r\n\t\t\t\tuvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || material.transmission > 0 || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularTintMap) && !!material.displacementMap,\r\n\t\t\t\tfog: !!fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp2: fog && fog.isFogExp2,\r\n\t\t\t\tflatShading: !!material.flatShading,\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\r\n\t\t\t\tskinning: object.isSkinnedMesh === true && maxBones > 0,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: floatVertexTextures,\r\n\t\t\t\tmorphTargets: !!object.geometry && !!object.geometry.morphAttributes.position,\r\n\t\t\t\tmorphNormals: !!object.geometry && !!object.geometry.morphAttributes.normal,\r\n\t\t\t\tmorphTargetsCount: !!object.geometry && !!object.geometry.morphAttributes.position ? object.geometry.morphAttributes.position.length : 0,\r\n\t\t\t\tnumDirLights: lights.directional.length,\r\n\t\t\t\tnumPointLights: lights.point.length,\r\n\t\t\t\tnumSpotLights: lights.spot.length,\r\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\r\n\t\t\t\tnumHemiLights: lights.hemi.length,\r\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\r\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\r\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\r\n\t\t\t\tnumClippingPlanes: clipping.numPlanes,\r\n\t\t\t\tnumClipIntersection: clipping.numIntersection,\r\n\t\t\t\tformat: material.format,\r\n\t\t\t\tdithering: material.dithering,\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\r\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\r\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\r\n\t\t\t\tdoubleSided: material.side === DoubleSide,\r\n\t\t\t\tflipSided: material.side === BackSide,\r\n\t\t\t\tdepthPacking: material.depthPacking !== undefined ? material.depthPacking : false,\r\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\r\n\t\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\r\n\t\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\r\n\t\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\r\n\t\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\r\n\t\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\r\n\t\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\r\n\t\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\r\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\r\n\t\t\t};\r\n\t\t\treturn parameters;\r\n\t\t}\r\n\r\n\t\tfunction getProgramCacheKey(parameters) {\r\n\t\t\tconst array = [];\r\n\r\n\t\t\tif (parameters.shaderID) {\r\n\t\t\t\tarray.push(parameters.shaderID);\r\n\t\t\t} else {\r\n\t\t\t\tarray.push(parameters.fragmentShader);\r\n\t\t\t\tarray.push(parameters.vertexShader);\r\n\t\t\t}\r\n\r\n\t\t\tif (parameters.defines !== undefined) {\r\n\t\t\t\tfor (const name in parameters.defines) {\r\n\t\t\t\t\tarray.push(name);\r\n\t\t\t\t\tarray.push(parameters.defines[name]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (parameters.isRawShaderMaterial === false) {\r\n\t\t\t\tfor (let i = 0; i < parameterNames.length; i++) {\r\n\t\t\t\t\tarray.push(parameters[parameterNames[i]]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray.push(renderer.outputEncoding);\r\n\t\t\t\tarray.push(renderer.gammaFactor);\r\n\t\t\t}\r\n\r\n\t\t\tarray.push(parameters.customProgramCacheKey);\r\n\t\t\treturn array.join();\r\n\t\t}\r\n\r\n\t\tfunction getUniforms(material) {\r\n\t\t\tconst shaderID = shaderIDs[material.type];\r\n\t\t\tlet uniforms;\r\n\r\n\t\t\tif (shaderID) {\r\n\t\t\t\tconst shader = ShaderLib[shaderID];\r\n\t\t\t\tuniforms = UniformsUtils.clone(shader.uniforms);\r\n\t\t\t} else {\r\n\t\t\t\tuniforms = material.uniforms;\r\n\t\t\t}\r\n\r\n\t\t\treturn uniforms;\r\n\t\t}\r\n\r\n\t\tfunction acquireProgram(parameters, cacheKey) {\r\n\t\t\tlet program; // Check if code has been already compiled\r\n\r\n\t\t\tfor (let p = 0, pl = programs.length; p < pl; p++) {\r\n\t\t\t\tconst preexistingProgram = programs[p];\r\n\r\n\t\t\t\tif (preexistingProgram.cacheKey === cacheKey) {\r\n\t\t\t\t\tprogram = preexistingProgram;\r\n\t\t\t\t\t++program.usedTimes;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (program === undefined) {\r\n\t\t\t\tprogram = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\r\n\t\t\t\tprograms.push(program);\r\n\t\t\t}\r\n\r\n\t\t\treturn program;\r\n\t\t}\r\n\r\n\t\tfunction releaseProgram(program) {\r\n\t\t\tif (--program.usedTimes === 0) {\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tconst i = programs.indexOf(program);\r\n\t\t\t\tprograms[i] = programs[programs.length - 1];\r\n\t\t\t\tprograms.pop(); // Free WebGL resources\r\n\r\n\t\t\t\tprogram.destroy();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tgetParameters: getParameters,\r\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\r\n\t\t\tgetUniforms: getUniforms,\r\n\t\t\tacquireProgram: acquireProgram,\r\n\t\t\treleaseProgram: releaseProgram,\r\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\t\tprograms: programs\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLProperties() {\r\n\t\tlet properties = new WeakMap();\r\n\r\n\t\tfunction get(object) {\r\n\t\t\tlet map = properties.get(object);\r\n\r\n\t\t\tif (map === undefined) {\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties.set(object, map);\r\n\t\t\t}\r\n\r\n\t\t\treturn map;\r\n\t\t}\r\n\r\n\t\tfunction remove(object) {\r\n\t\t\tproperties.delete(object);\r\n\t\t}\r\n\r\n\t\tfunction update(object, key, value) {\r\n\t\t\tproperties.get(object)[key] = value;\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\tproperties = new WeakMap();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tremove: remove,\r\n\t\t\tupdate: update,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\t}\r\n\r\n\tfunction painterSortStable(a, b) {\r\n\t\tif (a.groupOrder !== b.groupOrder) {\r\n\t\t\treturn a.groupOrder - b.groupOrder;\r\n\t\t} else if (a.renderOrder !== b.renderOrder) {\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\t\t} else if (a.program !== b.program) {\r\n\t\t\treturn a.program.id - b.program.id;\r\n\t\t} else if (a.material.id !== b.material.id) {\r\n\t\t\treturn a.material.id - b.material.id;\r\n\t\t} else if (a.z !== b.z) {\r\n\t\t\treturn a.z - b.z;\r\n\t\t} else {\r\n\t\t\treturn a.id - b.id;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction reversePainterSortStable(a, b) {\r\n\t\tif (a.groupOrder !== b.groupOrder) {\r\n\t\t\treturn a.groupOrder - b.groupOrder;\r\n\t\t} else if (a.renderOrder !== b.renderOrder) {\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\t\t} else if (a.z !== b.z) {\r\n\t\t\treturn b.z - a.z;\r\n\t\t} else {\r\n\t\t\treturn a.id - b.id;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction WebGLRenderList(properties) {\r\n\t\tconst renderItems = [];\r\n\t\tlet renderItemsIndex = 0;\r\n\t\tconst opaque = [];\r\n\t\tconst transmissive = [];\r\n\t\tconst transparent = [];\r\n\t\tconst defaultProgram = {\r\n\t\t\tid: -1\r\n\t\t};\r\n\r\n\t\tfunction init() {\r\n\t\t\trenderItemsIndex = 0;\r\n\t\t\topaque.length = 0;\r\n\t\t\ttransmissive.length = 0;\r\n\t\t\ttransparent.length = 0;\r\n\t\t}\r\n\r\n\t\tfunction getNextRenderItem(object, geometry, material, groupOrder, z, group) {\r\n\t\t\tlet renderItem = renderItems[renderItemsIndex];\r\n\t\t\tconst materialProperties = properties.get(material);\r\n\r\n\t\t\tif (renderItem === undefined) {\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tprogram: materialProperties.program || defaultProgram,\r\n\t\t\t\t\tgroupOrder: groupOrder,\r\n\t\t\t\t\trenderOrder: object.renderOrder,\r\n\t\t\t\t\tz: z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\t\t\t\trenderItems[renderItemsIndex] = renderItem;\r\n\t\t\t} else {\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.program = materialProperties.program || defaultProgram;\r\n\t\t\t\trenderItem.groupOrder = groupOrder;\r\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\r\n\t\t\t\trenderItem.z = z;\r\n\t\t\t\trenderItem.group = group;\r\n\t\t\t}\r\n\r\n\t\t\trenderItemsIndex++;\r\n\t\t\treturn renderItem;\r\n\t\t}\r\n\r\n\t\tfunction push(object, geometry, material, groupOrder, z, group) {\r\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\r\n\r\n\t\t\tif (material.transmission > 0.0) {\r\n\t\t\t\ttransmissive.push(renderItem);\r\n\t\t\t} else if (material.transparent === true) {\r\n\t\t\t\ttransparent.push(renderItem);\r\n\t\t\t} else {\r\n\t\t\t\topaque.push(renderItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction unshift(object, geometry, material, groupOrder, z, group) {\r\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\r\n\r\n\t\t\tif (material.transmission > 0.0) {\r\n\t\t\t\ttransmissive.unshift(renderItem);\r\n\t\t\t} else if (material.transparent === true) {\r\n\t\t\t\ttransparent.unshift(renderItem);\r\n\t\t\t} else {\r\n\t\t\t\topaque.unshift(renderItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction sort(customOpaqueSort, customTransparentSort) {\r\n\t\t\tif (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\r\n\t\t\tif (transmissive.length > 1) transmissive.sort(customTransparentSort || reversePainterSortStable);\r\n\t\t\tif (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);\r\n\t\t}\r\n\r\n\t\tfunction finish() {\r\n\t\t\t// Clear references from inactive renderItems in the list\r\n\t\t\tfor (let i = renderItemsIndex, il = renderItems.length; i < il; i++) {\r\n\t\t\t\tconst renderItem = renderItems[i];\r\n\t\t\t\tif (renderItem.id === null) break;\r\n\t\t\t\trenderItem.id = null;\r\n\t\t\t\trenderItem.object = null;\r\n\t\t\t\trenderItem.geometry = null;\r\n\t\t\t\trenderItem.material = null;\r\n\t\t\t\trenderItem.program = null;\r\n\t\t\t\trenderItem.group = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\topaque: opaque,\r\n\t\t\ttransmissive: transmissive,\r\n\t\t\ttransparent: transparent,\r\n\t\t\tinit: init,\r\n\t\t\tpush: push,\r\n\t\t\tunshift: unshift,\r\n\t\t\tfinish: finish,\r\n\t\t\tsort: sort\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLRenderLists(properties) {\r\n\t\tlet lists = new WeakMap();\r\n\r\n\t\tfunction get(scene, renderCallDepth) {\r\n\t\t\tlet list;\r\n\r\n\t\t\tif (lists.has(scene) === false) {\r\n\t\t\t\tlist = new WebGLRenderList(properties);\r\n\t\t\t\tlists.set(scene, [list]);\r\n\t\t\t} else {\r\n\t\t\t\tif (renderCallDepth >= lists.get(scene).length) {\r\n\t\t\t\t\tlist = new WebGLRenderList(properties);\r\n\t\t\t\t\tlists.get(scene).push(list);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlist = lists.get(scene)[renderCallDepth];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\tlists = new WeakMap();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\t}\r\n\r\n\tfunction UniformsCache() {\r\n\t\tconst lights = {};\r\n\t\treturn {\r\n\t\t\tget: function (light) {\r\n\t\t\t\tif (lights[light.id] !== undefined) {\r\n\t\t\t\t\treturn lights[light.id];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet uniforms;\r\n\r\n\t\t\t\tswitch (light.type) {\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\t\tconeCos: 0,\r\n\t\t\t\t\t\t\tpenumbraCos: 0,\r\n\t\t\t\t\t\t\tdecay: 0\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\t\tdecay: 0\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tskyColor: new Color(),\r\n\t\t\t\t\t\t\tgroundColor: new Color()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RectAreaLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\r\n\t\t\t\t\t\t\thalfHeight: new Vector3()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlights[light.id] = uniforms;\r\n\t\t\t\treturn uniforms;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tfunction ShadowUniformsCache() {\r\n\t\tconst lights = {};\r\n\t\treturn {\r\n\t\t\tget: function (light) {\r\n\t\t\t\tif (lights[light.id] !== undefined) {\r\n\t\t\t\t\treturn lights[light.id];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet uniforms;\r\n\r\n\t\t\t\tswitch (light.type) {\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowNormalBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowNormalBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowNormalBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\r\n\t\t\t\t\t\t\tshadowCameraNear: 1,\r\n\t\t\t\t\t\t\tshadowCameraFar: 1000\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlights[light.id] = uniforms;\r\n\t\t\t\treturn uniforms;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tlet nextVersion = 0;\r\n\r\n\tfunction shadowCastingLightsFirst(lightA, lightB) {\r\n\t\treturn (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\r\n\t}\r\n\r\n\tfunction WebGLLights(extensions, capabilities) {\r\n\t\tconst cache = new UniformsCache();\r\n\t\tconst shadowCache = ShadowUniformsCache();\r\n\t\tconst state = {\r\n\t\t\tversion: 0,\r\n\t\t\thash: {\r\n\t\t\t\tdirectionalLength: -1,\r\n\t\t\t\tpointLength: -1,\r\n\t\t\t\tspotLength: -1,\r\n\t\t\t\trectAreaLength: -1,\r\n\t\t\t\themiLength: -1,\r\n\t\t\t\tnumDirectionalShadows: -1,\r\n\t\t\t\tnumPointShadows: -1,\r\n\t\t\t\tnumSpotShadows: -1\r\n\t\t\t},\r\n\t\t\tambient: [0, 0, 0],\r\n\t\t\tprobe: [],\r\n\t\t\tdirectional: [],\r\n\t\t\tdirectionalShadow: [],\r\n\t\t\tdirectionalShadowMap: [],\r\n\t\t\tdirectionalShadowMatrix: [],\r\n\t\t\tspot: [],\r\n\t\t\tspotShadow: [],\r\n\t\t\tspotShadowMap: [],\r\n\t\t\tspotShadowMatrix: [],\r\n\t\t\trectArea: [],\r\n\t\t\trectAreaLTC1: null,\r\n\t\t\trectAreaLTC2: null,\r\n\t\t\tpoint: [],\r\n\t\t\tpointShadow: [],\r\n\t\t\tpointShadowMap: [],\r\n\t\t\tpointShadowMatrix: [],\r\n\t\t\themi: []\r\n\t\t};\r\n\r\n\t\tfor (let i = 0; i < 9; i++) state.probe.push(new Vector3());\r\n\r\n\t\tconst vector3 = new Vector3();\r\n\t\tconst matrix4 = new Matrix4();\r\n\t\tconst matrix42 = new Matrix4();\r\n\r\n\t\tfunction setup(lights, physicallyCorrectLights) {\r\n\t\t\tlet r = 0,\r\n\t\t\t\t\tg = 0,\r\n\t\t\t\t\tb = 0;\r\n\r\n\t\t\tfor (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);\r\n\r\n\t\t\tlet directionalLength = 0;\r\n\t\t\tlet pointLength = 0;\r\n\t\t\tlet spotLength = 0;\r\n\t\t\tlet rectAreaLength = 0;\r\n\t\t\tlet hemiLength = 0;\r\n\t\t\tlet numDirectionalShadows = 0;\r\n\t\t\tlet numPointShadows = 0;\r\n\t\t\tlet numSpotShadows = 0;\r\n\t\t\tlights.sort(shadowCastingLightsFirst); // artist-friendly light intensity scaling factor\r\n\r\n\t\t\tconst scaleFactor = physicallyCorrectLights !== true ? Math.PI : 1;\r\n\r\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\r\n\t\t\t\tconst light = lights[i];\r\n\t\t\t\tconst color = light.color;\r\n\t\t\t\tconst intensity = light.intensity;\r\n\t\t\t\tconst distance = light.distance;\r\n\t\t\t\tconst shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\r\n\r\n\t\t\t\tif (light.isAmbientLight) {\r\n\t\t\t\t\tr += color.r * intensity * scaleFactor;\r\n\t\t\t\t\tg += color.g * intensity * scaleFactor;\r\n\t\t\t\t\tb += color.b * intensity * scaleFactor;\r\n\t\t\t\t} else if (light.isLightProbe) {\r\n\t\t\t\t\tfor (let j = 0; j < 9; j++) {\r\n\t\t\t\t\t\tstate.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (light.isDirectionalLight) {\r\n\t\t\t\t\tconst uniforms = cache.get(light);\r\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\r\n\r\n\t\t\t\t\tif (light.castShadow) {\r\n\t\t\t\t\t\tconst shadow = light.shadow;\r\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\r\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\r\n\t\t\t\t\t\tstate.directionalShadow[directionalLength] = shadowUniforms;\r\n\t\t\t\t\t\tstate.directionalShadowMap[directionalLength] = shadowMap;\r\n\t\t\t\t\t\tstate.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\r\n\t\t\t\t\t\tnumDirectionalShadows++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.directional[directionalLength] = uniforms;\r\n\t\t\t\t\tdirectionalLength++;\r\n\t\t\t\t} else if (light.isSpotLight) {\r\n\t\t\t\t\tconst uniforms = cache.get(light);\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity * scaleFactor);\r\n\t\t\t\t\tuniforms.distance = distance;\r\n\t\t\t\t\tuniforms.coneCos = Math.cos(light.angle);\r\n\t\t\t\t\tuniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\r\n\t\t\t\t\tuniforms.decay = light.decay;\r\n\r\n\t\t\t\t\tif (light.castShadow) {\r\n\t\t\t\t\t\tconst shadow = light.shadow;\r\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\r\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\r\n\t\t\t\t\t\tstate.spotShadow[spotLength] = shadowUniforms;\r\n\t\t\t\t\t\tstate.spotShadowMap[spotLength] = shadowMap;\r\n\t\t\t\t\t\tstate.spotShadowMatrix[spotLength] = light.shadow.matrix;\r\n\t\t\t\t\t\tnumSpotShadows++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.spot[spotLength] = uniforms;\r\n\t\t\t\t\tspotLength++;\r\n\t\t\t\t} else if (light.isRectAreaLight) {\r\n\t\t\t\t\tconst uniforms = cache.get(light); // (a) intensity is the total visible light emitted\r\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\r\n\t\t\t\t\t// (b) intensity is the brightness of the light\r\n\r\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity);\r\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\r\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\r\n\t\t\t\t\tstate.rectArea[rectAreaLength] = uniforms;\r\n\t\t\t\t\trectAreaLength++;\r\n\t\t\t\t} else if (light.isPointLight) {\r\n\t\t\t\t\tconst uniforms = cache.get(light);\r\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\r\n\t\t\t\t\tuniforms.distance = light.distance;\r\n\t\t\t\t\tuniforms.decay = light.decay;\r\n\r\n\t\t\t\t\tif (light.castShadow) {\r\n\t\t\t\t\t\tconst shadow = light.shadow;\r\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\r\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\r\n\t\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\r\n\t\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\r\n\t\t\t\t\t\tstate.pointShadow[pointLength] = shadowUniforms;\r\n\t\t\t\t\t\tstate.pointShadowMap[pointLength] = shadowMap;\r\n\t\t\t\t\t\tstate.pointShadowMatrix[pointLength] = light.shadow.matrix;\r\n\t\t\t\t\t\tnumPointShadows++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.point[pointLength] = uniforms;\r\n\t\t\t\t\tpointLength++;\r\n\t\t\t\t} else if (light.isHemisphereLight) {\r\n\t\t\t\t\tconst uniforms = cache.get(light);\r\n\t\t\t\t\tuniforms.skyColor.copy(light.color).multiplyScalar(intensity * scaleFactor);\r\n\t\t\t\t\tuniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity * scaleFactor);\r\n\t\t\t\t\tstate.hemi[hemiLength] = uniforms;\r\n\t\t\t\t\themiLength++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (rectAreaLength > 0) {\r\n\t\t\t\tif (capabilities.isWebGL2) {\r\n\t\t\t\t\t// WebGL 2\r\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\r\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// WebGL 1\r\n\t\t\t\t\tif (extensions.has('OES_texture_float_linear') === true) {\r\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\r\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\r\n\t\t\t\t\t} else if (extensions.has('OES_texture_half_float_linear') === true) {\r\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\r\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstate.ambient[0] = r;\r\n\t\t\tstate.ambient[1] = g;\r\n\t\t\tstate.ambient[2] = b;\r\n\t\t\tconst hash = state.hash;\r\n\r\n\t\t\tif (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\r\n\t\t\t\tstate.directional.length = directionalLength;\r\n\t\t\t\tstate.spot.length = spotLength;\r\n\t\t\t\tstate.rectArea.length = rectAreaLength;\r\n\t\t\t\tstate.point.length = pointLength;\r\n\t\t\t\tstate.hemi.length = hemiLength;\r\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\r\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\r\n\t\t\t\tstate.pointShadow.length = numPointShadows;\r\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\r\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\r\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\r\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\r\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\r\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\r\n\t\t\t\thash.directionalLength = directionalLength;\r\n\t\t\t\thash.pointLength = pointLength;\r\n\t\t\t\thash.spotLength = spotLength;\r\n\t\t\t\thash.rectAreaLength = rectAreaLength;\r\n\t\t\t\thash.hemiLength = hemiLength;\r\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\r\n\t\t\t\thash.numPointShadows = numPointShadows;\r\n\t\t\t\thash.numSpotShadows = numSpotShadows;\r\n\t\t\t\tstate.version = nextVersion++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setupView(lights, camera) {\r\n\t\t\tlet directionalLength = 0;\r\n\t\t\tlet pointLength = 0;\r\n\t\t\tlet spotLength = 0;\r\n\t\t\tlet rectAreaLength = 0;\r\n\t\t\tlet hemiLength = 0;\r\n\t\t\tconst viewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\r\n\t\t\t\tconst light = lights[i];\r\n\r\n\t\t\t\tif (light.isDirectionalLight) {\r\n\t\t\t\t\tconst uniforms = state.directional[directionalLength];\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\r\n\t\t\t\t\tuniforms.direction.sub(vector3);\r\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\r\n\t\t\t\t\tdirectionalLength++;\r\n\t\t\t\t} else if (light.isSpotLight) {\r\n\t\t\t\t\tconst uniforms = state.spot[spotLength];\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\r\n\t\t\t\t\tuniforms.direction.sub(vector3);\r\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\r\n\t\t\t\t\tspotLength++;\r\n\t\t\t\t} else if (light.isRectAreaLight) {\r\n\t\t\t\t\tconst uniforms = state.rectArea[rectAreaLength];\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\r\n\r\n\t\t\t\t\tmatrix42.identity();\r\n\t\t\t\t\tmatrix4.copy(light.matrixWorld);\r\n\t\t\t\t\tmatrix4.premultiply(viewMatrix);\r\n\t\t\t\t\tmatrix42.extractRotation(matrix4);\r\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\r\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\r\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4(matrix42);\r\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4(matrix42);\r\n\t\t\t\t\trectAreaLength++;\r\n\t\t\t\t} else if (light.isPointLight) {\r\n\t\t\t\t\tconst uniforms = state.point[pointLength];\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\r\n\t\t\t\t\tpointLength++;\r\n\t\t\t\t} else if (light.isHemisphereLight) {\r\n\t\t\t\t\tconst uniforms = state.hemi[hemiLength];\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\r\n\t\t\t\t\tuniforms.direction.normalize();\r\n\t\t\t\t\themiLength++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tsetup: setup,\r\n\t\t\tsetupView: setupView,\r\n\t\t\tstate: state\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLRenderState(extensions, capabilities) {\r\n\t\tconst lights = new WebGLLights(extensions, capabilities);\r\n\t\tconst lightsArray = [];\r\n\t\tconst shadowsArray = [];\r\n\r\n\t\tfunction init() {\r\n\t\t\tlightsArray.length = 0;\r\n\t\t\tshadowsArray.length = 0;\r\n\t\t}\r\n\r\n\t\tfunction pushLight(light) {\r\n\t\t\tlightsArray.push(light);\r\n\t\t}\r\n\r\n\t\tfunction pushShadow(shadowLight) {\r\n\t\t\tshadowsArray.push(shadowLight);\r\n\t\t}\r\n\r\n\t\tfunction setupLights(physicallyCorrectLights) {\r\n\t\t\tlights.setup(lightsArray, physicallyCorrectLights);\r\n\t\t}\r\n\r\n\t\tfunction setupLightsView(camera) {\r\n\t\t\tlights.setupView(lightsArray, camera);\r\n\t\t}\r\n\r\n\t\tconst state = {\r\n\t\t\tlightsArray: lightsArray,\r\n\t\t\tshadowsArray: shadowsArray,\r\n\t\t\tlights: lights\r\n\t\t};\r\n\t\treturn {\r\n\t\t\tinit: init,\r\n\t\t\tstate: state,\r\n\t\t\tsetupLights: setupLights,\r\n\t\t\tsetupLightsView: setupLightsView,\r\n\t\t\tpushLight: pushLight,\r\n\t\t\tpushShadow: pushShadow\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLRenderStates(extensions, capabilities) {\r\n\t\tlet renderStates = new WeakMap();\r\n\r\n\t\tfunction get(scene, renderCallDepth = 0) {\r\n\t\t\tlet renderState;\r\n\r\n\t\t\tif (renderStates.has(scene) === false) {\r\n\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\r\n\t\t\t\trenderStates.set(scene, [renderState]);\r\n\t\t\t} else {\r\n\t\t\t\tif (renderCallDepth >= renderStates.get(scene).length) {\r\n\t\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\r\n\t\t\t\t\trenderStates.get(scene).push(renderState);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trenderState = renderStates.get(scene)[renderCallDepth];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn renderState;\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\trenderStates = new WeakMap();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshDepthMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'MeshDepthMaterial';\r\n\t\t\tthis.depthPacking = BasicDepthPacking;\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.fog = false;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.depthPacking = source.depthPacking;\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\r\n\t *\treferencePosition: <float>,\r\n\t *\tnearDistance: <float>,\r\n\t *\tfarDistance: <float>,\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshDistanceMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'MeshDistanceMaterial';\r\n\t\t\tthis.referencePosition = new Vector3();\r\n\t\t\tthis.nearDistance = 1;\r\n\t\t\tthis.farDistance = 1000;\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.fog = false;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.referencePosition.copy(source.referencePosition);\r\n\t\t\tthis.nearDistance = source.nearDistance;\r\n\t\t\tthis.farDistance = source.farDistance;\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\r\n\r\n\tconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\r\n\tconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\nuniform float samples;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\r\n\r\n\tfunction WebGLShadowMap(_renderer, _objects, _capabilities) {\r\n\t\tlet _frustum = new Frustum();\r\n\r\n\t\tconst _shadowMapSize = new Vector2(),\r\n\t\t\t\t\t_viewportSize = new Vector2(),\r\n\t\t\t\t\t_viewport = new Vector4(),\r\n\t\t\t\t\t_depthMaterial = new MeshDepthMaterial({\r\n\t\t\tdepthPacking: RGBADepthPacking\r\n\t\t}),\r\n\t\t\t\t\t_distanceMaterial = new MeshDistanceMaterial(),\r\n\t\t\t\t\t_materialCache = {},\r\n\t\t\t\t\t_maxTextureSize = _capabilities.maxTextureSize;\r\n\r\n\t\tconst shadowSide = {\r\n\t\t\t0: BackSide,\r\n\t\t\t1: FrontSide,\r\n\t\t\t2: DoubleSide\r\n\t\t};\r\n\t\tconst shadowMaterialVertical = new ShaderMaterial({\r\n\t\t\tuniforms: {\r\n\t\t\t\tshadow_pass: {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t},\r\n\t\t\t\tresolution: {\r\n\t\t\t\t\tvalue: new Vector2()\r\n\t\t\t\t},\r\n\t\t\t\tradius: {\r\n\t\t\t\t\tvalue: 4.0\r\n\t\t\t\t},\r\n\t\t\t\tsamples: {\r\n\t\t\t\t\tvalue: 8.0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: vertex,\r\n\t\t\tfragmentShader: fragment\r\n\t\t});\r\n\t\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\r\n\t\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\r\n\t\tconst fullScreenTri = new BufferGeometry();\r\n\t\tfullScreenTri.setAttribute('position', new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\r\n\t\tconst fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\r\n\t\tconst scope = this;\r\n\t\tthis.enabled = false;\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\t\tthis.type = PCFShadowMap;\r\n\r\n\t\tthis.render = function (lights, scene, camera) {\r\n\t\t\tif (scope.enabled === false) return;\r\n\t\t\tif (scope.autoUpdate === false && scope.needsUpdate === false) return;\r\n\t\t\tif (lights.length === 0) return;\r\n\r\n\t\t\tconst currentRenderTarget = _renderer.getRenderTarget();\r\n\r\n\t\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\r\n\r\n\t\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\r\n\r\n\t\t\tconst _state = _renderer.state; // Set GL state for depth map.\r\n\r\n\t\t\t_state.setBlending(NoBlending);\r\n\r\n\t\t\t_state.buffers.color.setClear(1, 1, 1, 1);\r\n\r\n\t\t\t_state.buffers.depth.setTest(true);\r\n\r\n\t\t\t_state.setScissorTest(false); // render depth map\r\n\r\n\r\n\t\t\tfor (let i = 0, il = lights.length; i < il; i++) {\r\n\t\t\t\tconst light = lights[i];\r\n\t\t\t\tconst shadow = light.shadow;\r\n\r\n\t\t\t\tif (shadow === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\r\n\r\n\t\t\t\t_shadowMapSize.copy(shadow.mapSize);\r\n\r\n\t\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\r\n\r\n\t\t\t\t_shadowMapSize.multiply(shadowFrameExtents);\r\n\r\n\t\t\t\t_viewportSize.copy(shadow.mapSize);\r\n\r\n\t\t\t\tif (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {\r\n\t\t\t\t\tif (_shadowMapSize.x > _maxTextureSize) {\r\n\t\t\t\t\t\t_viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\r\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\r\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (_shadowMapSize.y > _maxTextureSize) {\r\n\t\t\t\t\t\t_viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\r\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\r\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\r\n\t\t\t\t\tconst pars = {\r\n\t\t\t\t\t\tminFilter: LinearFilter,\r\n\t\t\t\t\t\tmagFilter: LinearFilter,\r\n\t\t\t\t\t\tformat: RGBAFormat\r\n\t\t\t\t\t};\r\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\r\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\r\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\r\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (shadow.map === null) {\r\n\t\t\t\t\tconst pars = {\r\n\t\t\t\t\t\tminFilter: NearestFilter,\r\n\t\t\t\t\t\tmagFilter: NearestFilter,\r\n\t\t\t\t\t\tformat: RGBAFormat\r\n\t\t\t\t\t};\r\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\r\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\r\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_renderer.setRenderTarget(shadow.map);\r\n\r\n\t\t\t\t_renderer.clear();\r\n\r\n\t\t\t\tconst viewportCount = shadow.getViewportCount();\r\n\r\n\t\t\t\tfor (let vp = 0; vp < viewportCount; vp++) {\r\n\t\t\t\t\tconst viewport = shadow.getViewport(vp);\r\n\r\n\t\t\t\t\t_viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\r\n\r\n\t\t\t\t\t_state.viewport(_viewport);\r\n\r\n\t\t\t\t\tshadow.updateMatrices(light, vp);\r\n\t\t\t\t\t_frustum = shadow.getFrustum();\r\n\t\t\t\t\trenderObject(scene, camera, shadow.camera, light, this.type);\r\n\t\t\t\t} // do blur pass for VSM\r\n\r\n\r\n\t\t\t\tif (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\r\n\t\t\t\t\tVSMPass(shadow, camera);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tshadow.needsUpdate = false;\r\n\t\t\t}\r\n\r\n\t\t\tscope.needsUpdate = false;\r\n\r\n\t\t\t_renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\r\n\t\t};\r\n\r\n\t\tfunction VSMPass(shadow, camera) {\r\n\t\t\tconst geometry = _objects.update(fullScreenMesh); // vertical pass\r\n\r\n\r\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\r\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\r\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\r\n\t\t\tshadowMaterialVertical.uniforms.samples.value = shadow.blurSamples;\r\n\r\n\t\t\t_renderer.setRenderTarget(shadow.mapPass);\r\n\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\r\n\r\n\r\n\t\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\r\n\t\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\r\n\t\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\r\n\t\t\tshadowMaterialHorizontal.uniforms.samples.value = shadow.blurSamples;\r\n\r\n\t\t\t_renderer.setRenderTarget(shadow.map);\r\n\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\r\n\t\t}\r\n\r\n\t\tfunction getDepthMaterial(object, geometry, material, light, shadowCameraNear, shadowCameraFar, type) {\r\n\t\t\tlet result = null;\r\n\t\t\tconst customMaterial = light.isPointLight === true ? object.customDistanceMaterial : object.customDepthMaterial;\r\n\r\n\t\t\tif (customMaterial !== undefined) {\r\n\t\t\t\tresult = customMaterial;\r\n\t\t\t} else {\r\n\t\t\t\tresult = light.isPointLight === true ? _distanceMaterial : _depthMaterial;\r\n\t\t\t}\r\n\r\n\t\t\tif (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 || material.displacementMap && material.displacementScale !== 0 || material.alphaMap && material.alphaTest > 0) {\r\n\t\t\t\t// in this case we need a unique material instance reflecting the\r\n\t\t\t\t// appropriate state\r\n\t\t\t\tconst keyA = result.uuid,\r\n\t\t\t\t\t\t\tkeyB = material.uuid;\r\n\t\t\t\tlet materialsForVariant = _materialCache[keyA];\r\n\r\n\t\t\t\tif (materialsForVariant === undefined) {\r\n\t\t\t\t\tmaterialsForVariant = {};\r\n\t\t\t\t\t_materialCache[keyA] = materialsForVariant;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet cachedMaterial = materialsForVariant[keyB];\r\n\r\n\t\t\t\tif (cachedMaterial === undefined) {\r\n\t\t\t\t\tcachedMaterial = result.clone();\r\n\t\t\t\t\tmaterialsForVariant[keyB] = cachedMaterial;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult = cachedMaterial;\r\n\t\t\t}\r\n\r\n\t\t\tresult.visible = material.visible;\r\n\t\t\tresult.wireframe = material.wireframe;\r\n\r\n\t\t\tif (type === VSMShadowMap) {\r\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : material.side;\r\n\t\t\t} else {\r\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\r\n\t\t\t}\r\n\r\n\t\t\tresult.alphaMap = material.alphaMap;\r\n\t\t\tresult.alphaTest = material.alphaTest;\r\n\t\t\tresult.clipShadows = material.clipShadows;\r\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\r\n\t\t\tresult.clipIntersection = material.clipIntersection;\r\n\t\t\tresult.displacementMap = material.displacementMap;\r\n\t\t\tresult.displacementScale = material.displacementScale;\r\n\t\t\tresult.displacementBias = material.displacementBias;\r\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\t\tresult.linewidth = material.linewidth;\r\n\r\n\t\t\tif (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\r\n\t\t\t\tresult.referencePosition.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\tresult.nearDistance = shadowCameraNear;\r\n\t\t\t\tresult.farDistance = shadowCameraFar;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction renderObject(object, camera, shadowCamera, light, type) {\r\n\t\t\tif (object.visible === false) return;\r\n\t\t\tconst visible = object.layers.test(camera.layers);\r\n\r\n\t\t\tif (visible && (object.isMesh || object.isLine || object.isPoints)) {\r\n\t\t\t\tif ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\r\n\r\n\t\t\t\t\tconst geometry = _objects.update(object);\r\n\r\n\t\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\t\tif (Array.isArray(material)) {\r\n\t\t\t\t\t\tconst groups = geometry.groups;\r\n\r\n\t\t\t\t\t\tfor (let k = 0, kl = groups.length; k < kl; k++) {\r\n\t\t\t\t\t\t\tconst group = groups[k];\r\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\r\n\r\n\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\r\n\t\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\r\n\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (material.visible) {\r\n\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, material, light, shadowCamera.near, shadowCamera.far, type);\r\n\r\n\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst children = object.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\trenderObject(children[i], camera, shadowCamera, light, type);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction WebGLState(gl, extensions, capabilities) {\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\r\n\t\tfunction ColorBuffer() {\r\n\t\t\tlet locked = false;\r\n\t\t\tconst color = new Vector4();\r\n\t\t\tlet currentColorMask = null;\r\n\t\t\tconst currentColorClear = new Vector4(0, 0, 0, 0);\r\n\t\t\treturn {\r\n\t\t\t\tsetMask: function (colorMask) {\r\n\t\t\t\t\tif (currentColorMask !== colorMask && !locked) {\r\n\t\t\t\t\t\tgl.colorMask(colorMask, colorMask, colorMask, colorMask);\r\n\t\t\t\t\t\tcurrentColorMask = colorMask;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetLocked: function (lock) {\r\n\t\t\t\t\tlocked = lock;\r\n\t\t\t\t},\r\n\t\t\t\tsetClear: function (r, g, b, a, premultipliedAlpha) {\r\n\t\t\t\t\tif (premultipliedAlpha === true) {\r\n\t\t\t\t\t\tr *= a;\r\n\t\t\t\t\t\tg *= a;\r\n\t\t\t\t\t\tb *= a;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcolor.set(r, g, b, a);\r\n\r\n\t\t\t\t\tif (currentColorClear.equals(color) === false) {\r\n\t\t\t\t\t\tgl.clearColor(r, g, b, a);\r\n\t\t\t\t\t\tcurrentColorClear.copy(color);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\treset: function () {\r\n\t\t\t\t\tlocked = false;\r\n\t\t\t\t\tcurrentColorMask = null;\r\n\t\t\t\t\tcurrentColorClear.set(-1, 0, 0, 0); // set to invalid state\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction DepthBuffer() {\r\n\t\t\tlet locked = false;\r\n\t\t\tlet currentDepthMask = null;\r\n\t\t\tlet currentDepthFunc = null;\r\n\t\t\tlet currentDepthClear = null;\r\n\t\t\treturn {\r\n\t\t\t\tsetTest: function (depthTest) {\r\n\t\t\t\t\tif (depthTest) {\r\n\t\t\t\t\t\tenable(gl.DEPTH_TEST);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdisable(gl.DEPTH_TEST);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetMask: function (depthMask) {\r\n\t\t\t\t\tif (currentDepthMask !== depthMask && !locked) {\r\n\t\t\t\t\t\tgl.depthMask(depthMask);\r\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetFunc: function (depthFunc) {\r\n\t\t\t\t\tif (currentDepthFunc !== depthFunc) {\r\n\t\t\t\t\t\tif (depthFunc) {\r\n\t\t\t\t\t\t\tswitch (depthFunc) {\r\n\t\t\t\t\t\t\t\tcase NeverDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NEVER);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.ALWAYS);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase LessDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LESS);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase EqualDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.EQUAL);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GEQUAL);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase GreaterDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GREATER);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NOTEQUAL);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetLocked: function (lock) {\r\n\t\t\t\t\tlocked = lock;\r\n\t\t\t\t},\r\n\t\t\t\tsetClear: function (depth) {\r\n\t\t\t\t\tif (currentDepthClear !== depth) {\r\n\t\t\t\t\t\tgl.clearDepth(depth);\r\n\t\t\t\t\t\tcurrentDepthClear = depth;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\treset: function () {\r\n\t\t\t\t\tlocked = false;\r\n\t\t\t\t\tcurrentDepthMask = null;\r\n\t\t\t\t\tcurrentDepthFunc = null;\r\n\t\t\t\t\tcurrentDepthClear = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction StencilBuffer() {\r\n\t\t\tlet locked = false;\r\n\t\t\tlet currentStencilMask = null;\r\n\t\t\tlet currentStencilFunc = null;\r\n\t\t\tlet currentStencilRef = null;\r\n\t\t\tlet currentStencilFuncMask = null;\r\n\t\t\tlet currentStencilFail = null;\r\n\t\t\tlet currentStencilZFail = null;\r\n\t\t\tlet currentStencilZPass = null;\r\n\t\t\tlet currentStencilClear = null;\r\n\t\t\treturn {\r\n\t\t\t\tsetTest: function (stencilTest) {\r\n\t\t\t\t\tif (!locked) {\r\n\t\t\t\t\t\tif (stencilTest) {\r\n\t\t\t\t\t\t\tenable(gl.STENCIL_TEST);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdisable(gl.STENCIL_TEST);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetMask: function (stencilMask) {\r\n\t\t\t\t\tif (currentStencilMask !== stencilMask && !locked) {\r\n\t\t\t\t\t\tgl.stencilMask(stencilMask);\r\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetFunc: function (stencilFunc, stencilRef, stencilMask) {\r\n\t\t\t\t\tif (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\r\n\t\t\t\t\t\tgl.stencilFunc(stencilFunc, stencilRef, stencilMask);\r\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\r\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\r\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetOp: function (stencilFail, stencilZFail, stencilZPass) {\r\n\t\t\t\t\tif (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\r\n\t\t\t\t\t\tgl.stencilOp(stencilFail, stencilZFail, stencilZPass);\r\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\r\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\r\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetLocked: function (lock) {\r\n\t\t\t\t\tlocked = lock;\r\n\t\t\t\t},\r\n\t\t\t\tsetClear: function (stencil) {\r\n\t\t\t\t\tif (currentStencilClear !== stencil) {\r\n\t\t\t\t\t\tgl.clearStencil(stencil);\r\n\t\t\t\t\t\tcurrentStencilClear = stencil;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\treset: function () {\r\n\t\t\t\t\tlocked = false;\r\n\t\t\t\t\tcurrentStencilMask = null;\r\n\t\t\t\t\tcurrentStencilFunc = null;\r\n\t\t\t\t\tcurrentStencilRef = null;\r\n\t\t\t\t\tcurrentStencilFuncMask = null;\r\n\t\t\t\t\tcurrentStencilFail = null;\r\n\t\t\t\t\tcurrentStencilZFail = null;\r\n\t\t\t\t\tcurrentStencilZPass = null;\r\n\t\t\t\t\tcurrentStencilClear = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} //\r\n\r\n\r\n\t\tconst colorBuffer = new ColorBuffer();\r\n\t\tconst depthBuffer = new DepthBuffer();\r\n\t\tconst stencilBuffer = new StencilBuffer();\r\n\t\tlet enabledCapabilities = {};\r\n\t\tlet xrFramebuffer = null;\r\n\t\tlet currentBoundFramebuffers = {};\r\n\t\tlet currentProgram = null;\r\n\t\tlet currentBlendingEnabled = false;\r\n\t\tlet currentBlending = null;\r\n\t\tlet currentBlendEquation = null;\r\n\t\tlet currentBlendSrc = null;\r\n\t\tlet currentBlendDst = null;\r\n\t\tlet currentBlendEquationAlpha = null;\r\n\t\tlet currentBlendSrcAlpha = null;\r\n\t\tlet currentBlendDstAlpha = null;\r\n\t\tlet currentPremultipledAlpha = false;\r\n\t\tlet currentFlipSided = null;\r\n\t\tlet currentCullFace = null;\r\n\t\tlet currentLineWidth = null;\r\n\t\tlet currentPolygonOffsetFactor = null;\r\n\t\tlet currentPolygonOffsetUnits = null;\r\n\t\tconst maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n\t\tlet lineWidthAvailable = false;\r\n\t\tlet version = 0;\r\n\t\tconst glVersion = gl.getParameter(gl.VERSION);\r\n\r\n\t\tif (glVersion.indexOf('WebGL') !== -1) {\r\n\t\t\tversion = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\r\n\t\t\tlineWidthAvailable = version >= 1.0;\r\n\t\t} else if (glVersion.indexOf('OpenGL ES') !== -1) {\r\n\t\t\tversion = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\r\n\t\t\tlineWidthAvailable = version >= 2.0;\r\n\t\t}\r\n\r\n\t\tlet currentTextureSlot = null;\r\n\t\tlet currentBoundTextures = {};\r\n\t\tconst scissorParam = gl.getParameter(gl.SCISSOR_BOX);\r\n\t\tconst viewportParam = gl.getParameter(gl.VIEWPORT);\r\n\t\tconst currentScissor = new Vector4().fromArray(scissorParam);\r\n\t\tconst currentViewport = new Vector4().fromArray(viewportParam);\r\n\r\n\t\tfunction createTexture(type, target, count) {\r\n\t\t\tconst data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\r\n\r\n\t\t\tconst texture = gl.createTexture();\r\n\t\t\tgl.bindTexture(type, texture);\r\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\tgl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t\tconst emptyTextures = {};\r\n\t\temptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\r\n\t\temptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\r\n\r\n\t\tcolorBuffer.setClear(0, 0, 0, 1);\r\n\t\tdepthBuffer.setClear(1);\r\n\t\tstencilBuffer.setClear(0);\r\n\t\tenable(gl.DEPTH_TEST);\r\n\t\tdepthBuffer.setFunc(LessEqualDepth);\r\n\t\tsetFlipSided(false);\r\n\t\tsetCullFace(CullFaceBack);\r\n\t\tenable(gl.CULL_FACE);\r\n\t\tsetBlending(NoBlending); //\r\n\r\n\t\tfunction enable(id) {\r\n\t\t\tif (enabledCapabilities[id] !== true) {\r\n\t\t\t\tgl.enable(id);\r\n\t\t\t\tenabledCapabilities[id] = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction disable(id) {\r\n\t\t\tif (enabledCapabilities[id] !== false) {\r\n\t\t\t\tgl.disable(id);\r\n\t\t\t\tenabledCapabilities[id] = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction bindXRFramebuffer(framebuffer) {\r\n\t\t\tif (framebuffer !== xrFramebuffer) {\r\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\t\t\t\txrFramebuffer = framebuffer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction bindFramebuffer(target, framebuffer) {\r\n\t\t\tif (framebuffer === null && xrFramebuffer !== null) framebuffer = xrFramebuffer; // use active XR framebuffer if available\r\n\r\n\t\t\tif (currentBoundFramebuffers[target] !== framebuffer) {\r\n\t\t\t\tgl.bindFramebuffer(target, framebuffer);\r\n\t\t\t\tcurrentBoundFramebuffers[target] = framebuffer;\r\n\r\n\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\r\n\t\t\t\t\tif (target === gl.DRAW_FRAMEBUFFER) {\r\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (target === gl.FRAMEBUFFER) {\r\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfunction useProgram(program) {\r\n\t\t\tif (currentProgram !== program) {\r\n\t\t\t\tgl.useProgram(program);\r\n\t\t\t\tcurrentProgram = program;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst equationToGL = {\r\n\t\t\t[AddEquation]: gl.FUNC_ADD,\r\n\t\t\t[SubtractEquation]: gl.FUNC_SUBTRACT,\r\n\t\t\t[ReverseSubtractEquation]: gl.FUNC_REVERSE_SUBTRACT\r\n\t\t};\r\n\r\n\t\tif (isWebGL2) {\r\n\t\t\tequationToGL[MinEquation] = gl.MIN;\r\n\t\t\tequationToGL[MaxEquation] = gl.MAX;\r\n\t\t} else {\r\n\t\t\tconst extension = extensions.get('EXT_blend_minmax');\r\n\r\n\t\t\tif (extension !== null) {\r\n\t\t\t\tequationToGL[MinEquation] = extension.MIN_EXT;\r\n\t\t\t\tequationToGL[MaxEquation] = extension.MAX_EXT;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst factorToGL = {\r\n\t\t\t[ZeroFactor]: gl.ZERO,\r\n\t\t\t[OneFactor]: gl.ONE,\r\n\t\t\t[SrcColorFactor]: gl.SRC_COLOR,\r\n\t\t\t[SrcAlphaFactor]: gl.SRC_ALPHA,\r\n\t\t\t[SrcAlphaSaturateFactor]: gl.SRC_ALPHA_SATURATE,\r\n\t\t\t[DstColorFactor]: gl.DST_COLOR,\r\n\t\t\t[DstAlphaFactor]: gl.DST_ALPHA,\r\n\t\t\t[OneMinusSrcColorFactor]: gl.ONE_MINUS_SRC_COLOR,\r\n\t\t\t[OneMinusSrcAlphaFactor]: gl.ONE_MINUS_SRC_ALPHA,\r\n\t\t\t[OneMinusDstColorFactor]: gl.ONE_MINUS_DST_COLOR,\r\n\t\t\t[OneMinusDstAlphaFactor]: gl.ONE_MINUS_DST_ALPHA\r\n\t\t};\r\n\r\n\t\tfunction setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\r\n\t\t\tif (blending === NoBlending) {\r\n\t\t\t\tif (currentBlendingEnabled === true) {\r\n\t\t\t\t\tdisable(gl.BLEND);\r\n\t\t\t\t\tcurrentBlendingEnabled = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (currentBlendingEnabled === false) {\r\n\t\t\t\tenable(gl.BLEND);\r\n\t\t\t\tcurrentBlendingEnabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (blending !== CustomBlending) {\r\n\t\t\t\tif (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\r\n\t\t\t\t\tif (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\r\n\t\t\t\t\t\tgl.blendEquation(gl.FUNC_ADD);\r\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\r\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (premultipliedAlpha) {\r\n\t\t\t\t\t\tswitch (blending) {\r\n\t\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ONE, gl.ONE);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tswitch (blending) {\r\n\t\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.SRC_COLOR);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\t\t\t\tcurrentBlending = blending;\r\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t} // custom blending\r\n\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\r\n\t\t\t\tgl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\t\t\t}\r\n\r\n\t\t\tif (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\r\n\t\t\t\tgl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\t\t\tcurrentPremultipledAlpha = null;\r\n\t\t}\r\n\r\n\t\tfunction setMaterial(material, frontFaceCW) {\r\n\t\t\tmaterial.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\r\n\t\t\tlet flipSided = material.side === BackSide;\r\n\t\t\tif (frontFaceCW) flipSided = !flipSided;\r\n\t\t\tsetFlipSided(flipSided);\r\n\t\t\tmaterial.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\r\n\t\t\tdepthBuffer.setFunc(material.depthFunc);\r\n\t\t\tdepthBuffer.setTest(material.depthTest);\r\n\t\t\tdepthBuffer.setMask(material.depthWrite);\r\n\t\t\tcolorBuffer.setMask(material.colorWrite);\r\n\t\t\tconst stencilWrite = material.stencilWrite;\r\n\t\t\tstencilBuffer.setTest(stencilWrite);\r\n\r\n\t\t\tif (stencilWrite) {\r\n\t\t\t\tstencilBuffer.setMask(material.stencilWriteMask);\r\n\t\t\t\tstencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\r\n\t\t\t\tstencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\r\n\t\t\t}\r\n\r\n\t\t\tsetPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\r\n\t\t\tmaterial.alphaToCoverage === true ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE) : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\r\n\t\t} //\r\n\r\n\r\n\t\tfunction setFlipSided(flipSided) {\r\n\t\t\tif (currentFlipSided !== flipSided) {\r\n\t\t\t\tif (flipSided) {\r\n\t\t\t\t\tgl.frontFace(gl.CW);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgl.frontFace(gl.CCW);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setCullFace(cullFace) {\r\n\t\t\tif (cullFace !== CullFaceNone) {\r\n\t\t\t\tenable(gl.CULL_FACE);\r\n\r\n\t\t\t\tif (cullFace !== currentCullFace) {\r\n\t\t\t\t\tif (cullFace === CullFaceBack) {\r\n\t\t\t\t\t\tgl.cullFace(gl.BACK);\r\n\t\t\t\t\t} else if (cullFace === CullFaceFront) {\r\n\t\t\t\t\t\tgl.cullFace(gl.FRONT);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgl.cullFace(gl.FRONT_AND_BACK);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdisable(gl.CULL_FACE);\r\n\t\t\t}\r\n\r\n\t\t\tcurrentCullFace = cullFace;\r\n\t\t}\r\n\r\n\t\tfunction setLineWidth(width) {\r\n\t\t\tif (width !== currentLineWidth) {\r\n\t\t\t\tif (lineWidthAvailable) gl.lineWidth(width);\r\n\t\t\t\tcurrentLineWidth = width;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setPolygonOffset(polygonOffset, factor, units) {\r\n\t\t\tif (polygonOffset) {\r\n\t\t\t\tenable(gl.POLYGON_OFFSET_FILL);\r\n\r\n\t\t\t\tif (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\r\n\t\t\t\t\tgl.polygonOffset(factor, units);\r\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdisable(gl.POLYGON_OFFSET_FILL);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setScissorTest(scissorTest) {\r\n\t\t\tif (scissorTest) {\r\n\t\t\t\tenable(gl.SCISSOR_TEST);\r\n\t\t\t} else {\r\n\t\t\t\tdisable(gl.SCISSOR_TEST);\r\n\t\t\t}\r\n\t\t} // texture\r\n\r\n\r\n\t\tfunction activeTexture(webglSlot) {\r\n\t\t\tif (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\t\tif (currentTextureSlot !== webglSlot) {\r\n\t\t\t\tgl.activeTexture(webglSlot);\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction bindTexture(webglType, webglTexture) {\r\n\t\t\tif (currentTextureSlot === null) {\r\n\t\t\t\tactiveTexture();\r\n\t\t\t}\r\n\r\n\t\t\tlet boundTexture = currentBoundTextures[currentTextureSlot];\r\n\r\n\t\t\tif (boundTexture === undefined) {\r\n\t\t\t\tboundTexture = {\r\n\t\t\t\t\ttype: undefined,\r\n\t\t\t\t\ttexture: undefined\r\n\t\t\t\t};\r\n\t\t\t\tcurrentBoundTextures[currentTextureSlot] = boundTexture;\r\n\t\t\t}\r\n\r\n\t\t\tif (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\r\n\t\t\t\tgl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction unbindTexture() {\r\n\t\t\tconst boundTexture = currentBoundTextures[currentTextureSlot];\r\n\r\n\t\t\tif (boundTexture !== undefined && boundTexture.type !== undefined) {\r\n\t\t\t\tgl.bindTexture(boundTexture.type, null);\r\n\t\t\t\tboundTexture.type = undefined;\r\n\t\t\t\tboundTexture.texture = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction compressedTexImage2D() {\r\n\t\t\ttry {\r\n\t\t\t\tgl.compressedTexImage2D.apply(gl, arguments);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction texImage2D() {\r\n\t\t\ttry {\r\n\t\t\t\tgl.texImage2D.apply(gl, arguments);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction texImage3D() {\r\n\t\t\ttry {\r\n\t\t\t\tgl.texImage3D.apply(gl, arguments);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\r\n\t\t\t}\r\n\t\t} //\r\n\r\n\r\n\t\tfunction scissor(scissor) {\r\n\t\t\tif (currentScissor.equals(scissor) === false) {\r\n\t\t\t\tgl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\r\n\t\t\t\tcurrentScissor.copy(scissor);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction viewport(viewport) {\r\n\t\t\tif (currentViewport.equals(viewport) === false) {\r\n\t\t\t\tgl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\r\n\t\t\t\tcurrentViewport.copy(viewport);\r\n\t\t\t}\r\n\t\t} //\r\n\r\n\r\n\t\tfunction reset() {\r\n\t\t\t// reset state\r\n\t\t\tgl.disable(gl.BLEND);\r\n\t\t\tgl.disable(gl.CULL_FACE);\r\n\t\t\tgl.disable(gl.DEPTH_TEST);\r\n\t\t\tgl.disable(gl.POLYGON_OFFSET_FILL);\r\n\t\t\tgl.disable(gl.SCISSOR_TEST);\r\n\t\t\tgl.disable(gl.STENCIL_TEST);\r\n\t\t\tgl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\r\n\t\t\tgl.blendEquation(gl.FUNC_ADD);\r\n\t\t\tgl.blendFunc(gl.ONE, gl.ZERO);\r\n\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\r\n\t\t\tgl.colorMask(true, true, true, true);\r\n\t\t\tgl.clearColor(0, 0, 0, 0);\r\n\t\t\tgl.depthMask(true);\r\n\t\t\tgl.depthFunc(gl.LESS);\r\n\t\t\tgl.clearDepth(1);\r\n\t\t\tgl.stencilMask(0xffffffff);\r\n\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\r\n\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\r\n\t\t\tgl.clearStencil(0);\r\n\t\t\tgl.cullFace(gl.BACK);\r\n\t\t\tgl.frontFace(gl.CCW);\r\n\t\t\tgl.polygonOffset(0, 0);\r\n\t\t\tgl.activeTexture(gl.TEXTURE0);\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n\t\t\tif (isWebGL2 === true) {\r\n\t\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\r\n\t\t\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\r\n\t\t\t}\r\n\r\n\t\t\tgl.useProgram(null);\r\n\t\t\tgl.lineWidth(1);\r\n\t\t\tgl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\r\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\r\n\r\n\t\t\tenabledCapabilities = {};\r\n\t\t\tcurrentTextureSlot = null;\r\n\t\t\tcurrentBoundTextures = {};\r\n\t\t\txrFramebuffer = null;\r\n\t\t\tcurrentBoundFramebuffers = {};\r\n\t\t\tcurrentProgram = null;\r\n\t\t\tcurrentBlendingEnabled = false;\r\n\t\t\tcurrentBlending = null;\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\t\t\tcurrentPremultipledAlpha = false;\r\n\t\t\tcurrentFlipSided = null;\r\n\t\t\tcurrentCullFace = null;\r\n\t\t\tcurrentLineWidth = null;\r\n\t\t\tcurrentPolygonOffsetFactor = null;\r\n\t\t\tcurrentPolygonOffsetUnits = null;\r\n\t\t\tcurrentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\r\n\t\t\tcurrentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\r\n\t\t\tcolorBuffer.reset();\r\n\t\t\tdepthBuffer.reset();\r\n\t\t\tstencilBuffer.reset();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tbuffers: {\r\n\t\t\t\tcolor: colorBuffer,\r\n\t\t\t\tdepth: depthBuffer,\r\n\t\t\t\tstencil: stencilBuffer\r\n\t\t\t},\r\n\t\t\tenable: enable,\r\n\t\t\tdisable: disable,\r\n\t\t\tbindFramebuffer: bindFramebuffer,\r\n\t\t\tbindXRFramebuffer: bindXRFramebuffer,\r\n\t\t\tuseProgram: useProgram,\r\n\t\t\tsetBlending: setBlending,\r\n\t\t\tsetMaterial: setMaterial,\r\n\t\t\tsetFlipSided: setFlipSided,\r\n\t\t\tsetCullFace: setCullFace,\r\n\t\t\tsetLineWidth: setLineWidth,\r\n\t\t\tsetPolygonOffset: setPolygonOffset,\r\n\t\t\tsetScissorTest: setScissorTest,\r\n\t\t\tactiveTexture: activeTexture,\r\n\t\t\tbindTexture: bindTexture,\r\n\t\t\tunbindTexture: unbindTexture,\r\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\r\n\t\t\ttexImage2D: texImage2D,\r\n\t\t\ttexImage3D: texImage3D,\r\n\t\t\tscissor: scissor,\r\n\t\t\tviewport: viewport,\r\n\t\t\treset: reset\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\t\tconst maxTextures = capabilities.maxTextures;\r\n\t\tconst maxCubemapSize = capabilities.maxCubemapSize;\r\n\t\tconst maxTextureSize = capabilities.maxTextureSize;\r\n\t\tconst maxSamples = capabilities.maxSamples;\r\n\r\n\t\tconst _videoTextures = new WeakMap();\r\n\r\n\t\tlet _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\r\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\r\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\r\n\r\n\r\n\t\tlet useOffscreenCanvas = false;\r\n\r\n\t\ttry {\r\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' && new OffscreenCanvas(1, 1).getContext('2d') !== null;\r\n\t\t} catch (err) {// Ignore any errors\r\n\t\t}\r\n\r\n\t\tfunction createCanvas(width, height) {\r\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\r\n\t\t\treturn useOffscreenCanvas ? new OffscreenCanvas(width, height) : createElementNS('canvas');\r\n\t\t}\r\n\r\n\t\tfunction resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\r\n\t\t\tlet scale = 1; // handle case if texture exceeds max size\r\n\r\n\t\t\tif (image.width > maxSize || image.height > maxSize) {\r\n\t\t\t\tscale = maxSize / Math.max(image.width, image.height);\r\n\t\t\t} // only perform resize if necessary\r\n\r\n\r\n\t\t\tif (scale < 1 || needsPowerOfTwo === true) {\r\n\t\t\t\t// only perform resize for certain image types\r\n\t\t\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\r\n\t\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\r\n\t\t\t\t\tconst width = floor(scale * image.width);\r\n\t\t\t\t\tconst height = floor(scale * image.height);\r\n\t\t\t\t\tif (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\r\n\r\n\t\t\t\t\tconst canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\r\n\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\tcanvas.height = height;\r\n\t\t\t\t\tconst context = canvas.getContext('2d');\r\n\t\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\r\n\t\t\t\t\treturn canvas;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ('data' in image) {\r\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn image;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn image;\r\n\t\t}\r\n\r\n\t\tfunction isPowerOfTwo$1(image) {\r\n\t\t\treturn isPowerOfTwo(image.width) && isPowerOfTwo(image.height);\r\n\t\t}\r\n\r\n\t\tfunction textureNeedsPowerOfTwo(texture) {\r\n\t\t\tif (isWebGL2) return false;\r\n\t\t\treturn texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\r\n\t\t}\r\n\r\n\t\tfunction textureNeedsGenerateMipmaps(texture, supportsMips) {\r\n\t\t\treturn texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\r\n\t\t}\r\n\r\n\t\tfunction generateMipmap(target, texture, width, height, depth = 1) {\r\n\t\t\t_gl.generateMipmap(target);\r\n\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\t\t\ttextureProperties.__maxMipLevel = Math.log2(Math.max(width, height, depth));\r\n\t\t}\r\n\r\n\t\tfunction getInternalFormat(internalFormatName, glFormat, glType, encoding) {\r\n\t\t\tif (isWebGL2 === false) return glFormat;\r\n\r\n\t\t\tif (internalFormatName !== null) {\r\n\t\t\t\tif (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\r\n\t\t\t}\r\n\r\n\t\t\tlet internalFormat = glFormat;\r\n\r\n\t\t\tif (glFormat === _gl.RED) {\r\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.R32F;\r\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.R16F;\r\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.R8;\r\n\t\t\t}\r\n\r\n\t\t\tif (glFormat === _gl.RGB) {\r\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGB32F;\r\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGB16F;\r\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGB8;\r\n\t\t\t}\r\n\r\n\t\t\tif (glFormat === _gl.RGBA) {\r\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGBA32F;\r\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGBA16F;\r\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = encoding === sRGBEncoding ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\r\n\t\t\t}\r\n\r\n\t\t\tif (internalFormat === _gl.R16F || internalFormat === _gl.R32F || internalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F) {\r\n\t\t\t\textensions.get('EXT_color_buffer_float');\r\n\t\t\t}\r\n\r\n\t\t\treturn internalFormat;\r\n\t\t} // Fallback filters for non-power-of-2 textures\r\n\r\n\r\n\t\tfunction filterFallback(f) {\r\n\t\t\tif (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\r\n\t\t\t\treturn _gl.NEAREST;\r\n\t\t\t}\r\n\r\n\t\t\treturn _gl.LINEAR;\r\n\t\t} //\r\n\r\n\r\n\t\tfunction onTextureDispose(event) {\r\n\t\t\tconst texture = event.target;\r\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\r\n\t\t\tdeallocateTexture(texture);\r\n\r\n\t\t\tif (texture.isVideoTexture) {\r\n\t\t\t\t_videoTextures.delete(texture);\r\n\t\t\t}\r\n\r\n\t\t\tinfo.memory.textures--;\r\n\t\t}\r\n\r\n\t\tfunction onRenderTargetDispose(event) {\r\n\t\t\tconst renderTarget = event.target;\r\n\t\t\trenderTarget.removeEventListener('dispose', onRenderTargetDispose);\r\n\t\t\tdeallocateRenderTarget(renderTarget);\r\n\t\t} //\r\n\r\n\r\n\t\tfunction deallocateTexture(texture) {\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\t\t\tif (textureProperties.__webglInit === undefined) return;\r\n\r\n\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\r\n\r\n\t\t\tproperties.remove(texture);\r\n\t\t}\r\n\r\n\t\tfunction deallocateRenderTarget(renderTarget) {\r\n\t\t\tconst texture = renderTarget.texture;\r\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\t\t\tif (!renderTarget) return;\r\n\r\n\t\t\tif (textureProperties.__webglTexture !== undefined) {\r\n\t\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\r\n\r\n\t\t\t\tinfo.memory.textures--;\r\n\t\t\t}\r\n\r\n\t\t\tif (renderTarget.depthTexture) {\r\n\t\t\t\trenderTarget.depthTexture.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\r\n\t\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\r\n\r\n\t\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\r\n\r\n\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\r\n\t\t\t\tif (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\r\n\t\t\t\tif (renderTargetProperties.__webglColorRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\r\n\t\t\t\tif (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\r\n\t\t\t}\r\n\r\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\r\n\t\t\t\tfor (let i = 0, il = texture.length; i < il; i++) {\r\n\t\t\t\t\tconst attachmentProperties = properties.get(texture[i]);\r\n\r\n\t\t\t\t\tif (attachmentProperties.__webglTexture) {\r\n\t\t\t\t\t\t_gl.deleteTexture(attachmentProperties.__webglTexture);\r\n\r\n\t\t\t\t\t\tinfo.memory.textures--;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tproperties.remove(texture[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tproperties.remove(texture);\r\n\t\t\tproperties.remove(renderTarget);\r\n\t\t} //\r\n\r\n\r\n\t\tlet textureUnits = 0;\r\n\r\n\t\tfunction resetTextureUnits() {\r\n\t\t\ttextureUnits = 0;\r\n\t\t}\r\n\r\n\t\tfunction allocateTextureUnit() {\r\n\t\t\tconst textureUnit = textureUnits;\r\n\r\n\t\t\tif (textureUnit >= maxTextures) {\r\n\t\t\t\tconsole.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\r\n\t\t\t}\r\n\r\n\t\t\ttextureUnits += 1;\r\n\t\t\treturn textureUnit;\r\n\t\t} //\r\n\r\n\r\n\t\tfunction setTexture2D(texture, slot) {\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\t\t\tif (texture.isVideoTexture) updateVideoTexture(texture);\r\n\r\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\r\n\t\t\t\tconst image = texture.image;\r\n\r\n\t\t\t\tif (image === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\r\n\t\t\t\t} else if (image.complete === false) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuploadTexture(textureProperties, texture, slot);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\r\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\r\n\t\t}\r\n\r\n\t\tfunction setTexture2DArray(texture, slot) {\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\r\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\r\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\r\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture);\r\n\t\t}\r\n\r\n\t\tfunction setTexture3D(texture, slot) {\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\r\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\r\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\r\n\t\t\tstate.bindTexture(_gl.TEXTURE_3D, textureProperties.__webglTexture);\r\n\t\t}\r\n\r\n\t\tfunction setTextureCube(texture, slot) {\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\r\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\r\n\t\t\t\tuploadCubeTexture(textureProperties, texture, slot);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\r\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\r\n\t\t}\r\n\r\n\t\tconst wrappingToGL = {\r\n\t\t\t[RepeatWrapping]: _gl.REPEAT,\r\n\t\t\t[ClampToEdgeWrapping]: _gl.CLAMP_TO_EDGE,\r\n\t\t\t[MirroredRepeatWrapping]: _gl.MIRRORED_REPEAT\r\n\t\t};\r\n\t\tconst filterToGL = {\r\n\t\t\t[NearestFilter]: _gl.NEAREST,\r\n\t\t\t[NearestMipmapNearestFilter]: _gl.NEAREST_MIPMAP_NEAREST,\r\n\t\t\t[NearestMipmapLinearFilter]: _gl.NEAREST_MIPMAP_LINEAR,\r\n\t\t\t[LinearFilter]: _gl.LINEAR,\r\n\t\t\t[LinearMipmapNearestFilter]: _gl.LINEAR_MIPMAP_NEAREST,\r\n\t\t\t[LinearMipmapLinearFilter]: _gl.LINEAR_MIPMAP_LINEAR\r\n\t\t};\r\n\r\n\t\tfunction setTextureParameters(textureType, texture, supportsMips) {\r\n\t\t\tif (supportsMips) {\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[texture.wrapS]);\r\n\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[texture.wrapT]);\r\n\r\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\r\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[texture.wrapR]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[texture.magFilter]);\r\n\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[texture.minFilter]);\r\n\t\t\t} else {\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\r\n\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\r\n\r\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\r\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\r\n\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\r\n\r\n\t\t\t\tif (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\r\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\r\n\t\t\t\tif (texture.type === FloatType && extensions.has('OES_texture_float_linear') === false) return; // verify extension for WebGL 1 and WebGL 2\r\n\r\n\t\t\t\tif (isWebGL2 === false && texture.type === HalfFloatType && extensions.has('OES_texture_half_float_linear') === false) return; // verify extension for WebGL 1 only\r\n\r\n\t\t\t\tif (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\r\n\t\t\t\t\t_gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\r\n\r\n\t\t\t\t\tproperties.get(texture).__currentAnisotropy = texture.anisotropy;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction initTexture(textureProperties, texture) {\r\n\t\t\tif (textureProperties.__webglInit === undefined) {\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\t\t\tinfo.memory.textures++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction uploadTexture(textureProperties, texture, slot) {\r\n\t\t\tlet textureType = _gl.TEXTURE_2D;\r\n\t\t\tif (texture.isDataTexture2DArray) textureType = _gl.TEXTURE_2D_ARRAY;\r\n\t\t\tif (texture.isDataTexture3D) textureType = _gl.TEXTURE_3D;\r\n\t\t\tinitTexture(textureProperties, texture);\r\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\r\n\t\t\tstate.bindTexture(textureType, textureProperties.__webglTexture);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\r\n\r\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo$1(texture.image) === false;\r\n\t\t\tconst image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\r\n\t\t\tconst supportsMips = isPowerOfTwo$1(image) || isWebGL2,\r\n\t\t\t\t\t\tglFormat = utils.convert(texture.format);\r\n\t\t\tlet glType = utils.convert(texture.type),\r\n\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\r\n\t\t\tsetTextureParameters(textureType, texture, supportsMips);\r\n\t\t\tlet mipmap;\r\n\t\t\tconst mipmaps = texture.mipmaps;\r\n\r\n\t\t\tif (texture.isDepthTexture) {\r\n\t\t\t\t// populate depth texture with dummy data\r\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\r\n\r\n\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\tif (texture.type === FloatType) {\r\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\r\n\t\t\t\t\t} else if (texture.type === UnsignedIntType) {\r\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\r\n\t\t\t\t\t} else if (texture.type === UnsignedInt248Type) {\r\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (texture.type === FloatType) {\r\n\t\t\t\t\t\tconsole.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\r\n\t\t\t\t\t}\r\n\t\t\t\t} // validation checks for WebGL 1\r\n\r\n\r\n\t\t\t\tif (texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\r\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\r\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\tif (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\r\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\r\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\r\n\t\t\t\t\t\tglType = utils.convert(texture.type);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\r\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\r\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\r\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\r\n\t\t\t\t\tif (texture.type !== UnsignedInt248Type) {\r\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\r\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\r\n\t\t\t\t\t\tglType = utils.convert(texture.type);\r\n\t\t\t\t\t}\r\n\t\t\t\t} //\r\n\r\n\r\n\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\r\n\t\t\t} else if (texture.isDataTexture) {\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\r\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\r\n\t\t\t\t\t\tmipmap = mipmaps[i];\r\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\t\t\t\t}\r\n\t\t\t} else if (texture.isCompressedTexture) {\r\n\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\r\n\t\t\t\t\tmipmap = mipmaps[i];\r\n\r\n\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\r\n\t\t\t\t\t\tif (glFormat !== null) {\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\t\t\t} else if (texture.isDataTexture2DArray) {\r\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\r\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\t\t\t} else if (texture.isDataTexture3D) {\r\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\r\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\t\t\t} else {\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\r\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\r\n\t\t\t\t\t\tmipmap = mipmaps[i];\r\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n\t\t\t\tgenerateMipmap(textureType, texture, image.width, image.height);\r\n\t\t\t}\r\n\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\r\n\t\t}\r\n\r\n\t\tfunction uploadCubeTexture(textureProperties, texture, slot) {\r\n\t\t\tif (texture.image.length !== 6) return;\r\n\t\t\tinitTexture(textureProperties, texture);\r\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\r\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\r\n\r\n\t\t\tconst isCompressed = texture && (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\r\n\t\t\tconst isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\r\n\t\t\tconst cubeImage = [];\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tif (!isCompressed && !isDataTexture) {\r\n\t\t\t\t\tcubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst image = cubeImage[0],\r\n\t\t\t\t\t\tsupportsMips = isPowerOfTwo$1(image) || isWebGL2,\r\n\t\t\t\t\t\tglFormat = utils.convert(texture.format),\r\n\t\t\t\t\t\tglType = utils.convert(texture.type),\r\n\t\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\r\n\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\r\n\t\t\tlet mipmaps;\r\n\r\n\t\t\tif (isCompressed) {\r\n\t\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\t\tmipmaps = cubeImage[i].mipmaps;\r\n\r\n\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\r\n\t\t\t\t\t\tconst mipmap = mipmaps[j];\r\n\r\n\t\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\r\n\t\t\t\t\t\t\tif (glFormat !== null) {\r\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\t\t\t} else {\r\n\t\t\t\tmipmaps = texture.mipmaps;\r\n\r\n\t\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\t\tif (isDataTexture) {\r\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\r\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\r\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[i].image;\r\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[i]);\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\r\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\r\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\r\n\t\t\t}\r\n\r\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n\t\t\t\t// We assume images for cube map have the same size.\r\n\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, image.width, image.height);\r\n\t\t\t}\r\n\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\r\n\t\t} // Render targets\r\n\t\t// Setup storage for target texture and bind it to correct framebuffer\r\n\r\n\r\n\t\tfunction setupFrameBufferTexture(framebuffer, renderTarget, texture, attachment, textureTarget) {\r\n\t\t\tconst glFormat = utils.convert(texture.format);\r\n\t\t\tconst glType = utils.convert(texture.type);\r\n\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\r\n\r\n\t\t\tif (textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY) {\r\n\t\t\t\tstate.texImage3D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null);\r\n\t\t\t} else {\r\n\t\t\t\tstate.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\r\n\t\t\t}\r\n\r\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\r\n\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(texture).__webglTexture, 0);\r\n\r\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\r\n\t\t} // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\r\n\r\n\t\tfunction setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\r\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\r\n\r\n\t\t\tif (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\r\n\t\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\r\n\r\n\t\t\t\tif (isMultisample) {\r\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\r\n\r\n\t\t\t\t\tif (depthTexture && depthTexture.isDepthTexture) {\r\n\t\t\t\t\t\tif (depthTexture.type === FloatType) {\r\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\r\n\t\t\t\t\t\t} else if (depthTexture.type === UnsignedIntType) {\r\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\r\n\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\r\n\t\t\t} else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\r\n\t\t\t\tif (isMultisample) {\r\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\r\n\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\r\n\t\t\t} else {\r\n\t\t\t\t// Use the first texture for MRT so far\r\n\t\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[0] : renderTarget.texture;\r\n\t\t\t\tconst glFormat = utils.convert(texture.format);\r\n\t\t\t\tconst glType = utils.convert(texture.type);\r\n\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\r\n\r\n\t\t\t\tif (isMultisample) {\r\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\r\n\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\r\n\t\t} // Setup resources for a Depth Texture for a FBO (needs an extension)\r\n\r\n\r\n\t\tfunction setupDepthTexture(framebuffer, renderTarget) {\r\n\t\t\tconst isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\r\n\t\t\tif (isCube) throw new Error('Depth Texture with cube render targets is not supported');\r\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\r\n\t\t\tif (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\r\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\r\n\t\t\t} // upload an empty depth texture with framebuffer size\r\n\r\n\r\n\t\t\tif (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\r\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\r\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\r\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tsetTexture2D(renderTarget.depthTexture, 0);\r\n\r\n\t\t\tconst webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\r\n\r\n\t\t\tif (renderTarget.depthTexture.format === DepthFormat) {\r\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\r\n\t\t\t} else if (renderTarget.depthTexture.format === DepthStencilFormat) {\r\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Unknown depthTexture format');\r\n\t\t\t}\r\n\t\t} // Setup GL resources for a non-texture depth buffer\r\n\r\n\r\n\t\tfunction setupDepthRenderbuffer(renderTarget) {\r\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\r\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\r\n\r\n\t\t\tif (renderTarget.depthTexture) {\r\n\t\t\t\tif (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\r\n\t\t\t\tsetupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\r\n\t\t\t} else {\r\n\t\t\t\tif (isCube) {\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\r\n\r\n\t\t\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\r\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\r\n\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\r\n\t\t} // Set up GL resources for the render target\r\n\r\n\r\n\t\tfunction setupRenderTarget(renderTarget) {\r\n\t\t\tconst texture = renderTarget.texture;\r\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\t\t\trenderTarget.addEventListener('dispose', onRenderTargetDispose);\r\n\r\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets !== true) {\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\t\t\t\tinfo.memory.textures++;\r\n\t\t\t}\r\n\r\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\r\n\t\t\tconst isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;\r\n\t\t\tconst isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\r\n\t\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\r\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2; // Handles WebGL2 RGBFormat fallback - #18858\r\n\r\n\t\t\tif (isWebGL2 && texture.format === RGBFormat && (texture.type === FloatType || texture.type === HalfFloatType)) {\r\n\t\t\t\ttexture.format = RGBAFormat;\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');\r\n\t\t\t} // Setup framebuffer\r\n\r\n\r\n\t\t\tif (isCube) {\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif (isMultipleRenderTargets) {\r\n\t\t\t\t\tif (capabilities.drawBuffers) {\r\n\t\t\t\t\t\tconst textures = renderTarget.texture;\r\n\r\n\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst attachmentProperties = properties.get(textures[i]);\r\n\r\n\t\t\t\t\t\t\tif (attachmentProperties.__webglTexture === undefined) {\r\n\t\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\r\n\t\t\t\t\t\t\t\tinfo.memory.textures++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (isMultisample) {\r\n\t\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\r\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\r\n\r\n\t\t\t\t\t\tconst glFormat = utils.convert(texture.format);\r\n\t\t\t\t\t\tconst glType = utils.convert(texture.type);\r\n\t\t\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\r\n\t\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\r\n\r\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\r\n\r\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\r\n\r\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\r\n\r\n\t\t\t\t\t\tif (renderTarget.depthBuffer) {\r\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} // Setup color buffer\r\n\r\n\r\n\t\t\tif (isCube) {\r\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\r\n\t\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\r\n\r\n\t\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, renderTarget.width, renderTarget.height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.unbindTexture();\r\n\t\t\t} else if (isMultipleRenderTargets) {\r\n\t\t\t\tconst textures = renderTarget.texture;\r\n\r\n\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\r\n\t\t\t\t\tconst attachment = textures[i];\r\n\t\t\t\t\tconst attachmentProperties = properties.get(attachment);\r\n\t\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, attachmentProperties.__webglTexture);\r\n\t\t\t\t\tsetTextureParameters(_gl.TEXTURE_2D, attachment, supportsMips);\r\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D);\r\n\r\n\t\t\t\t\tif (textureNeedsGenerateMipmaps(attachment, supportsMips)) {\r\n\t\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_2D, attachment, renderTarget.width, renderTarget.height);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.unbindTexture();\r\n\t\t\t} else {\r\n\t\t\t\tlet glTextureType = _gl.TEXTURE_2D;\r\n\r\n\t\t\t\tif (isRenderTarget3D) {\r\n\t\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\r\n\t\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\r\n\t\t\t\t\t\tglTextureType = isTexture3D ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture(glTextureType, textureProperties.__webglTexture);\r\n\t\t\t\tsetTextureParameters(glTextureType, texture, supportsMips);\r\n\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType);\r\n\r\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n\t\t\t\t\tgenerateMipmap(glTextureType, texture, renderTarget.width, renderTarget.height, renderTarget.depth);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.unbindTexture();\r\n\t\t\t} // Setup depth and stencil buffers\r\n\r\n\r\n\t\t\tif (renderTarget.depthBuffer) {\r\n\t\t\t\tsetupDepthRenderbuffer(renderTarget);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction updateRenderTargetMipmap(renderTarget) {\r\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\r\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];\r\n\r\n\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\r\n\t\t\t\tconst texture = textures[i];\r\n\r\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n\t\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\r\n\r\n\t\t\t\t\tconst webglTexture = properties.get(texture).__webglTexture;\r\n\r\n\t\t\t\t\tstate.bindTexture(target, webglTexture);\r\n\t\t\t\t\tgenerateMipmap(target, texture, renderTarget.width, renderTarget.height);\r\n\t\t\t\t\tstate.unbindTexture();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction updateMultisampleRenderTarget(renderTarget) {\r\n\t\t\tif (renderTarget.isWebGLMultisampleRenderTarget) {\r\n\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\tconst width = renderTarget.width;\r\n\t\t\t\t\tconst height = renderTarget.height;\r\n\t\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\r\n\t\t\t\t\tif (renderTarget.depthBuffer) mask |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\t\t\tif (renderTarget.stencilBuffer) mask |= _gl.STENCIL_BUFFER_BIT;\r\n\t\t\t\t\tconst renderTargetProperties = properties.get(renderTarget);\r\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\r\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\r\n\r\n\t\t\t\t\t_gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST);\r\n\r\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, null);\r\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getRenderTargetSamples(renderTarget) {\r\n\t\t\treturn isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ? Math.min(maxSamples, renderTarget.samples) : 0;\r\n\t\t}\r\n\r\n\t\tfunction updateVideoTexture(texture) {\r\n\t\t\tconst frame = info.render.frame; // Check the last frame we updated the VideoTexture\r\n\r\n\t\t\tif (_videoTextures.get(texture) !== frame) {\r\n\t\t\t\t_videoTextures.set(texture, frame);\r\n\r\n\t\t\t\ttexture.update();\r\n\t\t\t}\r\n\t\t} // backwards compatibility\r\n\r\n\r\n\t\tlet warnedTexture2D = false;\r\n\t\tlet warnedTextureCube = false;\r\n\r\n\t\tfunction safeSetTexture2D(texture, slot) {\r\n\t\t\tif (texture && texture.isWebGLRenderTarget) {\r\n\t\t\t\tif (warnedTexture2D === false) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');\r\n\t\t\t\t\twarnedTexture2D = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture = texture.texture;\r\n\t\t\t}\r\n\r\n\t\t\tsetTexture2D(texture, slot);\r\n\t\t}\r\n\r\n\t\tfunction safeSetTextureCube(texture, slot) {\r\n\t\t\tif (texture && texture.isWebGLCubeRenderTarget) {\r\n\t\t\t\tif (warnedTextureCube === false) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');\r\n\t\t\t\t\twarnedTextureCube = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture = texture.texture;\r\n\t\t\t}\r\n\r\n\t\t\tsetTextureCube(texture, slot);\r\n\t\t} //\r\n\r\n\r\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\r\n\t\tthis.resetTextureUnits = resetTextureUnits;\r\n\t\tthis.setTexture2D = setTexture2D;\r\n\t\tthis.setTexture2DArray = setTexture2DArray;\r\n\t\tthis.setTexture3D = setTexture3D;\r\n\t\tthis.setTextureCube = setTextureCube;\r\n\t\tthis.setupRenderTarget = setupRenderTarget;\r\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\r\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\r\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\r\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\r\n\t}\r\n\r\n\tfunction WebGLUtils(gl, extensions, capabilities) {\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\r\n\t\tfunction convert(p) {\r\n\t\t\tlet extension;\r\n\t\t\tif (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\r\n\t\t\tif (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\r\n\t\t\tif (p === ByteType) return gl.BYTE;\r\n\t\t\tif (p === ShortType) return gl.SHORT;\r\n\t\t\tif (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\r\n\t\t\tif (p === IntType) return gl.INT;\r\n\t\t\tif (p === UnsignedIntType) return gl.UNSIGNED_INT;\r\n\t\t\tif (p === FloatType) return gl.FLOAT;\r\n\r\n\t\t\tif (p === HalfFloatType) {\r\n\t\t\t\tif (isWebGL2) return gl.HALF_FLOAT;\r\n\t\t\t\textension = extensions.get('OES_texture_half_float');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === AlphaFormat) return gl.ALPHA;\r\n\t\t\tif (p === RGBFormat) return gl.RGB;\r\n\t\t\tif (p === RGBAFormat) return gl.RGBA;\r\n\t\t\tif (p === LuminanceFormat) return gl.LUMINANCE;\r\n\t\t\tif (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\r\n\t\t\tif (p === DepthFormat) return gl.DEPTH_COMPONENT;\r\n\t\t\tif (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\r\n\t\t\tif (p === RedFormat) return gl.RED; // WebGL2 formats.\r\n\r\n\t\t\tif (p === RedIntegerFormat) return gl.RED_INTEGER;\r\n\t\t\tif (p === RGFormat) return gl.RG;\r\n\t\t\tif (p === RGIntegerFormat) return gl.RG_INTEGER;\r\n\t\t\tif (p === RGBIntegerFormat) return gl.RGB_INTEGER;\r\n\t\t\tif (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\r\n\r\n\t\t\tif (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\r\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_s3tc');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\tif (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\t\tif (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\r\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_pvrtc');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\tif (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\t\tif (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\t\tif (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\t\tif (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === RGB_ETC1_Format) {\r\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc1');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\r\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\tif (p === RGB_ETC2_Format) return extension.COMPRESSED_RGB8_ETC2;\r\n\t\t\t\t\tif (p === RGBA_ETC2_EAC_Format) return extension.COMPRESSED_RGBA8_ETC2_EAC;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format || p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format || p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format || p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format || p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format || p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format) {\r\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_astc');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\t// TODO Complete?\r\n\t\t\t\t\treturn p;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === RGBA_BPTC_Format) {\r\n\t\t\t\textension = extensions.get('EXT_texture_compression_bptc');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\t// TODO Complete?\r\n\t\t\t\t\treturn p;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === UnsignedInt248Type) {\r\n\t\t\t\tif (isWebGL2) return gl.UNSIGNED_INT_24_8;\r\n\t\t\t\textension = extensions.get('WEBGL_depth_texture');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tconvert: convert\r\n\t\t};\r\n\t}\r\n\r\n\tclass ArrayCamera extends PerspectiveCamera {\r\n\t\tconstructor(array = []) {\r\n\t\t\tsuper();\r\n\t\t\tthis.cameras = array;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tArrayCamera.prototype.isArrayCamera = true;\r\n\r\n\tclass Group extends Object3D {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Group';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tGroup.prototype.isGroup = true;\r\n\r\n\tconst _moveEvent = {\r\n\t\ttype: 'move'\r\n\t};\r\n\r\n\tclass WebXRController {\r\n\t\tconstructor() {\r\n\t\t\tthis._targetRay = null;\r\n\t\t\tthis._grip = null;\r\n\t\t\tthis._hand = null;\r\n\t\t}\r\n\r\n\t\tgetHandSpace() {\r\n\t\t\tif (this._hand === null) {\r\n\t\t\t\tthis._hand = new Group();\r\n\t\t\t\tthis._hand.matrixAutoUpdate = false;\r\n\t\t\t\tthis._hand.visible = false;\r\n\t\t\t\tthis._hand.joints = {};\r\n\t\t\t\tthis._hand.inputState = {\r\n\t\t\t\t\tpinching: false\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn this._hand;\r\n\t\t}\r\n\r\n\t\tgetTargetRaySpace() {\r\n\t\t\tif (this._targetRay === null) {\r\n\t\t\t\tthis._targetRay = new Group();\r\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\r\n\t\t\t\tthis._targetRay.visible = false;\r\n\t\t\t\tthis._targetRay.hasLinearVelocity = false;\r\n\t\t\t\tthis._targetRay.linearVelocity = new Vector3();\r\n\t\t\t\tthis._targetRay.hasAngularVelocity = false;\r\n\t\t\t\tthis._targetRay.angularVelocity = new Vector3();\r\n\t\t\t}\r\n\r\n\t\t\treturn this._targetRay;\r\n\t\t}\r\n\r\n\t\tgetGripSpace() {\r\n\t\t\tif (this._grip === null) {\r\n\t\t\t\tthis._grip = new Group();\r\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\r\n\t\t\t\tthis._grip.visible = false;\r\n\t\t\t\tthis._grip.hasLinearVelocity = false;\r\n\t\t\t\tthis._grip.linearVelocity = new Vector3();\r\n\t\t\t\tthis._grip.hasAngularVelocity = false;\r\n\t\t\t\tthis._grip.angularVelocity = new Vector3();\r\n\t\t\t}\r\n\r\n\t\t\treturn this._grip;\r\n\t\t}\r\n\r\n\t\tdispatchEvent(event) {\r\n\t\t\tif (this._targetRay !== null) {\r\n\t\t\t\tthis._targetRay.dispatchEvent(event);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._grip !== null) {\r\n\t\t\t\tthis._grip.dispatchEvent(event);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._hand !== null) {\r\n\t\t\t\tthis._hand.dispatchEvent(event);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdisconnect(inputSource) {\r\n\t\t\tthis.dispatchEvent({\r\n\t\t\t\ttype: 'disconnected',\r\n\t\t\t\tdata: inputSource\r\n\t\t\t});\r\n\r\n\t\t\tif (this._targetRay !== null) {\r\n\t\t\t\tthis._targetRay.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._grip !== null) {\r\n\t\t\t\tthis._grip.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._hand !== null) {\r\n\t\t\t\tthis._hand.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tupdate(inputSource, frame, referenceSpace) {\r\n\t\t\tlet inputPose = null;\r\n\t\t\tlet gripPose = null;\r\n\t\t\tlet handPose = null;\r\n\t\t\tconst targetRay = this._targetRay;\r\n\t\t\tconst grip = this._grip;\r\n\t\t\tconst hand = this._hand;\r\n\r\n\t\t\tif (inputSource && frame.session.visibilityState !== 'visible-blurred') {\r\n\t\t\t\tif (targetRay !== null) {\r\n\t\t\t\t\tinputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\r\n\r\n\t\t\t\t\tif (inputPose !== null) {\r\n\t\t\t\t\t\ttargetRay.matrix.fromArray(inputPose.transform.matrix);\r\n\t\t\t\t\t\ttargetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\r\n\r\n\t\t\t\t\t\tif (inputPose.linearVelocity) {\r\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\r\n\t\t\t\t\t\t\ttargetRay.linearVelocity.copy(inputPose.linearVelocity);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (inputPose.angularVelocity) {\r\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\r\n\t\t\t\t\t\t\ttargetRay.angularVelocity.copy(inputPose.angularVelocity);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.dispatchEvent(_moveEvent);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (hand && inputSource.hand) {\r\n\t\t\t\t\thandPose = true;\r\n\r\n\t\t\t\t\tfor (const inputjoint of inputSource.hand.values()) {\r\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\r\n\t\t\t\t\t\tconst jointPose = frame.getJointPose(inputjoint, referenceSpace);\r\n\r\n\t\t\t\t\t\tif (hand.joints[inputjoint.jointName] === undefined) {\r\n\t\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\r\n\t\t\t\t\t\t\tconst joint = new Group();\r\n\t\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\r\n\t\t\t\t\t\t\tjoint.visible = false;\r\n\t\t\t\t\t\t\thand.joints[inputjoint.jointName] = joint; // ??\r\n\r\n\t\t\t\t\t\t\thand.add(joint);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst joint = hand.joints[inputjoint.jointName];\r\n\r\n\t\t\t\t\t\tif (jointPose !== null) {\r\n\t\t\t\t\t\t\tjoint.matrix.fromArray(jointPose.transform.matrix);\r\n\t\t\t\t\t\t\tjoint.matrix.decompose(joint.position, joint.rotation, joint.scale);\r\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\r\n\t\t\t\t\t} // Custom events\r\n\t\t\t\t\t// Check pinchz\r\n\r\n\r\n\t\t\t\t\tconst indexTip = hand.joints['index-finger-tip'];\r\n\t\t\t\t\tconst thumbTip = hand.joints['thumb-tip'];\r\n\t\t\t\t\tconst distance = indexTip.position.distanceTo(thumbTip.position);\r\n\t\t\t\t\tconst distanceToPinch = 0.02;\r\n\t\t\t\t\tconst threshold = 0.005;\r\n\r\n\t\t\t\t\tif (hand.inputState.pinching && distance > distanceToPinch + threshold) {\r\n\t\t\t\t\t\thand.inputState.pinching = false;\r\n\t\t\t\t\t\tthis.dispatchEvent({\r\n\t\t\t\t\t\t\ttype: 'pinchend',\r\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\r\n\t\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\r\n\t\t\t\t\t\thand.inputState.pinching = true;\r\n\t\t\t\t\t\tthis.dispatchEvent({\r\n\t\t\t\t\t\t\ttype: 'pinchstart',\r\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\r\n\t\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (grip !== null && inputSource.gripSpace) {\r\n\t\t\t\t\t\tgripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\r\n\r\n\t\t\t\t\t\tif (gripPose !== null) {\r\n\t\t\t\t\t\t\tgrip.matrix.fromArray(gripPose.transform.matrix);\r\n\t\t\t\t\t\t\tgrip.matrix.decompose(grip.position, grip.rotation, grip.scale);\r\n\r\n\t\t\t\t\t\t\tif (gripPose.linearVelocity) {\r\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\r\n\t\t\t\t\t\t\t\tgrip.linearVelocity.copy(gripPose.linearVelocity);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (gripPose.angularVelocity) {\r\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\r\n\t\t\t\t\t\t\t\tgrip.angularVelocity.copy(gripPose.angularVelocity);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (targetRay !== null) {\r\n\t\t\t\ttargetRay.visible = inputPose !== null;\r\n\t\t\t}\r\n\r\n\t\t\tif (grip !== null) {\r\n\t\t\t\tgrip.visible = gripPose !== null;\r\n\t\t\t}\r\n\r\n\t\t\tif (hand !== null) {\r\n\t\t\t\thand.visible = handPose !== null;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass WebXRManager extends EventDispatcher {\r\n\t\tconstructor(renderer, gl) {\r\n\t\t\tsuper();\r\n\t\t\tconst scope = this;\r\n\t\t\tconst state = renderer.state;\r\n\t\t\tlet session = null;\r\n\t\t\tlet framebufferScaleFactor = 1.0;\r\n\t\t\tlet referenceSpace = null;\r\n\t\t\tlet referenceSpaceType = 'local-floor';\r\n\t\t\tlet pose = null;\r\n\t\t\tlet glBinding = null;\r\n\t\t\tlet glFramebuffer = null;\r\n\t\t\tlet glProjLayer = null;\r\n\t\t\tlet glBaseLayer = null;\r\n\t\t\tlet isMultisample = false;\r\n\t\t\tlet glMultisampledFramebuffer = null;\r\n\t\t\tlet glColorRenderbuffer = null;\r\n\t\t\tlet glDepthRenderbuffer = null;\r\n\t\t\tlet xrFrame = null;\r\n\t\t\tlet depthStyle = null;\r\n\t\t\tlet clearStyle = null;\r\n\t\t\tconst msaartcSupported = renderer.extensions.has('EXT_multisampled_render_to_texture');\r\n\t\t\tlet msaaExt = null;\r\n\t\t\tconst controllers = [];\r\n\t\t\tconst inputSourcesMap = new Map(); //\r\n\r\n\t\t\tconst cameraL = new PerspectiveCamera();\r\n\t\t\tcameraL.layers.enable(1);\r\n\t\t\tcameraL.viewport = new Vector4();\r\n\t\t\tconst cameraR = new PerspectiveCamera();\r\n\t\t\tcameraR.layers.enable(2);\r\n\t\t\tcameraR.viewport = new Vector4();\r\n\t\t\tconst cameras = [cameraL, cameraR];\r\n\t\t\tconst cameraVR = new ArrayCamera();\r\n\t\t\tcameraVR.layers.enable(1);\r\n\t\t\tcameraVR.layers.enable(2);\r\n\t\t\tlet _currentDepthNear = null;\r\n\t\t\tlet _currentDepthFar = null; //\r\n\r\n\t\t\tthis.cameraAutoUpdate = true;\r\n\t\t\tthis.enabled = false;\r\n\t\t\tthis.isPresenting = false;\r\n\r\n\t\t\tthis.getController = function (index) {\r\n\t\t\t\tlet controller = controllers[index];\r\n\r\n\t\t\t\tif (controller === undefined) {\r\n\t\t\t\t\tcontroller = new WebXRController();\r\n\t\t\t\t\tcontrollers[index] = controller;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn controller.getTargetRaySpace();\r\n\t\t\t};\r\n\r\n\t\t\tthis.getControllerGrip = function (index) {\r\n\t\t\t\tlet controller = controllers[index];\r\n\r\n\t\t\t\tif (controller === undefined) {\r\n\t\t\t\t\tcontroller = new WebXRController();\r\n\t\t\t\t\tcontrollers[index] = controller;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn controller.getGripSpace();\r\n\t\t\t};\r\n\r\n\t\t\tthis.getHand = function (index) {\r\n\t\t\t\tlet controller = controllers[index];\r\n\r\n\t\t\t\tif (controller === undefined) {\r\n\t\t\t\t\tcontroller = new WebXRController();\r\n\t\t\t\t\tcontrollers[index] = controller;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn controller.getHandSpace();\r\n\t\t\t}; //\r\n\r\n\r\n\t\t\tfunction onSessionEvent(event) {\r\n\t\t\t\tconst controller = inputSourcesMap.get(event.inputSource);\r\n\r\n\t\t\t\tif (controller) {\r\n\t\t\t\t\tcontroller.dispatchEvent({\r\n\t\t\t\t\t\ttype: event.type,\r\n\t\t\t\t\t\tdata: event.inputSource\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnd() {\r\n\t\t\t\tinputSourcesMap.forEach(function (controller, inputSource) {\r\n\t\t\t\t\tcontroller.disconnect(inputSource);\r\n\t\t\t\t});\r\n\t\t\t\tinputSourcesMap.clear();\r\n\t\t\t\t_currentDepthNear = null;\r\n\t\t\t\t_currentDepthFar = null; // restore framebuffer/rendering state\r\n\r\n\t\t\t\tstate.bindXRFramebuffer(null);\r\n\t\t\t\trenderer.setRenderTarget(renderer.getRenderTarget());\r\n\t\t\t\tif (glFramebuffer) gl.deleteFramebuffer(glFramebuffer);\r\n\t\t\t\tif (glMultisampledFramebuffer) gl.deleteFramebuffer(glMultisampledFramebuffer);\r\n\t\t\t\tif (glColorRenderbuffer) gl.deleteRenderbuffer(glColorRenderbuffer);\r\n\t\t\t\tif (glDepthRenderbuffer) gl.deleteRenderbuffer(glDepthRenderbuffer);\r\n\t\t\t\tglFramebuffer = null;\r\n\t\t\t\tglMultisampledFramebuffer = null;\r\n\t\t\t\tglColorRenderbuffer = null;\r\n\t\t\t\tglDepthRenderbuffer = null;\r\n\t\t\t\tglBaseLayer = null;\r\n\t\t\t\tglProjLayer = null;\r\n\t\t\t\tglBinding = null;\r\n\t\t\t\tsession = null; //\r\n\r\n\t\t\t\tanimation.stop();\r\n\t\t\t\tscope.isPresenting = false;\r\n\t\t\t\tscope.dispatchEvent({\r\n\t\t\t\t\ttype: 'sessionend'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.setFramebufferScaleFactor = function (value) {\r\n\t\t\t\tframebufferScaleFactor = value;\r\n\r\n\t\t\t\tif (scope.isPresenting === true) {\r\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.setReferenceSpaceType = function (value) {\r\n\t\t\t\treferenceSpaceType = value;\r\n\r\n\t\t\t\tif (scope.isPresenting === true) {\r\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.getReferenceSpace = function () {\r\n\t\t\t\treturn referenceSpace;\r\n\t\t\t};\r\n\r\n\t\t\tthis.getBaseLayer = function () {\r\n\t\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\r\n\t\t\t};\r\n\r\n\t\t\tthis.getBinding = function () {\r\n\t\t\t\treturn glBinding;\r\n\t\t\t};\r\n\r\n\t\t\tthis.getFrame = function () {\r\n\t\t\t\treturn xrFrame;\r\n\t\t\t};\r\n\r\n\t\t\tthis.getSession = function () {\r\n\t\t\t\treturn session;\r\n\t\t\t};\r\n\r\n\t\t\tthis.setSession = async function (value) {\r\n\t\t\t\tsession = value;\r\n\r\n\t\t\t\tif (session !== null) {\r\n\t\t\t\t\tsession.addEventListener('select', onSessionEvent);\r\n\t\t\t\t\tsession.addEventListener('selectstart', onSessionEvent);\r\n\t\t\t\t\tsession.addEventListener('selectend', onSessionEvent);\r\n\t\t\t\t\tsession.addEventListener('squeeze', onSessionEvent);\r\n\t\t\t\t\tsession.addEventListener('squeezestart', onSessionEvent);\r\n\t\t\t\t\tsession.addEventListener('squeezeend', onSessionEvent);\r\n\t\t\t\t\tsession.addEventListener('end', onSessionEnd);\r\n\t\t\t\t\tsession.addEventListener('inputsourceschange', onInputSourcesChange);\r\n\t\t\t\t\tconst attributes = gl.getContextAttributes();\r\n\r\n\t\t\t\t\tif (attributes.xrCompatible !== true) {\r\n\t\t\t\t\t\tawait gl.makeXRCompatible();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (session.renderState.layers === undefined) {\r\n\t\t\t\t\t\tconst layerInit = {\r\n\t\t\t\t\t\t\tantialias: attributes.antialias,\r\n\t\t\t\t\t\t\talpha: attributes.alpha,\r\n\t\t\t\t\t\t\tdepth: attributes.depth,\r\n\t\t\t\t\t\t\tstencil: attributes.stencil,\r\n\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tglBaseLayer = new XRWebGLLayer(session, gl, layerInit);\r\n\t\t\t\t\t\tsession.updateRenderState({\r\n\t\t\t\t\t\t\tbaseLayer: glBaseLayer\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (gl instanceof WebGLRenderingContext) {\r\n\t\t\t\t\t\t// Use old style webgl layer because we can't use MSAA\r\n\t\t\t\t\t\t// WebGL2 support.\r\n\t\t\t\t\t\tconst layerInit = {\r\n\t\t\t\t\t\t\tantialias: true,\r\n\t\t\t\t\t\t\talpha: attributes.alpha,\r\n\t\t\t\t\t\t\tdepth: attributes.depth,\r\n\t\t\t\t\t\t\tstencil: attributes.stencil,\r\n\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tglBaseLayer = new XRWebGLLayer(session, gl, layerInit);\r\n\t\t\t\t\t\tsession.updateRenderState({\r\n\t\t\t\t\t\t\tlayers: [glBaseLayer]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tisMultisample = attributes.antialias;\r\n\t\t\t\t\t\tlet depthFormat = null;\r\n\r\n\t\t\t\t\t\tif (attributes.depth) {\r\n\t\t\t\t\t\t\tclearStyle = gl.DEPTH_BUFFER_BIT;\r\n\t\t\t\t\t\t\tif (attributes.stencil) clearStyle |= gl.STENCIL_BUFFER_BIT;\r\n\t\t\t\t\t\t\tdepthStyle = attributes.stencil ? gl.DEPTH_STENCIL_ATTACHMENT : gl.DEPTH_ATTACHMENT;\r\n\t\t\t\t\t\t\tdepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst projectionlayerInit = {\r\n\t\t\t\t\t\t\tcolorFormat: attributes.alpha ? gl.RGBA8 : gl.RGB8,\r\n\t\t\t\t\t\t\tdepthFormat: depthFormat,\r\n\t\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tglBinding = new XRWebGLBinding(session, gl);\r\n\t\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\r\n\t\t\t\t\t\tglFramebuffer = gl.createFramebuffer();\r\n\t\t\t\t\t\tsession.updateRenderState({\r\n\t\t\t\t\t\t\tlayers: [glProjLayer]\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (isMultisample && msaartcSupported) {\r\n\t\t\t\t\t\t\tmsaaExt = renderer.extensions.get('EXT_multisampled_render_to_texture');\r\n\t\t\t\t\t\t} else if (isMultisample) {\r\n\t\t\t\t\t\t\tglMultisampledFramebuffer = gl.createFramebuffer();\r\n\t\t\t\t\t\t\tglColorRenderbuffer = gl.createRenderbuffer();\r\n\t\t\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, glColorRenderbuffer);\r\n\t\t\t\t\t\t\tgl.renderbufferStorageMultisample(gl.RENDERBUFFER, 4, gl.RGBA8, glProjLayer.textureWidth, glProjLayer.textureHeight);\r\n\t\t\t\t\t\t\tstate.bindFramebuffer(gl.FRAMEBUFFER, glMultisampledFramebuffer);\r\n\t\t\t\t\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, glColorRenderbuffer);\r\n\t\t\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n\t\t\t\t\t\t\tif (depthFormat !== null) {\r\n\t\t\t\t\t\t\t\tglDepthRenderbuffer = gl.createRenderbuffer();\r\n\t\t\t\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, glDepthRenderbuffer);\r\n\t\t\t\t\t\t\t\tgl.renderbufferStorageMultisample(gl.RENDERBUFFER, 4, depthFormat, glProjLayer.textureWidth, glProjLayer.textureHeight);\r\n\t\t\t\t\t\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthStyle, gl.RENDERBUFFER, glDepthRenderbuffer);\r\n\t\t\t\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tstate.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treferenceSpace = await session.requestReferenceSpace(referenceSpaceType);\r\n\t\t\t\t\tanimation.setContext(session);\r\n\t\t\t\t\tanimation.start();\r\n\t\t\t\t\tscope.isPresenting = true;\r\n\t\t\t\t\tscope.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'sessionstart'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tfunction onInputSourcesChange(event) {\r\n\t\t\t\tconst inputSources = session.inputSources; // Assign inputSources to available controllers\r\n\r\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\r\n\t\t\t\t\tinputSourcesMap.set(inputSources[i], controllers[i]);\r\n\t\t\t\t} // Notify disconnected\r\n\r\n\r\n\t\t\t\tfor (let i = 0; i < event.removed.length; i++) {\r\n\t\t\t\t\tconst inputSource = event.removed[i];\r\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\r\n\r\n\t\t\t\t\tif (controller) {\r\n\t\t\t\t\t\tcontroller.dispatchEvent({\r\n\t\t\t\t\t\t\ttype: 'disconnected',\r\n\t\t\t\t\t\t\tdata: inputSource\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tinputSourcesMap.delete(inputSource);\r\n\t\t\t\t\t}\r\n\t\t\t\t} // Notify connected\r\n\r\n\r\n\t\t\t\tfor (let i = 0; i < event.added.length; i++) {\r\n\t\t\t\t\tconst inputSource = event.added[i];\r\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\r\n\r\n\t\t\t\t\tif (controller) {\r\n\t\t\t\t\t\tcontroller.dispatchEvent({\r\n\t\t\t\t\t\t\ttype: 'connected',\r\n\t\t\t\t\t\t\tdata: inputSource\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tconst cameraLPos = new Vector3();\r\n\t\t\tconst cameraRPos = new Vector3();\r\n\t\t\t/**\r\n\t\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\r\n\t\t\t * the cameras' projection and world matrices have already been set.\r\n\t\t\t * And that near and far planes are identical for both cameras.\r\n\t\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\r\n\t\t\t */\r\n\r\n\t\t\tfunction setProjectionFromUnion(camera, cameraL, cameraR) {\r\n\t\t\t\tcameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\r\n\t\t\t\tcameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\r\n\t\t\t\tconst ipd = cameraLPos.distanceTo(cameraRPos);\r\n\t\t\t\tconst projL = cameraL.projectionMatrix.elements;\r\n\t\t\t\tconst projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\r\n\t\t\t\t// most likely identical top and bottom frustum extents.\r\n\t\t\t\t// Use the left camera for these values.\r\n\r\n\t\t\t\tconst near = projL[14] / (projL[10] - 1);\r\n\t\t\t\tconst far = projL[14] / (projL[10] + 1);\r\n\t\t\t\tconst topFov = (projL[9] + 1) / projL[5];\r\n\t\t\t\tconst bottomFov = (projL[9] - 1) / projL[5];\r\n\t\t\t\tconst leftFov = (projL[8] - 1) / projL[0];\r\n\t\t\t\tconst rightFov = (projR[8] + 1) / projR[0];\r\n\t\t\t\tconst left = near * leftFov;\r\n\t\t\t\tconst right = near * rightFov; // Calculate the new camera's position offset from the\r\n\t\t\t\t// left camera. xOffset should be roughly half `ipd`.\r\n\r\n\t\t\t\tconst zOffset = ipd / (-leftFov + rightFov);\r\n\t\t\t\tconst xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\r\n\r\n\t\t\t\tcameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\r\n\t\t\t\tcamera.translateX(xOffset);\r\n\t\t\t\tcamera.translateZ(zOffset);\r\n\t\t\t\tcamera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\r\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\r\n\t\t\t\t// the values so that the near plane's position does not change in world space,\r\n\t\t\t\t// although must now be relative to the new union camera.\r\n\r\n\t\t\t\tconst near2 = near + zOffset;\r\n\t\t\t\tconst far2 = far + zOffset;\r\n\t\t\t\tconst left2 = left - xOffset;\r\n\t\t\t\tconst right2 = right + (ipd - xOffset);\r\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\r\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\r\n\t\t\t\tcamera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\r\n\t\t\t}\r\n\r\n\t\t\tfunction updateCamera(camera, parent) {\r\n\t\t\t\tif (parent === null) {\r\n\t\t\t\t\tcamera.matrixWorld.copy(camera.matrix);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcamera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert();\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateCamera = function (camera) {\r\n\t\t\t\tif (session === null) return;\r\n\t\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\r\n\t\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\r\n\r\n\t\t\t\tif (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\r\n\t\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\r\n\t\t\t\t\tsession.updateRenderState({\r\n\t\t\t\t\t\tdepthNear: cameraVR.near,\r\n\t\t\t\t\t\tdepthFar: cameraVR.far\r\n\t\t\t\t\t});\r\n\t\t\t\t\t_currentDepthNear = cameraVR.near;\r\n\t\t\t\t\t_currentDepthFar = cameraVR.far;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst parent = camera.parent;\r\n\t\t\t\tconst cameras = cameraVR.cameras;\r\n\t\t\t\tupdateCamera(cameraVR, parent);\r\n\r\n\t\t\t\tfor (let i = 0; i < cameras.length; i++) {\r\n\t\t\t\t\tupdateCamera(cameras[i], parent);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale); // update user camera and its children\r\n\r\n\t\t\t\tcamera.position.copy(cameraVR.position);\r\n\t\t\t\tcamera.quaternion.copy(cameraVR.quaternion);\r\n\t\t\t\tcamera.scale.copy(cameraVR.scale);\r\n\t\t\t\tcamera.matrix.copy(cameraVR.matrix);\r\n\t\t\t\tcamera.matrixWorld.copy(cameraVR.matrixWorld);\r\n\t\t\t\tconst children = camera.children;\r\n\r\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\t\tchildren[i].updateMatrixWorld(true);\r\n\t\t\t\t} // update projection matrix for proper view frustum culling\r\n\r\n\r\n\t\t\t\tif (cameras.length === 2) {\r\n\t\t\t\t\tsetProjectionFromUnion(cameraVR, cameraL, cameraR);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// assume single camera setup (AR)\r\n\t\t\t\t\tcameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.getCamera = function () {\r\n\t\t\t\treturn cameraVR;\r\n\t\t\t};\r\n\r\n\t\t\tthis.getFoveation = function () {\r\n\t\t\t\tif (glProjLayer !== null) {\r\n\t\t\t\t\treturn glProjLayer.fixedFoveation;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (glBaseLayer !== null) {\r\n\t\t\t\t\treturn glBaseLayer.fixedFoveation;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn undefined;\r\n\t\t\t};\r\n\r\n\t\t\tthis.setFoveation = function (foveation) {\r\n\t\t\t\t// 0 = no foveation = full resolution\r\n\t\t\t\t// 1 = maximum foveation = the edges render at lower resolution\r\n\t\t\t\tif (glProjLayer !== null) {\r\n\t\t\t\t\tglProjLayer.fixedFoveation = foveation;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined) {\r\n\t\t\t\t\tglBaseLayer.fixedFoveation = foveation;\r\n\t\t\t\t}\r\n\t\t\t}; // Animation Loop\r\n\r\n\r\n\t\t\tlet onAnimationFrameCallback = null;\r\n\r\n\t\t\tfunction onAnimationFrame(time, frame) {\r\n\t\t\t\tpose = frame.getViewerPose(referenceSpace);\r\n\t\t\t\txrFrame = frame;\r\n\r\n\t\t\t\tif (pose !== null) {\r\n\t\t\t\t\tconst views = pose.views;\r\n\r\n\t\t\t\t\tif (glBaseLayer !== null) {\r\n\t\t\t\t\t\tstate.bindXRFramebuffer(glBaseLayer.framebuffer);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\r\n\r\n\t\t\t\t\tif (views.length !== cameraVR.cameras.length) {\r\n\t\t\t\t\t\tcameraVR.cameras.length = 0;\r\n\t\t\t\t\t\tcameraVRNeedsUpdate = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i = 0; i < views.length; i++) {\r\n\t\t\t\t\t\tconst view = views[i];\r\n\t\t\t\t\t\tlet viewport = null;\r\n\r\n\t\t\t\t\t\tif (glBaseLayer !== null) {\r\n\t\t\t\t\t\t\tviewport = glBaseLayer.getViewport(view);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage(glProjLayer, view);\r\n\t\t\t\t\t\t\tstate.bindXRFramebuffer(glFramebuffer);\r\n\r\n\t\t\t\t\t\t\tif (isMultisample && msaartcSupported) {\r\n\t\t\t\t\t\t\t\tif (glSubImage.depthStencilTexture !== undefined) {\r\n\t\t\t\t\t\t\t\t\tmsaaExt.framebufferTexture2DMultisampleEXT(gl.FRAMEBUFFER, depthStyle, gl.TEXTURE_2D, glSubImage.depthStencilTexture, 0, 4);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tmsaaExt.framebufferTexture2DMultisampleEXT(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glSubImage.colorTexture, 0, 4);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (glSubImage.depthStencilTexture !== undefined) {\r\n\t\t\t\t\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, depthStyle, gl.TEXTURE_2D, glSubImage.depthStencilTexture, 0);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glSubImage.colorTexture, 0);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tviewport = glSubImage.viewport;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst camera = cameras[i];\r\n\t\t\t\t\t\tcamera.matrix.fromArray(view.transform.matrix);\r\n\t\t\t\t\t\tcamera.projectionMatrix.fromArray(view.projectionMatrix);\r\n\t\t\t\t\t\tcamera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\r\n\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\tcameraVR.matrix.copy(camera.matrix);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (cameraVRNeedsUpdate === true) {\r\n\t\t\t\t\t\t\tcameraVR.cameras.push(camera);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isMultisample && !msaartcSupported) {\r\n\t\t\t\t\t\tstate.bindXRFramebuffer(glMultisampledFramebuffer);\r\n\t\t\t\t\t\tif (clearStyle !== null) gl.clear(clearStyle);\r\n\t\t\t\t\t}\r\n\t\t\t\t} //\r\n\r\n\r\n\t\t\t\tconst inputSources = session.inputSources;\r\n\r\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\r\n\t\t\t\t\tconst controller = controllers[i];\r\n\t\t\t\t\tconst inputSource = inputSources[i];\r\n\t\t\t\t\tcontroller.update(inputSource, frame, referenceSpace);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\r\n\r\n\t\t\t\tif (isMultisample && !msaartcSupported) {\r\n\t\t\t\t\tconst width = glProjLayer.textureWidth;\r\n\t\t\t\t\tconst height = glProjLayer.textureHeight;\r\n\t\t\t\t\tstate.bindFramebuffer(gl.READ_FRAMEBUFFER, glMultisampledFramebuffer);\r\n\t\t\t\t\tstate.bindFramebuffer(gl.DRAW_FRAMEBUFFER, glFramebuffer); // Invalidate the depth here to avoid flush of the depth data to main memory.\r\n\r\n\t\t\t\t\tgl.invalidateFramebuffer(gl.READ_FRAMEBUFFER, [depthStyle]);\r\n\t\t\t\t\tgl.invalidateFramebuffer(gl.DRAW_FRAMEBUFFER, [depthStyle]);\r\n\t\t\t\t\tgl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, gl.COLOR_BUFFER_BIT, gl.NEAREST); // Invalidate the MSAA buffer because it's not needed anymore.\r\n\r\n\t\t\t\t\tgl.invalidateFramebuffer(gl.READ_FRAMEBUFFER, [gl.COLOR_ATTACHMENT0]);\r\n\t\t\t\t\tstate.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\r\n\t\t\t\t\tstate.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\r\n\t\t\t\t\tstate.bindFramebuffer(gl.FRAMEBUFFER, glMultisampledFramebuffer);\r\n\t\t\t\t}\r\n\r\n\t\t\t\txrFrame = null;\r\n\t\t\t}\r\n\r\n\t\t\tconst animation = new WebGLAnimation();\r\n\t\t\tanimation.setAnimationLoop(onAnimationFrame);\r\n\r\n\t\t\tthis.setAnimationLoop = function (callback) {\r\n\t\t\t\tonAnimationFrameCallback = callback;\r\n\t\t\t};\r\n\r\n\t\t\tthis.dispose = function () {};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction WebGLMaterials(properties) {\r\n\t\tfunction refreshFogUniforms(uniforms, fog) {\r\n\t\t\tuniforms.fogColor.value.copy(fog.color);\r\n\r\n\t\t\tif (fog.isFog) {\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\t\t\t} else if (fog.isFogExp2) {\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshMaterialUniforms(uniforms, material, pixelRatio, height, transmissionRenderTarget) {\r\n\t\t\tif (material.isMeshBasicMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t} else if (material.isMeshLambertMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsLambert(uniforms, material);\r\n\t\t\t} else if (material.isMeshToonMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsToon(uniforms, material);\r\n\t\t\t} else if (material.isMeshPhongMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsPhong(uniforms, material);\r\n\t\t\t} else if (material.isMeshStandardMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\r\n\t\t\t\tif (material.isMeshPhysicalMaterial) {\r\n\t\t\t\t\trefreshUniformsPhysical(uniforms, material, transmissionRenderTarget);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trefreshUniformsStandard(uniforms, material);\r\n\t\t\t\t}\r\n\t\t\t} else if (material.isMeshMatcapMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsMatcap(uniforms, material);\r\n\t\t\t} else if (material.isMeshDepthMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsDepth(uniforms, material);\r\n\t\t\t} else if (material.isMeshDistanceMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsDistance(uniforms, material);\r\n\t\t\t} else if (material.isMeshNormalMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsNormal(uniforms, material);\r\n\t\t\t} else if (material.isLineBasicMaterial) {\r\n\t\t\t\trefreshUniformsLine(uniforms, material);\r\n\r\n\t\t\t\tif (material.isLineDashedMaterial) {\r\n\t\t\t\t\trefreshUniformsDash(uniforms, material);\r\n\t\t\t\t}\r\n\t\t\t} else if (material.isPointsMaterial) {\r\n\t\t\t\trefreshUniformsPoints(uniforms, material, pixelRatio, height);\r\n\t\t\t} else if (material.isSpriteMaterial) {\r\n\t\t\t\trefreshUniformsSprites(uniforms, material);\r\n\t\t\t} else if (material.isShadowMaterial) {\r\n\t\t\t\tuniforms.color.value.copy(material.color);\r\n\t\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\t} else if (material.isShaderMaterial) {\r\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsCommon(uniforms, material) {\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t\tif (material.color) {\r\n\t\t\t\tuniforms.diffuse.value.copy(material.color);\r\n\t\t\t}\r\n\r\n\t\t\tif (material.emissive) {\r\n\t\t\t\tuniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\r\n\t\t\t}\r\n\r\n\t\t\tif (material.map) {\r\n\t\t\t\tuniforms.map.value = material.map;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.alphaMap) {\r\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.specularMap) {\r\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.alphaTest > 0) {\r\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\r\n\t\t\t}\r\n\r\n\t\t\tconst envMap = properties.get(material).envMap;\r\n\r\n\t\t\tif (envMap) {\r\n\t\t\t\tuniforms.envMap.value = envMap;\r\n\t\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture && envMap.isRenderTargetTexture === false ? -1 : 1;\r\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\t\tuniforms.ior.value = material.ior;\r\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t\t\t\tconst maxMipLevel = properties.get(envMap).__maxMipLevel;\r\n\r\n\t\t\t\tif (maxMipLevel !== undefined) {\r\n\t\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (material.lightMap) {\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.aoMap) {\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\t\t\t} // uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. displacementMap map\r\n\t\t\t// 4. normal map\r\n\t\t\t// 5. bump map\r\n\t\t\t// 6. roughnessMap map\r\n\t\t\t// 7. metalnessMap map\r\n\t\t\t// 8. alphaMap map\r\n\t\t\t// 9. emissiveMap map\r\n\t\t\t// 10. clearcoat map\r\n\t\t\t// 11. clearcoat normal map\r\n\t\t\t// 12. clearcoat roughnessMap map\r\n\t\t\t// 13. specular intensity map\r\n\t\t\t// 14. specular tint map\r\n\t\t\t// 15. transmission map\r\n\t\t\t// 16. thickness map\r\n\r\n\r\n\t\t\tlet uvScaleMap;\r\n\r\n\t\t\tif (material.map) {\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\t\t} else if (material.specularMap) {\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\t\t\t} else if (material.displacementMap) {\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\t\t\t} else if (material.normalMap) {\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\t\t\t} else if (material.bumpMap) {\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\t\t\t} else if (material.roughnessMap) {\r\n\t\t\t\tuvScaleMap = material.roughnessMap;\r\n\t\t\t} else if (material.metalnessMap) {\r\n\t\t\t\tuvScaleMap = material.metalnessMap;\r\n\t\t\t} else if (material.alphaMap) {\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\t\t} else if (material.emissiveMap) {\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\t\t\t} else if (material.clearcoatMap) {\r\n\t\t\t\tuvScaleMap = material.clearcoatMap;\r\n\t\t\t} else if (material.clearcoatNormalMap) {\r\n\t\t\t\tuvScaleMap = material.clearcoatNormalMap;\r\n\t\t\t} else if (material.clearcoatRoughnessMap) {\r\n\t\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\r\n\t\t\t} else if (material.specularIntensityMap) {\r\n\t\t\t\tuvScaleMap = material.specularIntensityMap;\r\n\t\t\t} else if (material.specularTintMap) {\r\n\t\t\t\tuvScaleMap = material.specularTintMap;\r\n\t\t\t} else if (material.transmissionMap) {\r\n\t\t\t\tuvScaleMap = material.transmissionMap;\r\n\t\t\t} else if (material.thicknessMap) {\r\n\t\t\t\tuvScaleMap = material.thicknessMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (uvScaleMap !== undefined) {\r\n\t\t\t\t// backwards compatibility\r\n\t\t\t\tif (uvScaleMap.isWebGLRenderTarget) {\r\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\r\n\t\t\t\t\tuvScaleMap.updateMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\r\n\t\t\t} // uv repeat and offset setting priorities for uv2\r\n\t\t\t// 1. ao map\r\n\t\t\t// 2. light map\r\n\r\n\r\n\t\t\tlet uv2ScaleMap;\r\n\r\n\t\t\tif (material.aoMap) {\r\n\t\t\t\tuv2ScaleMap = material.aoMap;\r\n\t\t\t} else if (material.lightMap) {\r\n\t\t\t\tuv2ScaleMap = material.lightMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (uv2ScaleMap !== undefined) {\r\n\t\t\t\t// backwards compatibility\r\n\t\t\t\tif (uv2ScaleMap.isWebGLRenderTarget) {\r\n\t\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (uv2ScaleMap.matrixAutoUpdate === true) {\r\n\t\t\t\t\tuv2ScaleMap.updateMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsLine(uniforms, material) {\r\n\t\t\tuniforms.diffuse.value.copy(material.color);\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDash(uniforms, material) {\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPoints(uniforms, material, pixelRatio, height) {\r\n\t\t\tuniforms.diffuse.value.copy(material.color);\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size * pixelRatio;\r\n\t\t\tuniforms.scale.value = height * 0.5;\r\n\r\n\t\t\tif (material.map) {\r\n\t\t\t\tuniforms.map.value = material.map;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.alphaMap) {\r\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.alphaTest > 0) {\r\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\r\n\t\t\t} // uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. alpha map\r\n\r\n\r\n\t\t\tlet uvScaleMap;\r\n\r\n\t\t\tif (material.map) {\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\t\t} else if (material.alphaMap) {\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (uvScaleMap !== undefined) {\r\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\r\n\t\t\t\t\tuvScaleMap.updateMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsSprites(uniforms, material) {\r\n\t\t\tuniforms.diffuse.value.copy(material.color);\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.rotation.value = material.rotation;\r\n\r\n\t\t\tif (material.map) {\r\n\t\t\t\tuniforms.map.value = material.map;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.alphaMap) {\r\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.alphaTest > 0) {\r\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\r\n\t\t\t} // uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. alpha map\r\n\r\n\r\n\t\t\tlet uvScaleMap;\r\n\r\n\t\t\tif (material.map) {\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\t\t} else if (material.alphaMap) {\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (uvScaleMap !== undefined) {\r\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\r\n\t\t\t\t\tuvScaleMap.updateMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsLambert(uniforms, material) {\r\n\t\t\tif (material.emissiveMap) {\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPhong(uniforms, material) {\r\n\t\t\tuniforms.specular.value.copy(material.specular);\r\n\t\t\tuniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t\t\tif (material.emissiveMap) {\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.bumpMap) {\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.normalMap) {\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\r\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\r\n\t\t\t}\r\n\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsToon(uniforms, material) {\r\n\t\t\tif (material.gradientMap) {\r\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.emissiveMap) {\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.bumpMap) {\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.normalMap) {\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\r\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\r\n\t\t\t}\r\n\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsStandard(uniforms, material) {\r\n\t\t\tuniforms.roughness.value = material.roughness;\r\n\t\t\tuniforms.metalness.value = material.metalness;\r\n\r\n\t\t\tif (material.roughnessMap) {\r\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.metalnessMap) {\r\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.emissiveMap) {\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.bumpMap) {\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.normalMap) {\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\r\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\r\n\t\t\t}\r\n\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\r\n\t\t\tconst envMap = properties.get(material).envMap;\r\n\r\n\t\t\tif (envMap) {\r\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\r\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPhysical(uniforms, material, transmissionRenderTarget) {\r\n\t\t\trefreshUniformsStandard(uniforms, material);\r\n\t\t\tuniforms.ior.value = material.ior; // also part of uniforms common\r\n\r\n\t\t\tif (material.sheen > 0) {\r\n\t\t\t\tuniforms.sheenTint.value.copy(material.sheenTint).multiplyScalar(material.sheen);\r\n\t\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.clearcoat > 0) {\r\n\t\t\t\tuniforms.clearcoat.value = material.clearcoat;\r\n\t\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\r\n\r\n\t\t\t\tif (material.clearcoatMap) {\r\n\t\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (material.clearcoatRoughnessMap) {\r\n\t\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (material.clearcoatNormalMap) {\r\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\r\n\t\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\r\n\r\n\t\t\t\t\tif (material.side === BackSide) {\r\n\t\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (material.transmission > 0) {\r\n\t\t\t\tuniforms.transmission.value = material.transmission;\r\n\t\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\r\n\t\t\t\tuniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width, transmissionRenderTarget.height);\r\n\r\n\t\t\t\tif (material.transmissionMap) {\r\n\t\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.thickness.value = material.thickness;\r\n\r\n\t\t\t\tif (material.thicknessMap) {\r\n\t\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\r\n\t\t\t\tuniforms.attenuationTint.value.copy(material.attenuationTint);\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.specularIntensity.value = material.specularIntensity;\r\n\t\t\tuniforms.specularTint.value.copy(material.specularTint);\r\n\r\n\t\t\tif (material.specularIntensityMap) {\r\n\t\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.specularTintMap) {\r\n\t\t\t\tuniforms.specularTintMap.value = material.specularTintMap;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsMatcap(uniforms, material) {\r\n\t\t\tif (material.matcap) {\r\n\t\t\t\tuniforms.matcap.value = material.matcap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.bumpMap) {\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.normalMap) {\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\r\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\r\n\t\t\t}\r\n\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDepth(uniforms, material) {\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDistance(uniforms, material) {\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.referencePosition.value.copy(material.referencePosition);\r\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\r\n\t\t\tuniforms.farDistance.value = material.farDistance;\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsNormal(uniforms, material) {\r\n\t\t\tif (material.bumpMap) {\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.normalMap) {\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\r\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\r\n\t\t\t}\r\n\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\trefreshFogUniforms: refreshFogUniforms,\r\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\r\n\t\t};\r\n\t}\r\n\r\n\tfunction createCanvasElement() {\r\n\t\tconst canvas = createElementNS('canvas');\r\n\t\tcanvas.style.display = 'block';\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tfunction WebGLRenderer(parameters = {}) {\r\n\t\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\r\n\t\t\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\t\t\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\t\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\r\n\t\t\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\r\n\r\n\t\tlet currentRenderList = null;\r\n\t\tlet currentRenderState = null; // render() can be called from within a callback triggered by another render.\r\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\r\n\r\n\t\tconst renderListStack = [];\r\n\t\tconst renderStateStack = []; // public properties\r\n\r\n\t\tthis.domElement = _canvas; // Debug configuration container\r\n\r\n\t\tthis.debug = {\r\n\t\t\t/**\r\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\r\n\t\t\t * @type {boolean}\r\n\t\t\t */\r\n\t\t\tcheckShaderErrors: true\r\n\t\t}; // clearing\r\n\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true; // scene graph\r\n\r\n\t\tthis.sortObjects = true; // user-defined clipping\r\n\r\n\t\tthis.clippingPlanes = [];\r\n\t\tthis.localClippingEnabled = false; // physically based shading\r\n\r\n\t\tthis.gammaFactor = 2.0; // for backwards compatibility\r\n\r\n\t\tthis.outputEncoding = LinearEncoding; // physical lights\r\n\r\n\t\tthis.physicallyCorrectLights = false; // tone mapping\r\n\r\n\t\tthis.toneMapping = NoToneMapping;\r\n\t\tthis.toneMappingExposure = 1.0; // internal properties\r\n\r\n\t\tconst _this = this;\r\n\r\n\t\tlet _isContextLost = false; // internal state cache\r\n\r\n\t\tlet _currentActiveCubeFace = 0;\r\n\t\tlet _currentActiveMipmapLevel = 0;\r\n\t\tlet _currentRenderTarget = null;\r\n\r\n\t\tlet _currentMaterialId = -1;\r\n\r\n\t\tlet _currentCamera = null;\r\n\r\n\t\tconst _currentViewport = new Vector4();\r\n\r\n\t\tconst _currentScissor = new Vector4();\r\n\r\n\t\tlet _currentScissorTest = null; //\r\n\r\n\t\tlet _width = _canvas.width;\r\n\t\tlet _height = _canvas.height;\r\n\t\tlet _pixelRatio = 1;\r\n\t\tlet _opaqueSort = null;\r\n\t\tlet _transparentSort = null;\r\n\r\n\t\tconst _viewport = new Vector4(0, 0, _width, _height);\r\n\r\n\t\tconst _scissor = new Vector4(0, 0, _width, _height);\r\n\r\n\t\tlet _scissorTest = false; //\r\n\r\n\t\tconst _currentDrawBuffers = []; // frustum\r\n\r\n\t\tconst _frustum = new Frustum(); // clipping\r\n\r\n\r\n\t\tlet _clippingEnabled = false;\r\n\t\tlet _localClippingEnabled = false; // transmission\r\n\r\n\t\tlet _transmissionRenderTarget = null; // camera matrices cache\r\n\r\n\t\tconst _projScreenMatrix = new Matrix4();\r\n\r\n\t\tconst _vector3 = new Vector3();\r\n\r\n\t\tconst _emptyScene = {\r\n\t\t\tbackground: null,\r\n\t\t\tfog: null,\r\n\t\t\tenvironment: null,\r\n\t\t\toverrideMaterial: null,\r\n\t\t\tisScene: true\r\n\t\t};\r\n\r\n\t\tfunction getTargetPixelRatio() {\r\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\r\n\t\t} // initialize\r\n\r\n\r\n\t\tlet _gl = _context;\r\n\r\n\t\tfunction getContext(contextNames, contextAttributes) {\r\n\t\t\tfor (let i = 0; i < contextNames.length; i++) {\r\n\t\t\t\tconst contextName = contextNames[i];\r\n\r\n\t\t\t\tconst context = _canvas.getContext(contextName, contextAttributes);\r\n\r\n\t\t\t\tif (context !== null) return context;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst contextAttributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\r\n\t\t\t\tpowerPreference: _powerPreference,\r\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\r\n\t\t\t}; // event listeners must be registered before WebGL context is created, see #12753\r\n\r\n\t\t\t_canvas.addEventListener('webglcontextlost', onContextLost, false);\r\n\r\n\t\t\t_canvas.addEventListener('webglcontextrestored', onContextRestore, false);\r\n\r\n\t\t\tif (_gl === null) {\r\n\t\t\t\tconst contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\r\n\r\n\t\t\t\tif (_this.isWebGL1Renderer === true) {\r\n\t\t\t\t\tcontextNames.shift();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl = getContext(contextNames, contextAttributes);\r\n\r\n\t\t\t\tif (_gl === null) {\r\n\t\t\t\t\tif (getContext(contextNames)) {\r\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context with your selected attributes.');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} // Some experimental-webgl implementations do not have getShaderPrecisionFormat\r\n\r\n\r\n\t\t\tif (_gl.getShaderPrecisionFormat === undefined) {\r\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t'rangeMin': 1,\r\n\t\t\t\t\t\t'rangeMax': 1,\r\n\t\t\t\t\t\t'precision': 1\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('THREE.WebGLRenderer: ' + error.message);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t\tlet extensions, capabilities, state, info;\r\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\r\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\r\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\r\n\t\tlet utils, bindingStates;\r\n\r\n\t\tfunction initGLContext() {\r\n\t\t\textensions = new WebGLExtensions(_gl);\r\n\t\t\tcapabilities = new WebGLCapabilities(_gl, extensions, parameters);\r\n\t\t\textensions.init(capabilities);\r\n\t\t\tutils = new WebGLUtils(_gl, extensions, capabilities);\r\n\t\t\tstate = new WebGLState(_gl, extensions, capabilities);\r\n\t\t\t_currentDrawBuffers[0] = _gl.BACK;\r\n\t\t\tinfo = new WebGLInfo(_gl);\r\n\t\t\tproperties = new WebGLProperties();\r\n\t\t\ttextures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\r\n\t\t\tcubemaps = new WebGLCubeMaps(_this);\r\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps(_this);\r\n\t\t\tattributes = new WebGLAttributes(_gl, capabilities);\r\n\t\t\tbindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\r\n\t\t\tgeometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\r\n\t\t\tobjects = new WebGLObjects(_gl, geometries, attributes, info);\r\n\t\t\tmorphtargets = new WebGLMorphtargets(_gl, capabilities, textures);\r\n\t\t\tclipping = new WebGLClipping(properties);\r\n\t\t\tprogramCache = new WebGLPrograms(_this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping);\r\n\t\t\tmaterials = new WebGLMaterials(properties);\r\n\t\t\trenderLists = new WebGLRenderLists(properties);\r\n\t\t\trenderStates = new WebGLRenderStates(extensions, capabilities);\r\n\t\t\tbackground = new WebGLBackground(_this, cubemaps, state, objects, _premultipliedAlpha);\r\n\t\t\tshadowMap = new WebGLShadowMap(_this, objects, capabilities);\r\n\t\t\tbufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\r\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\r\n\t\t\tinfo.programs = programCache.programs;\r\n\t\t\t_this.capabilities = capabilities;\r\n\t\t\t_this.extensions = extensions;\r\n\t\t\t_this.properties = properties;\r\n\t\t\t_this.renderLists = renderLists;\r\n\t\t\t_this.shadowMap = shadowMap;\r\n\t\t\t_this.state = state;\r\n\t\t\t_this.info = info;\r\n\t\t}\r\n\r\n\t\tinitGLContext(); // xr\r\n\r\n\t\tconst xr = new WebXRManager(_this, _gl);\r\n\t\tthis.xr = xr; // API\r\n\r\n\t\tthis.getContext = function () {\r\n\t\t\treturn _gl;\r\n\t\t};\r\n\r\n\t\tthis.getContextAttributes = function () {\r\n\t\t\treturn _gl.getContextAttributes();\r\n\t\t};\r\n\r\n\t\tthis.forceContextLoss = function () {\r\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\r\n\t\t\tif (extension) extension.loseContext();\r\n\t\t};\r\n\r\n\t\tthis.forceContextRestore = function () {\r\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\r\n\t\t\tif (extension) extension.restoreContext();\r\n\t\t};\r\n\r\n\t\tthis.getPixelRatio = function () {\r\n\t\t\treturn _pixelRatio;\r\n\t\t};\r\n\r\n\t\tthis.setPixelRatio = function (value) {\r\n\t\t\tif (value === undefined) return;\r\n\t\t\t_pixelRatio = value;\r\n\t\t\tthis.setSize(_width, _height, false);\r\n\t\t};\r\n\r\n\t\tthis.getSize = function (target) {\r\n\t\t\treturn target.set(_width, _height);\r\n\t\t};\r\n\r\n\t\tthis.setSize = function (width, height, updateStyle) {\r\n\t\t\tif (xr.isPresenting) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\t\t_canvas.width = Math.floor(width * _pixelRatio);\r\n\t\t\t_canvas.height = Math.floor(height * _pixelRatio);\r\n\r\n\t\t\tif (updateStyle !== false) {\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\t\t\t}\r\n\r\n\t\t\tthis.setViewport(0, 0, width, height);\r\n\t\t};\r\n\r\n\t\tthis.getDrawingBufferSize = function (target) {\r\n\t\t\treturn target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\r\n\t\t};\r\n\r\n\t\tthis.setDrawingBufferSize = function (width, height, pixelRatio) {\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\t\t_pixelRatio = pixelRatio;\r\n\t\t\t_canvas.width = Math.floor(width * pixelRatio);\r\n\t\t\t_canvas.height = Math.floor(height * pixelRatio);\r\n\t\t\tthis.setViewport(0, 0, width, height);\r\n\t\t};\r\n\r\n\t\tthis.getCurrentViewport = function (target) {\r\n\t\t\treturn target.copy(_currentViewport);\r\n\t\t};\r\n\r\n\t\tthis.getViewport = function (target) {\r\n\t\t\treturn target.copy(_viewport);\r\n\t\t};\r\n\r\n\t\tthis.setViewport = function (x, y, width, height) {\r\n\t\t\tif (x.isVector4) {\r\n\t\t\t\t_viewport.set(x.x, x.y, x.z, x.w);\r\n\t\t\t} else {\r\n\t\t\t\t_viewport.set(x, y, width, height);\r\n\t\t\t}\r\n\r\n\t\t\tstate.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\r\n\t\t};\r\n\r\n\t\tthis.getScissor = function (target) {\r\n\t\t\treturn target.copy(_scissor);\r\n\t\t};\r\n\r\n\t\tthis.setScissor = function (x, y, width, height) {\r\n\t\t\tif (x.isVector4) {\r\n\t\t\t\t_scissor.set(x.x, x.y, x.z, x.w);\r\n\t\t\t} else {\r\n\t\t\t\t_scissor.set(x, y, width, height);\r\n\t\t\t}\r\n\r\n\t\t\tstate.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\r\n\t\t};\r\n\r\n\t\tthis.getScissorTest = function () {\r\n\t\t\treturn _scissorTest;\r\n\t\t};\r\n\r\n\t\tthis.setScissorTest = function (boolean) {\r\n\t\t\tstate.setScissorTest(_scissorTest = boolean);\r\n\t\t};\r\n\r\n\t\tthis.setOpaqueSort = function (method) {\r\n\t\t\t_opaqueSort = method;\r\n\t\t};\r\n\r\n\t\tthis.setTransparentSort = function (method) {\r\n\t\t\t_transparentSort = method;\r\n\t\t}; // Clearing\r\n\r\n\r\n\t\tthis.getClearColor = function (target) {\r\n\t\t\treturn target.copy(background.getClearColor());\r\n\t\t};\r\n\r\n\t\tthis.setClearColor = function () {\r\n\t\t\tbackground.setClearColor.apply(background, arguments);\r\n\t\t};\r\n\r\n\t\tthis.getClearAlpha = function () {\r\n\t\t\treturn background.getClearAlpha();\r\n\t\t};\r\n\r\n\t\tthis.setClearAlpha = function () {\r\n\t\t\tbackground.setClearAlpha.apply(background, arguments);\r\n\t\t};\r\n\r\n\t\tthis.clear = function (color, depth, stencil) {\r\n\t\t\tlet bits = 0;\r\n\t\t\tif (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t\t_gl.clear(bits);\r\n\t\t};\r\n\r\n\t\tthis.clearColor = function () {\r\n\t\t\tthis.clear(true, false, false);\r\n\t\t};\r\n\r\n\t\tthis.clearDepth = function () {\r\n\t\t\tthis.clear(false, true, false);\r\n\t\t};\r\n\r\n\t\tthis.clearStencil = function () {\r\n\t\t\tthis.clear(false, false, true);\r\n\t\t}; //\r\n\r\n\r\n\t\tthis.dispose = function () {\r\n\t\t\t_canvas.removeEventListener('webglcontextlost', onContextLost, false);\r\n\r\n\t\t\t_canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\r\n\r\n\t\t\trenderLists.dispose();\r\n\t\t\trenderStates.dispose();\r\n\t\t\tproperties.dispose();\r\n\t\t\tcubemaps.dispose();\r\n\t\t\tcubeuvmaps.dispose();\r\n\t\t\tobjects.dispose();\r\n\t\t\tbindingStates.dispose();\r\n\t\t\txr.dispose();\r\n\t\t\txr.removeEventListener('sessionstart', onXRSessionStart);\r\n\t\t\txr.removeEventListener('sessionend', onXRSessionEnd);\r\n\r\n\t\t\tif (_transmissionRenderTarget) {\r\n\t\t\t\t_transmissionRenderTarget.dispose();\r\n\r\n\t\t\t\t_transmissionRenderTarget = null;\r\n\t\t\t}\r\n\r\n\t\t\tanimation.stop();\r\n\t\t}; // Events\r\n\r\n\r\n\t\tfunction onContextLost(event) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Lost.');\r\n\t\t\t_isContextLost = true;\r\n\t\t}\r\n\r\n\t\tfunction onContextRestore() {\r\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Restored.');\r\n\t\t\t_isContextLost = false;\r\n\t\t\tconst infoAutoReset = info.autoReset;\r\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\r\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\r\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\r\n\t\t\tconst shadowMapType = shadowMap.type;\r\n\t\t\tinitGLContext();\r\n\t\t\tinfo.autoReset = infoAutoReset;\r\n\t\t\tshadowMap.enabled = shadowMapEnabled;\r\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\r\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\r\n\t\t\tshadowMap.type = shadowMapType;\r\n\t\t}\r\n\r\n\t\tfunction onMaterialDispose(event) {\r\n\t\t\tconst material = event.target;\r\n\t\t\tmaterial.removeEventListener('dispose', onMaterialDispose);\r\n\t\t\tdeallocateMaterial(material);\r\n\t\t} // Buffer deallocation\r\n\r\n\r\n\t\tfunction deallocateMaterial(material) {\r\n\t\t\treleaseMaterialProgramReferences(material);\r\n\t\t\tproperties.remove(material);\r\n\t\t}\r\n\r\n\t\tfunction releaseMaterialProgramReferences(material) {\r\n\t\t\tconst programs = properties.get(material).programs;\r\n\r\n\t\t\tif (programs !== undefined) {\r\n\t\t\t\tprograms.forEach(function (program) {\r\n\t\t\t\t\tprogramCache.releaseProgram(program);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} // Buffer rendering\r\n\r\n\r\n\t\tfunction renderObjectImmediate(object, program) {\r\n\t\t\tobject.render(function (object) {\r\n\t\t\t\t_this.renderBufferImmediate(object, program);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.renderBufferImmediate = function (object, program) {\r\n\t\t\tbindingStates.initAttributes();\r\n\t\t\tconst buffers = properties.get(object);\r\n\t\t\tif (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\r\n\t\t\tif (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\r\n\t\t\tif (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\r\n\t\t\tif (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\r\n\t\t\tconst programAttributes = program.getAttributes();\r\n\r\n\t\t\tif (object.hasPositions) {\r\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\r\n\r\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\r\n\r\n\t\t\t\tbindingStates.enableAttribute(programAttributes.position.location);\r\n\r\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.position.location, 3, _gl.FLOAT, false, 0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (object.hasNormals) {\r\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\r\n\r\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\r\n\r\n\t\t\t\tbindingStates.enableAttribute(programAttributes.normal.location);\r\n\r\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.normal.location, 3, _gl.FLOAT, false, 0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (object.hasUvs) {\r\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\r\n\r\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\r\n\r\n\t\t\t\tbindingStates.enableAttribute(programAttributes.uv.location);\r\n\r\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.uv.location, 2, _gl.FLOAT, false, 0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (object.hasColors) {\r\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\r\n\r\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\r\n\r\n\t\t\t\tbindingStates.enableAttribute(programAttributes.color.location);\r\n\r\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.color.location, 3, _gl.FLOAT, false, 0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tbindingStates.disableUnusedAttributes();\r\n\r\n\t\t\t_gl.drawArrays(_gl.TRIANGLES, 0, object.count);\r\n\r\n\t\t\tobject.count = 0;\r\n\t\t};\r\n\r\n\t\tthis.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\r\n\t\t\tif (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\r\n\r\n\t\t\tconst frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\r\n\t\t\tconst program = setProgram(camera, scene, material, object);\r\n\t\t\tstate.setMaterial(material, frontFaceCW); //\r\n\r\n\t\t\tlet index = geometry.index;\r\n\t\t\tconst position = geometry.attributes.position; //\r\n\r\n\t\t\tif (index === null) {\r\n\t\t\t\tif (position === undefined || position.count === 0) return;\r\n\t\t\t} else if (index.count === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tlet rangeFactor = 1;\r\n\r\n\t\t\tif (material.wireframe === true) {\r\n\t\t\t\tindex = geometries.getWireframeAttribute(geometry);\r\n\t\t\t\trangeFactor = 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (geometry.morphAttributes.position !== undefined || geometry.morphAttributes.normal !== undefined) {\r\n\t\t\t\tmorphtargets.update(object, geometry, material, program);\r\n\t\t\t}\r\n\r\n\t\t\tbindingStates.setup(object, material, program, geometry, index);\r\n\t\t\tlet attribute;\r\n\t\t\tlet renderer = bufferRenderer;\r\n\r\n\t\t\tif (index !== null) {\r\n\t\t\t\tattribute = attributes.get(index);\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex(attribute);\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tconst dataCount = index !== null ? index.count : position.count;\r\n\t\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\r\n\t\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\r\n\t\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\r\n\t\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\r\n\t\t\tconst drawStart = Math.max(rangeStart, groupStart);\r\n\t\t\tconst drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\r\n\t\t\tconst drawCount = Math.max(0, drawEnd - drawStart + 1);\r\n\t\t\tif (drawCount === 0) return; //\r\n\r\n\t\t\tif (object.isMesh) {\r\n\t\t\t\tif (material.wireframe === true) {\r\n\t\t\t\t\tstate.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\r\n\t\t\t\t\trenderer.setMode(_gl.LINES);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trenderer.setMode(_gl.TRIANGLES);\r\n\t\t\t\t}\r\n\t\t\t} else if (object.isLine) {\r\n\t\t\t\tlet lineWidth = material.linewidth;\r\n\t\t\t\tif (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\t\tstate.setLineWidth(lineWidth * getTargetPixelRatio());\r\n\r\n\t\t\t\tif (object.isLineSegments) {\r\n\t\t\t\t\trenderer.setMode(_gl.LINES);\r\n\t\t\t\t} else if (object.isLineLoop) {\r\n\t\t\t\t\trenderer.setMode(_gl.LINE_LOOP);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trenderer.setMode(_gl.LINE_STRIP);\r\n\t\t\t\t}\r\n\t\t\t} else if (object.isPoints) {\r\n\t\t\t\trenderer.setMode(_gl.POINTS);\r\n\t\t\t} else if (object.isSprite) {\r\n\t\t\t\trenderer.setMode(_gl.TRIANGLES);\r\n\t\t\t}\r\n\r\n\t\t\tif (object.isInstancedMesh) {\r\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, object.count);\r\n\t\t\t} else if (geometry.isInstancedBufferGeometry) {\r\n\t\t\t\tconst instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\r\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, instanceCount);\r\n\t\t\t} else {\r\n\t\t\t\trenderer.render(drawStart, drawCount);\r\n\t\t\t}\r\n\t\t}; // Compile\r\n\r\n\r\n\t\tthis.compile = function (scene, camera) {\r\n\t\t\tcurrentRenderState = renderStates.get(scene);\r\n\t\t\tcurrentRenderState.init();\r\n\t\t\trenderStateStack.push(currentRenderState);\r\n\t\t\tscene.traverseVisible(function (object) {\r\n\t\t\t\tif (object.isLight && object.layers.test(camera.layers)) {\r\n\t\t\t\t\tcurrentRenderState.pushLight(object);\r\n\r\n\t\t\t\t\tif (object.castShadow) {\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tcurrentRenderState.setupLights(_this.physicallyCorrectLights);\r\n\t\t\tscene.traverse(function (object) {\r\n\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\tif (material) {\r\n\t\t\t\t\tif (Array.isArray(material)) {\r\n\t\t\t\t\t\tfor (let i = 0; i < material.length; i++) {\r\n\t\t\t\t\t\t\tconst material2 = material[i];\r\n\t\t\t\t\t\t\tgetProgram(material2, scene, object);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgetProgram(material, scene, object);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\trenderStateStack.pop();\r\n\t\t\tcurrentRenderState = null;\r\n\t\t}; // Animation Loop\r\n\r\n\r\n\t\tlet onAnimationFrameCallback = null;\r\n\r\n\t\tfunction onAnimationFrame(time) {\r\n\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time);\r\n\t\t}\r\n\r\n\t\tfunction onXRSessionStart() {\r\n\t\t\tanimation.stop();\r\n\t\t}\r\n\r\n\t\tfunction onXRSessionEnd() {\r\n\t\t\tanimation.start();\r\n\t\t}\r\n\r\n\t\tconst animation = new WebGLAnimation();\r\n\t\tanimation.setAnimationLoop(onAnimationFrame);\r\n\t\tif (typeof window !== 'undefined') animation.setContext(window);\r\n\r\n\t\tthis.setAnimationLoop = function (callback) {\r\n\t\t\tonAnimationFrameCallback = callback;\r\n\t\t\txr.setAnimationLoop(callback);\r\n\t\t\tcallback === null ? animation.stop() : animation.start();\r\n\t\t};\r\n\r\n\t\txr.addEventListener('sessionstart', onXRSessionStart);\r\n\t\txr.addEventListener('sessionend', onXRSessionEnd); // Rendering\r\n\r\n\t\tthis.render = function (scene, camera) {\r\n\t\t\tif (camera !== undefined && camera.isCamera !== true) {\r\n\t\t\t\tconsole.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (_isContextLost === true) return; // update scene graph\r\n\r\n\t\t\tif (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\r\n\r\n\t\t\tif (camera.parent === null) camera.updateMatrixWorld();\r\n\r\n\t\t\tif (xr.enabled === true && xr.isPresenting === true) {\r\n\t\t\t\tif (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\r\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\r\n\t\t\tcurrentRenderState = renderStates.get(scene, renderStateStack.length);\r\n\t\t\tcurrentRenderState.init();\r\n\t\t\trenderStateStack.push(currentRenderState);\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\r\n\r\n\t\t\t_frustum.setFromProjectionMatrix(_projScreenMatrix);\r\n\r\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\r\n\t\t\t_clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\r\n\t\t\tcurrentRenderList = renderLists.get(scene, renderListStack.length);\r\n\t\t\tcurrentRenderList.init();\r\n\t\t\trenderListStack.push(currentRenderList);\r\n\t\t\tprojectObject(scene, camera, 0, _this.sortObjects);\r\n\t\t\tcurrentRenderList.finish();\r\n\r\n\t\t\tif (_this.sortObjects === true) {\r\n\t\t\t\tcurrentRenderList.sort(_opaqueSort, _transparentSort);\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (_clippingEnabled === true) clipping.beginShadows();\r\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\r\n\t\t\tshadowMap.render(shadowsArray, scene, camera);\r\n\t\t\tif (_clippingEnabled === true) clipping.endShadows(); //\r\n\r\n\t\t\tif (this.info.autoReset === true) this.info.reset(); //\r\n\r\n\t\t\tbackground.render(currentRenderList, scene); // render scene\r\n\r\n\t\t\tcurrentRenderState.setupLights(_this.physicallyCorrectLights);\r\n\r\n\t\t\tif (camera.isArrayCamera) {\r\n\t\t\t\tconst cameras = camera.cameras;\r\n\r\n\t\t\t\tfor (let i = 0, l = cameras.length; i < l; i++) {\r\n\t\t\t\t\tconst camera2 = cameras[i];\r\n\t\t\t\t\trenderScene(currentRenderList, scene, camera2, camera2.viewport);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\trenderScene(currentRenderList, scene, camera);\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (_currentRenderTarget !== null) {\r\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\r\n\t\t\t\ttextures.updateMultisampleRenderTarget(_currentRenderTarget); // Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\t\t\ttextures.updateRenderTargetMipmap(_currentRenderTarget);\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\t\tstate.buffers.depth.setTest(true);\r\n\t\t\tstate.buffers.depth.setMask(true);\r\n\t\t\tstate.buffers.color.setMask(true);\r\n\t\t\tstate.setPolygonOffset(false); // _gl.finish();\r\n\r\n\t\t\tbindingStates.resetDefaultState();\r\n\t\t\t_currentMaterialId = -1;\r\n\t\t\t_currentCamera = null;\r\n\t\t\trenderStateStack.pop();\r\n\r\n\t\t\tif (renderStateStack.length > 0) {\r\n\t\t\t\tcurrentRenderState = renderStateStack[renderStateStack.length - 1];\r\n\t\t\t} else {\r\n\t\t\t\tcurrentRenderState = null;\r\n\t\t\t}\r\n\r\n\t\t\trenderListStack.pop();\r\n\r\n\t\t\tif (renderListStack.length > 0) {\r\n\t\t\t\tcurrentRenderList = renderListStack[renderListStack.length - 1];\r\n\t\t\t} else {\r\n\t\t\t\tcurrentRenderList = null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction projectObject(object, camera, groupOrder, sortObjects) {\r\n\t\t\tif (object.visible === false) return;\r\n\t\t\tconst visible = object.layers.test(camera.layers);\r\n\r\n\t\t\tif (visible) {\r\n\t\t\t\tif (object.isGroup) {\r\n\t\t\t\t\tgroupOrder = object.renderOrder;\r\n\t\t\t\t} else if (object.isLOD) {\r\n\t\t\t\t\tif (object.autoUpdate === true) object.update(camera);\r\n\t\t\t\t} else if (object.isLight) {\r\n\t\t\t\t\tcurrentRenderState.pushLight(object);\r\n\r\n\t\t\t\t\tif (object.castShadow) {\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (object.isSprite) {\r\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsSprite(object)) {\r\n\t\t\t\t\t\tif (sortObjects) {\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst geometry = objects.update(object);\r\n\t\t\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\t\t\tif (material.visible) {\r\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (object.isImmediateRenderObject) {\r\n\t\t\t\t\tif (sortObjects) {\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentRenderList.push(object, null, object.material, groupOrder, _vector3.z, null);\r\n\t\t\t\t} else if (object.isMesh || object.isLine || object.isPoints) {\r\n\t\t\t\t\tif (object.isSkinnedMesh) {\r\n\t\t\t\t\t\t// update skeleton only once in a frame\r\n\t\t\t\t\t\tif (object.skeleton.frame !== info.render.frame) {\r\n\t\t\t\t\t\t\tobject.skeleton.update();\r\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsObject(object)) {\r\n\t\t\t\t\t\tif (sortObjects) {\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst geometry = objects.update(object);\r\n\t\t\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\t\t\tif (Array.isArray(material)) {\r\n\t\t\t\t\t\t\tconst groups = geometry.groups;\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\tconst group = groups[i];\r\n\t\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\r\n\r\n\t\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\r\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, groupMaterial, groupOrder, _vector3.z, group);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (material.visible) {\r\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst children = object.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tprojectObject(children[i], camera, groupOrder, sortObjects);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction renderScene(currentRenderList, scene, camera, viewport) {\r\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\r\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\r\n\t\t\tconst transparentObjects = currentRenderList.transparent;\r\n\t\t\tcurrentRenderState.setupLightsView(camera);\r\n\t\t\tif (transmissiveObjects.length > 0) renderTransmissionPass(opaqueObjects, scene, camera);\r\n\t\t\tif (viewport) state.viewport(_currentViewport.copy(viewport));\r\n\t\t\tif (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\r\n\t\t\tif (transmissiveObjects.length > 0) renderObjects(transmissiveObjects, scene, camera);\r\n\t\t\tif (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera);\r\n\t\t}\r\n\r\n\t\tfunction renderTransmissionPass(opaqueObjects, scene, camera) {\r\n\t\t\tif (_transmissionRenderTarget === null) {\r\n\t\t\t\tconst needsAntialias = _antialias === true && capabilities.isWebGL2 === true;\r\n\t\t\t\tconst renderTargetType = needsAntialias ? WebGLMultisampleRenderTarget : WebGLRenderTarget;\r\n\t\t\t\t_transmissionRenderTarget = new renderTargetType(1024, 1024, {\r\n\t\t\t\t\tgenerateMipmaps: true,\r\n\t\t\t\t\ttype: utils.convert(HalfFloatType) !== null ? HalfFloatType : UnsignedByteType,\r\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\r\n\t\t\t\t\tmagFilter: NearestFilter,\r\n\t\t\t\t\twrapS: ClampToEdgeWrapping,\r\n\t\t\t\t\twrapT: ClampToEdgeWrapping\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\r\n\r\n\t\t\t_this.setRenderTarget(_transmissionRenderTarget);\r\n\r\n\t\t\t_this.clear(); // Turn off the features which can affect the frag color for opaque objects pass.\r\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\r\n\r\n\r\n\t\t\tconst currentToneMapping = _this.toneMapping;\r\n\t\t\t_this.toneMapping = NoToneMapping;\r\n\t\t\trenderObjects(opaqueObjects, scene, camera);\r\n\t\t\t_this.toneMapping = currentToneMapping;\r\n\t\t\ttextures.updateMultisampleRenderTarget(_transmissionRenderTarget);\r\n\t\t\ttextures.updateRenderTargetMipmap(_transmissionRenderTarget);\r\n\r\n\t\t\t_this.setRenderTarget(currentRenderTarget);\r\n\t\t}\r\n\r\n\t\tfunction renderObjects(renderList, scene, camera) {\r\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\r\n\r\n\t\t\tfor (let i = 0, l = renderList.length; i < l; i++) {\r\n\t\t\t\tconst renderItem = renderList[i];\r\n\t\t\t\tconst object = renderItem.object;\r\n\t\t\t\tconst geometry = renderItem.geometry;\r\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\r\n\t\t\t\tconst group = renderItem.group;\r\n\r\n\t\t\t\tif (object.layers.test(camera.layers)) {\r\n\t\t\t\t\trenderObject(object, scene, camera, geometry, material, group);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction renderObject(object, scene, camera, geometry, material, group) {\r\n\t\t\tobject.onBeforeRender(_this, scene, camera, geometry, material, group);\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\r\n\t\t\tobject.normalMatrix.getNormalMatrix(object.modelViewMatrix);\r\n\t\t\tmaterial.onBeforeRender(_this, scene, camera, geometry, object, group);\r\n\r\n\t\t\tif (object.isImmediateRenderObject) {\r\n\t\t\t\tconst program = setProgram(camera, scene, material, object);\r\n\t\t\t\tstate.setMaterial(material);\r\n\t\t\t\tbindingStates.reset();\r\n\t\t\t\trenderObjectImmediate(object, program);\r\n\t\t\t} else {\r\n\t\t\t\tif (material.transparent === true && material.side === DoubleSide) {\r\n\t\t\t\t\tmaterial.side = BackSide;\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\r\n\r\n\t\t\t\t\tmaterial.side = FrontSide;\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\r\n\r\n\t\t\t\t\tmaterial.side = DoubleSide;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tobject.onAfterRender(_this, scene, camera, geometry, material, group);\r\n\t\t}\r\n\r\n\t\tfunction getProgram(material, scene, object) {\r\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\r\n\r\n\t\t\tconst materialProperties = properties.get(material);\r\n\t\t\tconst lights = currentRenderState.state.lights;\r\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\r\n\t\t\tconst lightsStateVersion = lights.state.version;\r\n\t\t\tconst parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\r\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey(parameters);\r\n\t\t\tlet programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\r\n\r\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\t\t\tmaterialProperties.fog = scene.fog;\r\n\t\t\tmaterialProperties.envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || materialProperties.environment);\r\n\r\n\t\t\tif (programs === undefined) {\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener('dispose', onMaterialDispose);\r\n\t\t\t\tprograms = new Map();\r\n\t\t\t\tmaterialProperties.programs = programs;\r\n\t\t\t}\r\n\r\n\t\t\tlet program = programs.get(programCacheKey);\r\n\r\n\t\t\tif (program !== undefined) {\r\n\t\t\t\t// early out if program and light state is identical\r\n\t\t\t\tif (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {\r\n\t\t\t\t\tupdateCommonMaterialProperties(material, parameters);\r\n\t\t\t\t\treturn program;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tparameters.uniforms = programCache.getUniforms(material);\r\n\t\t\t\tmaterial.onBuild(parameters, _this);\r\n\t\t\t\tmaterial.onBeforeCompile(parameters, _this);\r\n\t\t\t\tprogram = programCache.acquireProgram(parameters, programCacheKey);\r\n\t\t\t\tprograms.set(programCacheKey, program);\r\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\r\n\t\t\t}\r\n\r\n\t\t\tconst uniforms = materialProperties.uniforms;\r\n\r\n\t\t\tif (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\r\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\r\n\t\t\t}\r\n\r\n\t\t\tupdateCommonMaterialProperties(material, parameters); // store the light setup it was created for\r\n\r\n\t\t\tmaterialProperties.needsLights = materialNeedsLights(material);\r\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\r\n\r\n\t\t\tif (materialProperties.needsLights) {\r\n\t\t\t\t// wire up the material to this renderer's lighting state\r\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\r\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\r\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\r\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\r\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\r\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\r\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\r\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\r\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\r\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\r\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\r\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\r\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\r\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\r\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\r\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\r\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\r\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\r\n\t\t\t}\r\n\r\n\t\t\tconst progUniforms = program.getUniforms();\r\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\r\n\t\t\tmaterialProperties.currentProgram = program;\r\n\t\t\tmaterialProperties.uniformsList = uniformsList;\r\n\t\t\treturn program;\r\n\t\t}\r\n\r\n\t\tfunction updateCommonMaterialProperties(material, parameters) {\r\n\t\t\tconst materialProperties = properties.get(material);\r\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\r\n\t\t\tmaterialProperties.instancing = parameters.instancing;\r\n\t\t\tmaterialProperties.skinning = parameters.skinning;\r\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\r\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\r\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\r\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\r\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\r\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\r\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\r\n\t\t}\r\n\r\n\t\tfunction setProgram(camera, scene, material, object) {\r\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\r\n\r\n\t\t\ttextures.resetTextureUnits();\r\n\t\t\tconst fog = scene.fog;\r\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\t\t\tconst encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\r\n\t\t\tconst envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\r\n\t\t\tconst vertexAlphas = material.vertexColors === true && !!object.geometry && !!object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4;\r\n\t\t\tconst vertexTangents = !!material.normalMap && !!object.geometry && !!object.geometry.attributes.tangent;\r\n\t\t\tconst morphTargets = !!object.geometry && !!object.geometry.morphAttributes.position;\r\n\t\t\tconst morphNormals = !!object.geometry && !!object.geometry.morphAttributes.normal;\r\n\t\t\tconst morphTargetsCount = !!object.geometry && !!object.geometry.morphAttributes.position ? object.geometry.morphAttributes.position.length : 0;\r\n\t\t\tconst materialProperties = properties.get(material);\r\n\t\t\tconst lights = currentRenderState.state.lights;\r\n\r\n\t\t\tif (_clippingEnabled === true) {\r\n\t\t\t\tif (_localClippingEnabled === true || camera !== _currentCamera) {\r\n\t\t\t\t\tconst useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\r\n\t\t\t\t\t// object instead of the material, once it becomes feasible\r\n\t\t\t\t\t// (#8465, #8379)\r\n\r\n\t\t\t\t\tclipping.setState(material, camera, useCache);\r\n\t\t\t\t}\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tlet needsProgramChange = false;\r\n\r\n\t\t\tif (material.version === materialProperties.__version) {\r\n\t\t\t\tif (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.outputEncoding !== encoding) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (object.isInstancedMesh && materialProperties.instancing === false) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (!object.isInstancedMesh && materialProperties.instancing === true) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (object.isSkinnedMesh && materialProperties.skinning === false) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.envMap !== envMap) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (material.fog && materialProperties.fog !== fog) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.vertexAlphas !== vertexAlphas) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.vertexTangents !== vertexTangents) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.morphTargets !== morphTargets) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.morphNormals !== morphNormals) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\tmaterialProperties.__version = material.version;\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tlet program = materialProperties.currentProgram;\r\n\r\n\t\t\tif (needsProgramChange === true) {\r\n\t\t\t\tprogram = getProgram(material, scene, object);\r\n\t\t\t}\r\n\r\n\t\t\tlet refreshProgram = false;\r\n\t\t\tlet refreshMaterial = false;\r\n\t\t\tlet refreshLights = false;\r\n\t\t\tconst p_uniforms = program.getUniforms(),\r\n\t\t\t\t\t\tm_uniforms = materialProperties.uniforms;\r\n\r\n\t\t\tif (state.useProgram(program.program)) {\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.id !== _currentMaterialId) {\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (refreshProgram || _currentCamera !== camera) {\r\n\t\t\t\tp_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\r\n\r\n\t\t\t\tif (capabilities.logarithmicDepthBuffer) {\r\n\t\t\t\t\tp_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (_currentCamera !== camera) {\r\n\t\t\t\t\t_currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\r\n\t\t\t\t\t// now, in case this material supports lights - or later, when\r\n\t\t\t\t\t// the next material that does gets activated:\r\n\r\n\t\t\t\t\trefreshMaterial = true; // set to true on material change\r\n\r\n\t\t\t\t\trefreshLights = true; // remains set until update done\r\n\t\t\t\t} // load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\r\n\t\t\t\tif (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\r\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\r\n\r\n\t\t\t\t\tif (uCamPos !== undefined) {\r\n\t\t\t\t\t\tuCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\r\n\t\t\t\t\tp_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object.isSkinnedMesh) {\r\n\t\t\t\t\tp_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\r\n\t\t\t\t}\r\n\t\t\t} // skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\r\n\r\n\r\n\t\t\tif (object.isSkinnedMesh) {\r\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrix');\r\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\r\n\t\t\t\tconst skeleton = object.skeleton;\r\n\r\n\t\t\t\tif (skeleton) {\r\n\t\t\t\t\tif (capabilities.floatVertexTextures) {\r\n\t\t\t\t\t\tif (skeleton.boneTexture === null) skeleton.computeBoneTexture();\r\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\r\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tp_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\r\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\r\n\t\t\t\tp_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\r\n\t\t\t}\r\n\r\n\t\t\tif (refreshMaterial) {\r\n\t\t\t\tp_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\r\n\r\n\t\t\t\tif (materialProperties.needsLights) {\r\n\t\t\t\t\t// the current material requires lighting info\r\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\r\n\t\t\t\t\t// they simply reference the renderer's state for their\r\n\t\t\t\t\t// values\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\r\n\t\t\t\t\t// the GL state when required\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\r\n\t\t\t\t} // refresh uniforms common to several materials\r\n\r\n\r\n\t\t\t\tif (fog && material.fog) {\r\n\t\t\t\t\tmaterials.refreshFogUniforms(m_uniforms, fog);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget);\r\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\r\n\t\t\t}\r\n\r\n\t\t\tif (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\r\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\r\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.isSpriteMaterial) {\r\n\t\t\t\tp_uniforms.setValue(_gl, 'center', object.center);\r\n\t\t\t} // common matrices\r\n\r\n\r\n\t\t\tp_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\r\n\t\t\tp_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\r\n\t\t\tp_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\r\n\t\t\treturn program;\r\n\t\t} // If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\r\n\t\tfunction markUniformsLightsNeedsUpdate(uniforms, value) {\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\t\tuniforms.lightProbe.needsUpdate = value;\r\n\t\t\tuniforms.directionalLights.needsUpdate = value;\r\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\r\n\t\t\tuniforms.pointLights.needsUpdate = value;\r\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\r\n\t\t\tuniforms.spotLights.needsUpdate = value;\r\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\r\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\r\n\t\t}\r\n\r\n\t\tfunction materialNeedsLights(material) {\r\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\r\n\t\t}\r\n\r\n\t\tthis.getActiveCubeFace = function () {\r\n\t\t\treturn _currentActiveCubeFace;\r\n\t\t};\r\n\r\n\t\tthis.getActiveMipmapLevel = function () {\r\n\t\t\treturn _currentActiveMipmapLevel;\r\n\t\t};\r\n\r\n\t\tthis.getRenderTarget = function () {\r\n\t\t\treturn _currentRenderTarget;\r\n\t\t};\r\n\r\n\t\tthis.setRenderTarget = function (renderTarget, activeCubeFace = 0, activeMipmapLevel = 0) {\r\n\t\t\t_currentRenderTarget = renderTarget;\r\n\t\t\t_currentActiveCubeFace = activeCubeFace;\r\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\r\n\r\n\t\t\tif (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\r\n\t\t\t\ttextures.setupRenderTarget(renderTarget);\r\n\t\t\t}\r\n\r\n\t\t\tlet framebuffer = null;\r\n\t\t\tlet isCube = false;\r\n\t\t\tlet isRenderTarget3D = false;\r\n\r\n\t\t\tif (renderTarget) {\r\n\t\t\t\tconst texture = renderTarget.texture;\r\n\r\n\t\t\t\tif (texture.isDataTexture3D || texture.isDataTexture2DArray) {\r\n\t\t\t\t\tisRenderTarget3D = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\r\n\r\n\t\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\r\n\t\t\t\t\tframebuffer = __webglFramebuffer[activeCubeFace];\r\n\t\t\t\t\tisCube = true;\r\n\t\t\t\t} else if (renderTarget.isWebGLMultisampleRenderTarget) {\r\n\t\t\t\t\tframebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tframebuffer = __webglFramebuffer;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_currentViewport.copy(renderTarget.viewport);\r\n\r\n\t\t\t\t_currentScissor.copy(renderTarget.scissor);\r\n\r\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\r\n\t\t\t} else {\r\n\t\t\t\t_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\r\n\r\n\t\t\t\t_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\r\n\r\n\t\t\t\t_currentScissorTest = _scissorTest;\r\n\t\t\t}\r\n\r\n\t\t\tconst framebufferBound = state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\r\n\t\t\tif (framebufferBound && capabilities.drawBuffers) {\r\n\t\t\t\tlet needsUpdate = false;\r\n\r\n\t\t\t\tif (renderTarget) {\r\n\t\t\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\r\n\t\t\t\t\t\tconst textures = renderTarget.texture;\r\n\r\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== textures.length || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\r\n\t\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\r\n\t\t\t\t\t\t\t\t_currentDrawBuffers[i] = _gl.COLOR_ATTACHMENT0 + i;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_currentDrawBuffers.length = textures.length;\r\n\t\t\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\r\n\t\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.COLOR_ATTACHMENT0;\r\n\t\t\t\t\t\t\t_currentDrawBuffers.length = 1;\r\n\t\t\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.BACK) {\r\n\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.BACK;\r\n\t\t\t\t\t\t_currentDrawBuffers.length = 1;\r\n\t\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (needsUpdate) {\r\n\t\t\t\t\tif (capabilities.isWebGL2) {\r\n\t\t\t\t\t\t_gl.drawBuffers(_currentDrawBuffers);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\textensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(_currentDrawBuffers);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstate.viewport(_currentViewport);\r\n\t\t\tstate.scissor(_currentScissor);\r\n\t\t\tstate.setScissorTest(_currentScissorTest);\r\n\r\n\t\t\tif (isCube) {\r\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\r\n\r\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\r\n\t\t\t} else if (isRenderTarget3D) {\r\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\r\n\t\t\t\tconst layer = activeCubeFace || 0;\r\n\r\n\t\t\t\t_gl.framebufferTextureLayer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer);\r\n\t\t\t}\r\n\r\n\t\t\t_currentMaterialId = -1; // reset current material to ensure correct uniform bindings\r\n\t\t};\r\n\r\n\t\tthis.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\r\n\t\t\tif (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\r\n\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet framebuffer = properties.get(renderTarget).__webglFramebuffer;\r\n\r\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\r\n\t\t\t\tframebuffer = framebuffer[activeCubeFaceIndex];\r\n\t\t\t}\r\n\r\n\t\t\tif (framebuffer) {\r\n\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst texture = renderTarget.texture;\r\n\t\t\t\t\tconst textureFormat = texture.format;\r\n\t\t\t\t\tconst textureType = texture.type;\r\n\r\n\t\t\t\t\tif (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\r\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\r\n\r\n\t\t\t\t\tif (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)\r\n\t\t\t\t\t!(textureType === FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\r\n\t\t\t\t\t!halfFloatSupportedByExt) {\r\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n\t\t\t\t\t\tif (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\r\n\t\t\t\t\t\t\t_gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\r\n\t\t\t\t\t}\r\n\t\t\t\t} finally {\r\n\t\t\t\t\t// restore framebuffer of current render target if necessary\r\n\t\t\t\t\tconst framebuffer = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;\r\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.copyFramebufferToTexture = function (position, texture, level = 0) {\r\n\t\t\tconst levelScale = Math.pow(2, -level);\r\n\t\t\tconst width = Math.floor(texture.image.width * levelScale);\r\n\t\t\tconst height = Math.floor(texture.image.height * levelScale);\r\n\t\t\tlet glFormat = utils.convert(texture.format);\r\n\r\n\t\t\tif (capabilities.isWebGL2) {\r\n\t\t\t\t// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\r\n\t\t\t\t// Not needed in Chrome 93+\r\n\t\t\t\tif (glFormat === _gl.RGB) glFormat = _gl.RGB8;\r\n\t\t\t\tif (glFormat === _gl.RGBA) glFormat = _gl.RGBA8;\r\n\t\t\t}\r\n\r\n\t\t\ttextures.setTexture2D(texture, 0);\r\n\r\n\t\t\t_gl.copyTexImage2D(_gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0);\r\n\r\n\t\t\tstate.unbindTexture();\r\n\t\t};\r\n\r\n\t\tthis.copyTextureToTexture = function (position, srcTexture, dstTexture, level = 0) {\r\n\t\t\tconst width = srcTexture.image.width;\r\n\t\t\tconst height = srcTexture.image.height;\r\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\r\n\t\t\tconst glType = utils.convert(dstTexture.type);\r\n\t\t\ttextures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\r\n\t\t\t// parameters, make sure they are correct for the dstTexture\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\r\n\r\n\t\t\tif (srcTexture.isDataTexture) {\r\n\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\r\n\t\t\t} else {\r\n\t\t\t\tif (srcTexture.isCompressedTexture) {\r\n\t\t\t\t\t_gl.compressedTexSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image);\r\n\t\t\t\t}\r\n\t\t\t} // Generate mipmaps only when copying level 0\r\n\r\n\r\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(_gl.TEXTURE_2D);\r\n\t\t\tstate.unbindTexture();\r\n\t\t};\r\n\r\n\t\tthis.copyTextureToTexture3D = function (sourceBox, position, srcTexture, dstTexture, level = 0) {\r\n\t\t\tif (_this.isWebGL1Renderer) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\r\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\r\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\r\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\r\n\t\t\tconst glType = utils.convert(dstTexture.type);\r\n\t\t\tlet glTarget;\r\n\r\n\t\t\tif (dstTexture.isDataTexture3D) {\r\n\t\t\t\ttextures.setTexture3D(dstTexture, 0);\r\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\r\n\t\t\t} else if (dstTexture.isDataTexture2DArray) {\r\n\t\t\t\ttextures.setTexture2DArray(dstTexture, 0);\r\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\r\n\r\n\t\t\tconst unpackRowLen = _gl.getParameter(_gl.UNPACK_ROW_LENGTH);\r\n\r\n\t\t\tconst unpackImageHeight = _gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT);\r\n\r\n\t\t\tconst unpackSkipPixels = _gl.getParameter(_gl.UNPACK_SKIP_PIXELS);\r\n\r\n\t\t\tconst unpackSkipRows = _gl.getParameter(_gl.UNPACK_SKIP_ROWS);\r\n\r\n\t\t\tconst unpackSkipImages = _gl.getParameter(_gl.UNPACK_SKIP_IMAGES);\r\n\r\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[0] : srcTexture.image;\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, image.width);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, image.height);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, sourceBox.min.x);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, sourceBox.min.y);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, sourceBox.min.z);\r\n\r\n\t\t\tif (srcTexture.isDataTexture || srcTexture.isDataTexture3D) {\r\n\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data);\r\n\t\t\t} else {\r\n\t\t\t\tif (srcTexture.isCompressedTexture) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.');\r\n\r\n\t\t\t\t\t_gl.compressedTexSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, unpackRowLen);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, unpackSkipRows);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, unpackSkipImages); // Generate mipmaps only when copying level 0\r\n\r\n\r\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\r\n\t\t\tstate.unbindTexture();\r\n\t\t};\r\n\r\n\t\tthis.initTexture = function (texture) {\r\n\t\t\ttextures.setTexture2D(texture, 0);\r\n\t\t\tstate.unbindTexture();\r\n\t\t};\r\n\r\n\t\tthis.resetState = function () {\r\n\t\t\t_currentActiveCubeFace = 0;\r\n\t\t\t_currentActiveMipmapLevel = 0;\r\n\t\t\t_currentRenderTarget = null;\r\n\t\t\tstate.reset();\r\n\t\t\tbindingStates.reset();\r\n\t\t};\r\n\r\n\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\r\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\r\n\t\t\t\tdetail: this\r\n\t\t\t})); // eslint-disable-line no-undef\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tclass WebGL1Renderer extends WebGLRenderer {}\r\n\r\n\tWebGL1Renderer.prototype.isWebGL1Renderer = true;\r\n\r\n\tclass FogExp2 {\r\n\t\tconstructor(color, density = 0.00025) {\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.color = new Color(color);\r\n\t\t\tthis.density = density;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new FogExp2(this.color, this.density);\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'FogExp2',\r\n\t\t\t\tcolor: this.color.getHex(),\r\n\t\t\t\tdensity: this.density\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tFogExp2.prototype.isFogExp2 = true;\r\n\r\n\tclass Fog {\r\n\t\tconstructor(color, near = 1, far = 1000) {\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.color = new Color(color);\r\n\t\t\tthis.near = near;\r\n\t\t\tthis.far = far;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Fog(this.color, this.near, this.far);\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'Fog',\r\n\t\t\t\tcolor: this.color.getHex(),\r\n\t\t\t\tnear: this.near,\r\n\t\t\t\tfar: this.far\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tFog.prototype.isFog = true;\r\n\r\n\tclass Scene extends Object3D {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Scene';\r\n\t\t\tthis.background = null;\r\n\t\t\tthis.environment = null;\r\n\t\t\tthis.fog = null;\r\n\t\t\tthis.overrideMaterial = null;\r\n\t\t\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n\t\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\r\n\t\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\r\n\t\t\t\t\tdetail: this\r\n\t\t\t\t})); // eslint-disable-line no-undef\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcopy(source, recursive) {\r\n\t\t\tsuper.copy(source, recursive);\r\n\t\t\tif (source.background !== null) this.background = source.background.clone();\r\n\t\t\tif (source.environment !== null) this.environment = source.environment.clone();\r\n\t\t\tif (source.fog !== null) this.fog = source.fog.clone();\r\n\t\t\tif (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\r\n\t\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tif (this.fog !== null) data.object.fog = this.fog.toJSON();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tScene.prototype.isScene = true;\r\n\r\n\tclass InterleavedBuffer {\r\n\t\tconstructor(array, stride) {\r\n\t\t\tthis.array = array;\r\n\t\t\tthis.stride = stride;\r\n\t\t\tthis.count = array !== undefined ? array.length / stride : 0;\r\n\t\t\tthis.usage = StaticDrawUsage;\r\n\t\t\tthis.updateRange = {\r\n\t\t\t\toffset: 0,\r\n\t\t\t\tcount: -1\r\n\t\t\t};\r\n\t\t\tthis.version = 0;\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t}\r\n\r\n\t\tonUploadCallback() {}\r\n\r\n\t\tset needsUpdate(value) {\r\n\t\t\tif (value === true) this.version++;\r\n\t\t}\r\n\r\n\t\tsetUsage(value) {\r\n\t\t\tthis.usage = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.array = new source.array.constructor(source.array);\r\n\t\t\tthis.count = source.count;\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.usage = source.usage;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyAt(index1, attribute, index2) {\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\r\n\t\t\tfor (let i = 0, l = this.stride; i < l; i++) {\r\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tset(value, offset = 0) {\r\n\t\t\tthis.array.set(value, offset);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone(data) {\r\n\t\t\tif (data.arrayBuffers === undefined) {\r\n\t\t\t\tdata.arrayBuffers = {};\r\n\t\t\t}\r\n\r\n\t\t\tif (this.array.buffer._uuid === undefined) {\r\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\r\n\t\t\t}\r\n\r\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\r\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\r\n\t\t\t}\r\n\r\n\t\t\tconst array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\r\n\t\t\tconst ib = new this.constructor(array, this.stride);\r\n\t\t\tib.setUsage(this.usage);\r\n\t\t\treturn ib;\r\n\t\t}\r\n\r\n\t\tonUpload(callback) {\r\n\t\t\tthis.onUploadCallback = callback;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(data) {\r\n\t\t\tif (data.arrayBuffers === undefined) {\r\n\t\t\t\tdata.arrayBuffers = {};\r\n\t\t\t} // generate UUID for array buffer if necessary\r\n\r\n\r\n\t\t\tif (this.array.buffer._uuid === undefined) {\r\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\r\n\t\t\t}\r\n\r\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\r\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer));\r\n\t\t\t} //\r\n\r\n\r\n\t\t\treturn {\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tbuffer: this.array.buffer._uuid,\r\n\t\t\t\ttype: this.array.constructor.name,\r\n\t\t\t\tstride: this.stride\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tInterleavedBuffer.prototype.isInterleavedBuffer = true;\r\n\r\n\tconst _vector$6 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass InterleavedBufferAttribute {\r\n\t\tconstructor(interleavedBuffer, itemSize, offset, normalized = false) {\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.data = interleavedBuffer;\r\n\t\t\tthis.itemSize = itemSize;\r\n\t\t\tthis.offset = offset;\r\n\t\t\tthis.normalized = normalized === true;\r\n\t\t}\r\n\r\n\t\tget count() {\r\n\t\t\treturn this.data.count;\r\n\t\t}\r\n\r\n\t\tget array() {\r\n\t\t\treturn this.data.array;\r\n\t\t}\r\n\r\n\t\tset needsUpdate(value) {\r\n\t\t\tthis.data.needsUpdate = value;\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(m) {\r\n\t\t\tfor (let i = 0, l = this.data.count; i < l; i++) {\r\n\t\t\t\t_vector$6.x = this.getX(i);\r\n\t\t\t\t_vector$6.y = this.getY(i);\r\n\t\t\t\t_vector$6.z = this.getZ(i);\r\n\r\n\t\t\t\t_vector$6.applyMatrix4(m);\r\n\r\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyNormalMatrix(m) {\r\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t_vector$6.x = this.getX(i);\r\n\t\t\t\t_vector$6.y = this.getY(i);\r\n\t\t\t\t_vector$6.z = this.getZ(i);\r\n\r\n\t\t\t\t_vector$6.applyNormalMatrix(m);\r\n\r\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttransformDirection(m) {\r\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t_vector$6.x = this.getX(i);\r\n\t\t\t\t_vector$6.y = this.getY(i);\r\n\t\t\t\t_vector$6.z = this.getZ(i);\r\n\r\n\t\t\t\t_vector$6.transformDirection(m);\r\n\r\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetX(index, x) {\r\n\t\t\tthis.data.array[index * this.data.stride + this.offset] = x;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetY(index, y) {\r\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 1] = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetZ(index, z) {\r\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 2] = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetW(index, w) {\r\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 3] = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetX(index) {\r\n\t\t\treturn this.data.array[index * this.data.stride + this.offset];\r\n\t\t}\r\n\r\n\t\tgetY(index) {\r\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 1];\r\n\t\t}\r\n\r\n\t\tgetZ(index) {\r\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 2];\r\n\t\t}\r\n\r\n\t\tgetW(index) {\r\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 3];\r\n\t\t}\r\n\r\n\t\tsetXY(index, x, y) {\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\t\tthis.data.array[index + 0] = x;\r\n\t\t\tthis.data.array[index + 1] = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetXYZ(index, x, y, z) {\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\t\tthis.data.array[index + 0] = x;\r\n\t\t\tthis.data.array[index + 1] = y;\r\n\t\t\tthis.data.array[index + 2] = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetXYZW(index, x, y, z, w) {\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\t\tthis.data.array[index + 0] = x;\r\n\t\t\tthis.data.array[index + 1] = y;\r\n\t\t\tthis.data.array[index + 2] = z;\r\n\t\t\tthis.data.array[index + 3] = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone(data) {\r\n\t\t\tif (data === undefined) {\r\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');\r\n\t\t\t\tconst array = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\r\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\r\n\r\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\r\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\r\n\t\t\t} else {\r\n\t\t\t\tif (data.interleavedBuffers === undefined) {\r\n\t\t\t\t\tdata.interleavedBuffers = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\r\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.clone(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON(data) {\r\n\t\t\tif (data === undefined) {\r\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');\r\n\t\t\t\tconst array = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\r\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\r\n\r\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\r\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} // deinterleave data and save it as an ordinary buffer attribute for now\r\n\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\titemSize: this.itemSize,\r\n\t\t\t\t\ttype: this.array.constructor.name,\r\n\t\t\t\t\tarray: array,\r\n\t\t\t\t\tnormalized: this.normalized\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\t// save as true interlaved attribtue\r\n\t\t\t\tif (data.interleavedBuffers === undefined) {\r\n\t\t\t\t\tdata.interleavedBuffers = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\r\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisInterleavedBufferAttribute: true,\r\n\t\t\t\t\titemSize: this.itemSize,\r\n\t\t\t\t\tdata: this.data.uuid,\r\n\t\t\t\t\toffset: this.offset,\r\n\t\t\t\t\tnormalized: this.normalized\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\trotation: <float>,\r\n\t *\tsizeAttenuation: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tclass SpriteMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'SpriteMaterial';\r\n\t\t\tthis.color = new Color(0xffffff);\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.rotation = 0;\r\n\t\t\tthis.sizeAttenuation = true;\r\n\t\t\tthis.transparent = true;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.rotation = source.rotation;\r\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\r\n\r\n\tlet _geometry;\r\n\r\n\tconst _intersectPoint = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _worldScale = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _mvPosition = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _alignedPosition = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _rotatedPosition = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _viewWorldMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _vA = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vB = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vC = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _uvA = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _uvB = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _uvC = /*@__PURE__*/new Vector2();\r\n\r\n\tclass Sprite extends Object3D {\r\n\t\tconstructor(material) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Sprite';\r\n\r\n\t\t\tif (_geometry === undefined) {\r\n\t\t\t\t_geometry = new BufferGeometry();\r\n\t\t\t\tconst float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\r\n\t\t\t\tconst interleavedBuffer = new InterleavedBuffer(float32Array, 5);\r\n\r\n\t\t\t\t_geometry.setIndex([0, 1, 2, 0, 2, 3]);\r\n\r\n\t\t\t\t_geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\r\n\r\n\t\t\t\t_geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\r\n\t\t\t}\r\n\r\n\t\t\tthis.geometry = _geometry;\r\n\t\t\tthis.material = material !== undefined ? material : new SpriteMaterial();\r\n\t\t\tthis.center = new Vector2(0.5, 0.5);\r\n\t\t}\r\n\r\n\t\traycast(raycaster, intersects) {\r\n\t\t\tif (raycaster.camera === null) {\r\n\t\t\t\tconsole.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\r\n\t\t\t}\r\n\r\n\t\t\t_worldScale.setFromMatrixScale(this.matrixWorld);\r\n\r\n\t\t\t_viewWorldMatrix.copy(raycaster.camera.matrixWorld);\r\n\r\n\t\t\tthis.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\r\n\r\n\t\t\t_mvPosition.setFromMatrixPosition(this.modelViewMatrix);\r\n\r\n\t\t\tif (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\r\n\t\t\t\t_worldScale.multiplyScalar(-_mvPosition.z);\r\n\t\t\t}\r\n\r\n\t\t\tconst rotation = this.material.rotation;\r\n\t\t\tlet sin, cos;\r\n\r\n\t\t\tif (rotation !== 0) {\r\n\t\t\t\tcos = Math.cos(rotation);\r\n\t\t\t\tsin = Math.sin(rotation);\r\n\t\t\t}\r\n\r\n\t\t\tconst center = this.center;\r\n\t\t\ttransformVertex(_vA.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\r\n\t\t\ttransformVertex(_vB.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\r\n\t\t\ttransformVertex(_vC.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\r\n\r\n\t\t\t_uvA.set(0, 0);\r\n\r\n\t\t\t_uvB.set(1, 0);\r\n\r\n\t\t\t_uvC.set(1, 1); // check first triangle\r\n\r\n\r\n\t\t\tlet intersect = raycaster.ray.intersectTriangle(_vA, _vB, _vC, false, _intersectPoint);\r\n\r\n\t\t\tif (intersect === null) {\r\n\t\t\t\t// check second triangle\r\n\t\t\t\ttransformVertex(_vB.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\r\n\r\n\t\t\t\t_uvB.set(0, 1);\r\n\r\n\t\t\t\tintersect = raycaster.ray.intersectTriangle(_vA, _vC, _vB, false, _intersectPoint);\r\n\r\n\t\t\t\tif (intersect === null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectPoint);\r\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\r\n\t\t\tintersects.push({\r\n\t\t\t\tdistance: distance,\r\n\t\t\t\tpoint: _intersectPoint.clone(),\r\n\t\t\t\tuv: Triangle.getUV(_intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2()),\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tif (source.center !== undefined) this.center.copy(source.center);\r\n\t\t\tthis.material = source.material;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSprite.prototype.isSprite = true;\r\n\r\n\tfunction transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\r\n\t\t// compute position in camera space\r\n\t\t_alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\r\n\r\n\r\n\t\tif (sin !== undefined) {\r\n\t\t\t_rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\r\n\t\t\t_rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\r\n\t\t} else {\r\n\t\t\t_rotatedPosition.copy(_alignedPosition);\r\n\t\t}\r\n\r\n\t\tvertexPosition.copy(mvPosition);\r\n\t\tvertexPosition.x += _rotatedPosition.x;\r\n\t\tvertexPosition.y += _rotatedPosition.y; // transform to world space\r\n\r\n\t\tvertexPosition.applyMatrix4(_viewWorldMatrix);\r\n\t}\r\n\r\n\tconst _v1$2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v2$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass LOD extends Object3D {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis._currentLevel = 0;\r\n\t\t\tthis.type = 'LOD';\r\n\t\t\tObject.defineProperties(this, {\r\n\t\t\t\tlevels: {\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tvalue: []\r\n\t\t\t\t},\r\n\t\t\t\tisLOD: {\r\n\t\t\t\t\tvalue: true\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.autoUpdate = true;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source, false);\r\n\t\t\tconst levels = source.levels;\r\n\r\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\r\n\t\t\t\tconst level = levels[i];\r\n\t\t\t\tthis.addLevel(level.object.clone(), level.distance);\r\n\t\t\t}\r\n\r\n\t\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddLevel(object, distance = 0) {\r\n\t\t\tdistance = Math.abs(distance);\r\n\t\t\tconst levels = this.levels;\r\n\t\t\tlet l;\r\n\r\n\t\t\tfor (l = 0; l < levels.length; l++) {\r\n\t\t\t\tif (distance < levels[l].distance) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlevels.splice(l, 0, {\r\n\t\t\t\tdistance: distance,\r\n\t\t\t\tobject: object\r\n\t\t\t});\r\n\t\t\tthis.add(object);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetCurrentLevel() {\r\n\t\t\treturn this._currentLevel;\r\n\t\t}\r\n\r\n\t\tgetObjectForDistance(distance) {\r\n\t\t\tconst levels = this.levels;\r\n\r\n\t\t\tif (levels.length > 0) {\r\n\t\t\t\tlet i, l;\r\n\r\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\r\n\t\t\t\t\tif (distance < levels[i].distance) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn levels[i - 1].object;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\traycast(raycaster, intersects) {\r\n\t\t\tconst levels = this.levels;\r\n\r\n\t\t\tif (levels.length > 0) {\r\n\t\t\t\t_v1$2.setFromMatrixPosition(this.matrixWorld);\r\n\r\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(_v1$2);\r\n\t\t\t\tthis.getObjectForDistance(distance).raycast(raycaster, intersects);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdate(camera) {\r\n\t\t\tconst levels = this.levels;\r\n\r\n\t\t\tif (levels.length > 1) {\r\n\t\t\t\t_v1$2.setFromMatrixPosition(camera.matrixWorld);\r\n\r\n\t\t\t\t_v2$1.setFromMatrixPosition(this.matrixWorld);\r\n\r\n\t\t\t\tconst distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\r\n\t\t\t\tlevels[0].object.visible = true;\r\n\t\t\t\tlet i, l;\r\n\r\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\r\n\t\t\t\t\tif (distance >= levels[i].distance) {\r\n\t\t\t\t\t\tlevels[i - 1].object.visible = false;\r\n\t\t\t\t\t\tlevels[i].object.visible = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._currentLevel = i - 1;\r\n\r\n\t\t\t\tfor (; i < l; i++) {\r\n\t\t\t\t\tlevels[i].object.visible = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tif (this.autoUpdate === false) data.object.autoUpdate = false;\r\n\t\t\tdata.object.levels = [];\r\n\t\t\tconst levels = this.levels;\r\n\r\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\r\n\t\t\t\tconst level = levels[i];\r\n\t\t\t\tdata.object.levels.push({\r\n\t\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\t\tdistance: level.distance\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _basePosition = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _skinIndex = /*@__PURE__*/new Vector4();\r\n\r\n\tconst _skinWeight = /*@__PURE__*/new Vector4();\r\n\r\n\tconst _vector$5 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _matrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tclass SkinnedMesh extends Mesh {\r\n\t\tconstructor(geometry, material) {\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'SkinnedMesh';\r\n\t\t\tthis.bindMode = 'attached';\r\n\t\t\tthis.bindMatrix = new Matrix4();\r\n\t\t\tthis.bindMatrixInverse = new Matrix4();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.bindMode = source.bindMode;\r\n\t\t\tthis.bindMatrix.copy(source.bindMatrix);\r\n\t\t\tthis.bindMatrixInverse.copy(source.bindMatrixInverse);\r\n\t\t\tthis.skeleton = source.skeleton;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tbind(skeleton, bindMatrix) {\r\n\t\t\tthis.skeleton = skeleton;\r\n\r\n\t\t\tif (bindMatrix === undefined) {\r\n\t\t\t\tthis.updateMatrixWorld(true);\r\n\t\t\t\tthis.skeleton.calculateInverses();\r\n\t\t\t\tbindMatrix = this.matrixWorld;\r\n\t\t\t}\r\n\r\n\t\t\tthis.bindMatrix.copy(bindMatrix);\r\n\t\t\tthis.bindMatrixInverse.copy(bindMatrix).invert();\r\n\t\t}\r\n\r\n\t\tpose() {\r\n\t\t\tthis.skeleton.pose();\r\n\t\t}\r\n\r\n\t\tnormalizeSkinWeights() {\r\n\t\t\tconst vector = new Vector4();\r\n\t\t\tconst skinWeight = this.geometry.attributes.skinWeight;\r\n\r\n\t\t\tfor (let i = 0, l = skinWeight.count; i < l; i++) {\r\n\t\t\t\tvector.x = skinWeight.getX(i);\r\n\t\t\t\tvector.y = skinWeight.getY(i);\r\n\t\t\t\tvector.z = skinWeight.getZ(i);\r\n\t\t\t\tvector.w = skinWeight.getW(i);\r\n\t\t\t\tconst scale = 1.0 / vector.manhattanLength();\r\n\r\n\t\t\t\tif (scale !== Infinity) {\r\n\t\t\t\t\tvector.multiplyScalar(scale);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvector.set(1, 0, 0, 0); // do something reasonable\r\n\t\t\t\t}\r\n\r\n\t\t\t\tskinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\r\n\t\t\tif (this.bindMode === 'attached') {\r\n\t\t\t\tthis.bindMatrixInverse.copy(this.matrixWorld).invert();\r\n\t\t\t} else if (this.bindMode === 'detached') {\r\n\t\t\t\tthis.bindMatrixInverse.copy(this.bindMatrix).invert();\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tboneTransform(index, target) {\r\n\t\t\tconst skeleton = this.skeleton;\r\n\t\t\tconst geometry = this.geometry;\r\n\r\n\t\t\t_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\r\n\r\n\t\t\t_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\r\n\r\n\t\t\t_basePosition.copy(target).applyMatrix4(this.bindMatrix);\r\n\r\n\t\t\ttarget.set(0, 0, 0);\r\n\r\n\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\tconst weight = _skinWeight.getComponent(i);\r\n\r\n\t\t\t\tif (weight !== 0) {\r\n\t\t\t\t\tconst boneIndex = _skinIndex.getComponent(i);\r\n\r\n\t\t\t\t\t_matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\r\n\r\n\t\t\t\t\ttarget.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix), weight);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn target.applyMatrix4(this.bindMatrixInverse);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSkinnedMesh.prototype.isSkinnedMesh = true;\r\n\r\n\tclass Bone extends Object3D {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Bone';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBone.prototype.isBone = true;\r\n\r\n\tclass DataTexture extends Texture {\r\n\t\tconstructor(data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding) {\r\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\r\n\t\t\tthis.image = {\r\n\t\t\t\tdata: data,\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height\r\n\t\t\t};\r\n\t\t\tthis.magFilter = magFilter;\r\n\t\t\tthis.minFilter = minFilter;\r\n\t\t\tthis.generateMipmaps = false;\r\n\t\t\tthis.flipY = false;\r\n\t\t\tthis.unpackAlignment = 1;\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tDataTexture.prototype.isDataTexture = true;\r\n\r\n\tconst _offsetMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _identityMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tclass Skeleton {\r\n\t\tconstructor(bones = [], boneInverses = []) {\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t\tthis.bones = bones.slice(0);\r\n\t\t\tthis.boneInverses = boneInverses;\r\n\t\t\tthis.boneMatrices = null;\r\n\t\t\tthis.boneTexture = null;\r\n\t\t\tthis.boneTextureSize = 0;\r\n\t\t\tthis.frame = -1;\r\n\t\t\tthis.init();\r\n\t\t}\r\n\r\n\t\tinit() {\r\n\t\t\tconst bones = this.bones;\r\n\t\t\tconst boneInverses = this.boneInverses;\r\n\t\t\tthis.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\r\n\r\n\t\t\tif (boneInverses.length === 0) {\r\n\t\t\t\tthis.calculateInverses();\r\n\t\t\t} else {\r\n\t\t\t\t// handle special case\r\n\t\t\t\tif (bones.length !== boneInverses.length) {\r\n\t\t\t\t\tconsole.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\r\n\t\t\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\r\n\t\t\t\t\t\tthis.boneInverses.push(new Matrix4());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcalculateInverses() {\r\n\t\t\tthis.boneInverses.length = 0;\r\n\r\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\r\n\t\t\t\tconst inverse = new Matrix4();\r\n\r\n\t\t\t\tif (this.bones[i]) {\r\n\t\t\t\t\tinverse.copy(this.bones[i].matrixWorld).invert();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boneInverses.push(inverse);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpose() {\r\n\t\t\t// recover the bind-time world matrices\r\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\r\n\t\t\t\tconst bone = this.bones[i];\r\n\r\n\t\t\t\tif (bone) {\r\n\t\t\t\t\tbone.matrixWorld.copy(this.boneInverses[i]).invert();\r\n\t\t\t\t}\r\n\t\t\t} // compute the local matrices, positions, rotations and scales\r\n\r\n\r\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\r\n\t\t\t\tconst bone = this.bones[i];\r\n\r\n\t\t\t\tif (bone) {\r\n\t\t\t\t\tif (bone.parent && bone.parent.isBone) {\r\n\t\t\t\t\t\tbone.matrix.copy(bone.parent.matrixWorld).invert();\r\n\t\t\t\t\t\tbone.matrix.multiply(bone.matrixWorld);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbone.matrix.copy(bone.matrixWorld);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tconst bones = this.bones;\r\n\t\t\tconst boneInverses = this.boneInverses;\r\n\t\t\tconst boneMatrices = this.boneMatrices;\r\n\t\t\tconst boneTexture = this.boneTexture; // flatten bone matrices to array\r\n\r\n\t\t\tfor (let i = 0, il = bones.length; i < il; i++) {\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\t\t\t\tconst matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\r\n\r\n\t\t\t\t_offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\r\n\r\n\t\t\t\t_offsetMatrix.toArray(boneMatrices, i * 16);\r\n\t\t\t}\r\n\r\n\t\t\tif (boneTexture !== null) {\r\n\t\t\t\tboneTexture.needsUpdate = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Skeleton(this.bones, this.boneInverses);\r\n\t\t}\r\n\r\n\t\tcomputeBoneTexture() {\r\n\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t//\t\t\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t//\twith\t8x8\tpixel texture max\t 16 bones * 4 pixels =\t(8 * 8)\r\n\t\t\t//\t\t\t 16x16 pixel texture max\t 64 bones * 4 pixels = (16 * 16)\r\n\t\t\t//\t\t\t 32x32 pixel texture max\t256 bones * 4 pixels = (32 * 32)\r\n\t\t\t//\t\t\t 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\t\t\tlet size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\r\n\r\n\t\t\tsize = ceilPowerOfTwo(size);\r\n\t\t\tsize = Math.max(size, 4);\r\n\t\t\tconst boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\r\n\r\n\t\t\tboneMatrices.set(this.boneMatrices); // copy current values\r\n\r\n\t\t\tconst boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\r\n\t\t\tthis.boneMatrices = boneMatrices;\r\n\t\t\tthis.boneTexture = boneTexture;\r\n\t\t\tthis.boneTextureSize = size;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetBoneByName(name) {\r\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\r\n\t\t\t\tconst bone = this.bones[i];\r\n\r\n\t\t\t\tif (bone.name === name) {\r\n\t\t\t\t\treturn bone;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tif (this.boneTexture !== null) {\r\n\t\t\t\tthis.boneTexture.dispose();\r\n\t\t\t\tthis.boneTexture = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfromJSON(json, bones) {\r\n\t\t\tthis.uuid = json.uuid;\r\n\r\n\t\t\tfor (let i = 0, l = json.bones.length; i < l; i++) {\r\n\t\t\t\tconst uuid = json.bones[i];\r\n\t\t\t\tlet bone = bones[uuid];\r\n\r\n\t\t\t\tif (bone === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.Skeleton: No bone found with UUID:', uuid);\r\n\t\t\t\t\tbone = new Bone();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.bones.push(bone);\r\n\t\t\t\tthis.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\r\n\t\t\t}\r\n\r\n\t\t\tthis.init();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Skeleton',\r\n\t\t\t\t\tgenerator: 'Skeleton.toJSON'\r\n\t\t\t\t},\r\n\t\t\t\tbones: [],\r\n\t\t\t\tboneInverses: []\r\n\t\t\t};\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tconst bones = this.bones;\r\n\t\t\tconst boneInverses = this.boneInverses;\r\n\r\n\t\t\tfor (let i = 0, l = bones.length; i < l; i++) {\r\n\t\t\t\tconst bone = bones[i];\r\n\t\t\t\tdata.bones.push(bone.uuid);\r\n\t\t\t\tconst boneInverse = boneInverses[i];\r\n\t\t\t\tdata.boneInverses.push(boneInverse.toArray());\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass InstancedBufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized, meshPerAttribute = 1) {\r\n\t\t\tif (typeof normalized === 'number') {\r\n\t\t\t\tmeshPerAttribute = normalized;\r\n\t\t\t\tnormalized = false;\r\n\t\t\t\tconsole.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\r\n\t\t\t}\r\n\r\n\t\t\tsuper(array, itemSize, normalized);\r\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\r\n\t\t\tdata.isInstancedBufferAttribute = true;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\r\n\r\n\tconst _instanceLocalMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _instanceWorldMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _instanceIntersects = [];\r\n\r\n\tconst _mesh = /*@__PURE__*/new Mesh();\r\n\r\n\tclass InstancedMesh extends Mesh {\r\n\t\tconstructor(geometry, material, count) {\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.instanceMatrix = new InstancedBufferAttribute(new Float32Array(count * 16), 16);\r\n\t\t\tthis.instanceColor = null;\r\n\t\t\tthis.count = count;\r\n\t\t\tthis.frustumCulled = false;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.instanceMatrix.copy(source.instanceMatrix);\r\n\t\t\tif (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\r\n\t\t\tthis.count = source.count;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetColorAt(index, color) {\r\n\t\t\tcolor.fromArray(this.instanceColor.array, index * 3);\r\n\t\t}\r\n\r\n\t\tgetMatrixAt(index, matrix) {\r\n\t\t\tmatrix.fromArray(this.instanceMatrix.array, index * 16);\r\n\t\t}\r\n\r\n\t\traycast(raycaster, intersects) {\r\n\t\t\tconst matrixWorld = this.matrixWorld;\r\n\t\t\tconst raycastTimes = this.count;\r\n\t\t\t_mesh.geometry = this.geometry;\r\n\t\t\t_mesh.material = this.material;\r\n\t\t\tif (_mesh.material === undefined) return;\r\n\r\n\t\t\tfor (let instanceId = 0; instanceId < raycastTimes; instanceId++) {\r\n\t\t\t\t// calculate the world matrix for each instance\r\n\t\t\t\tthis.getMatrixAt(instanceId, _instanceLocalMatrix);\r\n\r\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\r\n\r\n\r\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\r\n\r\n\t\t\t\t_mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\r\n\r\n\r\n\t\t\t\tfor (let i = 0, l = _instanceIntersects.length; i < l; i++) {\r\n\t\t\t\t\tconst intersect = _instanceIntersects[i];\r\n\t\t\t\t\tintersect.instanceId = instanceId;\r\n\t\t\t\t\tintersect.object = this;\r\n\t\t\t\t\tintersects.push(intersect);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_instanceIntersects.length = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetColorAt(index, color) {\r\n\t\t\tif (this.instanceColor === null) {\r\n\t\t\t\tthis.instanceColor = new InstancedBufferAttribute(new Float32Array(this.instanceMatrix.count * 3), 3);\r\n\t\t\t}\r\n\r\n\t\t\tcolor.toArray(this.instanceColor.array, index * 3);\r\n\t\t}\r\n\r\n\t\tsetMatrixAt(index, matrix) {\r\n\t\t\tmatrix.toArray(this.instanceMatrix.array, index * 16);\r\n\t\t}\r\n\r\n\t\tupdateMorphTargets() {}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.dispatchEvent({\r\n\t\t\t\ttype: 'dispose'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tInstancedMesh.prototype.isInstancedMesh = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tlinewidth: <float>,\r\n\t *\tlinecap: \"round\",\r\n\t *\tlinejoin: \"round\"\r\n\t * }\r\n\t */\r\n\r\n\tclass LineBasicMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'LineBasicMaterial';\r\n\t\t\tthis.color = new Color(0xffffff);\r\n\t\t\tthis.linewidth = 1;\r\n\t\t\tthis.linecap = 'round';\r\n\t\t\tthis.linejoin = 'round';\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.linewidth = source.linewidth;\r\n\t\t\tthis.linecap = source.linecap;\r\n\t\t\tthis.linejoin = source.linejoin;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\r\n\r\n\tconst _start$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _end$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _inverseMatrix$1 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _ray$1 = /*@__PURE__*/new Ray();\r\n\r\n\tconst _sphere$1 = /*@__PURE__*/new Sphere();\r\n\r\n\tclass Line extends Object3D {\r\n\t\tconstructor(geometry = new BufferGeometry(), material = new LineBasicMaterial()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Line';\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = material;\r\n\t\t\tthis.updateMorphTargets();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.material = source.material;\r\n\t\t\tthis.geometry = source.geometry;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcomputeLineDistances() {\r\n\t\t\tconst geometry = this.geometry;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\t// we assume non-indexed geometry\r\n\t\t\t\tif (geometry.index === null) {\r\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\r\n\t\t\t\t\tconst lineDistances = [0];\r\n\r\n\t\t\t\t\tfor (let i = 1, l = positionAttribute.count; i < l; i++) {\r\n\t\t\t\t\t\t_start$1.fromBufferAttribute(positionAttribute, i - 1);\r\n\r\n\t\t\t\t\t\t_end$1.fromBufferAttribute(positionAttribute, i);\r\n\r\n\t\t\t\t\t\tlineDistances[i] = lineDistances[i - 1];\r\n\t\t\t\t\t\tlineDistances[i] += _start$1.distanceTo(_end$1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\r\n\t\t\t\t}\r\n\t\t\t} else if (geometry.isGeometry) {\r\n\t\t\t\tconsole.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\traycast(raycaster, intersects) {\r\n\t\t\tconst geometry = this.geometry;\r\n\t\t\tconst matrixWorld = this.matrixWorld;\r\n\t\t\tconst threshold = raycaster.params.Line.threshold;\r\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\r\n\r\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere$1.copy(geometry.boundingSphere);\r\n\r\n\t\t\t_sphere$1.applyMatrix4(matrixWorld);\r\n\r\n\t\t\t_sphere$1.radius += threshold;\r\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$1) === false) return; //\r\n\r\n\t\t\t_inverseMatrix$1.copy(matrixWorld).invert();\r\n\r\n\t\t\t_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\r\n\r\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\r\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tconst vStart = new Vector3();\r\n\t\t\tconst vEnd = new Vector3();\r\n\t\t\tconst interSegment = new Vector3();\r\n\t\t\tconst interRay = new Vector3();\r\n\t\t\tconst step = this.isLineSegments ? 2 : 1;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\tconst index = geometry.index;\r\n\t\t\t\tconst attributes = geometry.attributes;\r\n\t\t\t\tconst positionAttribute = attributes.position;\r\n\r\n\t\t\t\tif (index !== null) {\r\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\r\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\r\n\t\t\t\t\t\tconst a = index.getX(i);\r\n\t\t\t\t\t\tconst b = index.getX(i + 1);\r\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, a);\r\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, b);\r\n\r\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\r\n\r\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\r\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\r\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\r\n\t\t\t\t\t\tintersects.push({\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\r\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\r\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, i);\r\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, i + 1);\r\n\r\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\r\n\r\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\r\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\r\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\r\n\t\t\t\t\t\tintersects.push({\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (geometry.isGeometry) {\r\n\t\t\t\tconsole.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdateMorphTargets() {\r\n\t\t\tconst geometry = this.geometry;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\t\t\tconst keys = Object.keys(morphAttributes);\r\n\r\n\t\t\t\tif (keys.length > 0) {\r\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\r\n\r\n\t\t\t\t\tif (morphAttribute !== undefined) {\r\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\r\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\r\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\r\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst morphTargets = geometry.morphTargets;\r\n\r\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\r\n\t\t\t\t\tconsole.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLine.prototype.isLine = true;\r\n\r\n\tconst _start = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _end = /*@__PURE__*/new Vector3();\r\n\r\n\tclass LineSegments extends Line {\r\n\t\tconstructor(geometry, material) {\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'LineSegments';\r\n\t\t}\r\n\r\n\t\tcomputeLineDistances() {\r\n\t\t\tconst geometry = this.geometry;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\t// we assume non-indexed geometry\r\n\t\t\t\tif (geometry.index === null) {\r\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\r\n\t\t\t\t\tconst lineDistances = [];\r\n\r\n\t\t\t\t\tfor (let i = 0, l = positionAttribute.count; i < l; i += 2) {\r\n\t\t\t\t\t\t_start.fromBufferAttribute(positionAttribute, i);\r\n\r\n\t\t\t\t\t\t_end.fromBufferAttribute(positionAttribute, i + 1);\r\n\r\n\t\t\t\t\t\tlineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\r\n\t\t\t\t\t\tlineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\r\n\t\t\t\t}\r\n\t\t\t} else if (geometry.isGeometry) {\r\n\t\t\t\tconsole.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLineSegments.prototype.isLineSegments = true;\r\n\r\n\tclass LineLoop extends Line {\r\n\t\tconstructor(geometry, material) {\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'LineLoop';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLineLoop.prototype.isLineLoop = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\topacity: <float>,\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tsize: <float>,\r\n\t *\tsizeAttenuation: <bool>\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tclass PointsMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'PointsMaterial';\r\n\t\t\tthis.color = new Color(0xffffff);\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.size = 1;\r\n\t\t\tthis.sizeAttenuation = true;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.size = source.size;\r\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPointsMaterial.prototype.isPointsMaterial = true;\r\n\r\n\tconst _inverseMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _ray = /*@__PURE__*/new Ray();\r\n\r\n\tconst _sphere = /*@__PURE__*/new Sphere();\r\n\r\n\tconst _position$2 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Points extends Object3D {\r\n\t\tconstructor(geometry = new BufferGeometry(), material = new PointsMaterial()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Points';\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = material;\r\n\t\t\tthis.updateMorphTargets();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.material = source.material;\r\n\t\t\tthis.geometry = source.geometry;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\traycast(raycaster, intersects) {\r\n\t\t\tconst geometry = this.geometry;\r\n\t\t\tconst matrixWorld = this.matrixWorld;\r\n\t\t\tconst threshold = raycaster.params.Points.threshold;\r\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\r\n\r\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere.copy(geometry.boundingSphere);\r\n\r\n\t\t\t_sphere.applyMatrix4(matrixWorld);\r\n\r\n\t\t\t_sphere.radius += threshold;\r\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere) === false) return; //\r\n\r\n\t\t\t_inverseMatrix.copy(matrixWorld).invert();\r\n\r\n\t\t\t_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\r\n\r\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\r\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\tconst index = geometry.index;\r\n\t\t\t\tconst attributes = geometry.attributes;\r\n\t\t\t\tconst positionAttribute = attributes.position;\r\n\r\n\t\t\t\tif (index !== null) {\r\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\r\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\tfor (let i = start, il = end; i < il; i++) {\r\n\t\t\t\t\t\tconst a = index.getX(i);\r\n\r\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, a);\r\n\r\n\t\t\t\t\t\ttestPoint(_position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\r\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\tfor (let i = start, l = end; i < l; i++) {\r\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, i);\r\n\r\n\t\t\t\t\t\ttestPoint(_position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdateMorphTargets() {\r\n\t\t\tconst geometry = this.geometry;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\t\t\tconst keys = Object.keys(morphAttributes);\r\n\r\n\t\t\t\tif (keys.length > 0) {\r\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\r\n\r\n\t\t\t\t\tif (morphAttribute !== undefined) {\r\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\r\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\r\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\r\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst morphTargets = geometry.morphTargets;\r\n\r\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\r\n\t\t\t\t\tconsole.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPoints.prototype.isPoints = true;\r\n\r\n\tfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\r\n\t\tconst rayPointDistanceSq = _ray.distanceSqToPoint(point);\r\n\r\n\t\tif (rayPointDistanceSq < localThresholdSq) {\r\n\t\t\tconst intersectPoint = new Vector3();\r\n\r\n\t\t\t_ray.closestPointToPoint(point, intersectPoint);\r\n\r\n\t\t\tintersectPoint.applyMatrix4(matrixWorld);\r\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(intersectPoint);\r\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\r\n\t\t\tintersects.push({\r\n\t\t\t\tdistance: distance,\r\n\t\t\t\tdistanceToRay: Math.sqrt(rayPointDistanceSq),\r\n\t\t\t\tpoint: intersectPoint,\r\n\t\t\t\tindex: index,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: object\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tclass VideoTexture extends Texture {\r\n\t\tconstructor(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\r\n\t\t\tsuper(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\r\n\t\t\tthis.format = format !== undefined ? format : RGBFormat;\r\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\r\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\r\n\t\t\tthis.generateMipmaps = false;\r\n\t\t\tconst scope = this;\r\n\r\n\t\t\tfunction updateVideo() {\r\n\t\t\t\tscope.needsUpdate = true;\r\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\r\n\t\t\t}\r\n\r\n\t\t\tif ('requestVideoFrameCallback' in video) {\r\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this.image).copy(this);\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tconst video = this.image;\r\n\t\t\tconst hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\r\n\r\n\t\t\tif (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\r\n\t\t\t\tthis.needsUpdate = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tVideoTexture.prototype.isVideoTexture = true;\r\n\r\n\tclass CompressedTexture extends Texture {\r\n\t\tconstructor(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\r\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\r\n\t\t\tthis.image = {\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height\r\n\t\t\t};\r\n\t\t\tthis.mipmaps = mipmaps; // no flipping for cube textures\r\n\t\t\t// (also flipping doesn't work for compressed textures )\r\n\r\n\t\t\tthis.flipY = false; // can't generate mipmaps for compressed textures\r\n\t\t\t// mips must be embedded in DDS files\r\n\r\n\t\t\tthis.generateMipmaps = false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCompressedTexture.prototype.isCompressedTexture = true;\r\n\r\n\tclass CanvasTexture extends Texture {\r\n\t\tconstructor(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\r\n\t\t\tsuper(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCanvasTexture.prototype.isCanvasTexture = true;\r\n\r\n\tclass DepthTexture extends Texture {\r\n\t\tconstructor(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\r\n\t\t\tformat = format !== undefined ? format : DepthFormat;\r\n\r\n\t\t\tif (format !== DepthFormat && format !== DepthStencilFormat) {\r\n\t\t\t\tthrow new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\r\n\t\t\t}\r\n\r\n\t\t\tif (type === undefined && format === DepthFormat) type = UnsignedShortType;\r\n\t\t\tif (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\r\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\r\n\t\t\tthis.image = {\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height\r\n\t\t\t};\r\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n\t\t\tthis.flipY = false;\r\n\t\t\tthis.generateMipmaps = false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tDepthTexture.prototype.isDepthTexture = true;\r\n\r\n\tclass CircleGeometry extends BufferGeometry {\r\n\t\tconstructor(radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CircleGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tsegments: segments,\r\n\t\t\t\tthetaStart: thetaStart,\r\n\t\t\t\tthetaLength: thetaLength\r\n\t\t\t};\r\n\t\t\tsegments = Math.max(3, segments); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst uv = new Vector2(); // center point\r\n\r\n\t\t\tvertices.push(0, 0, 0);\r\n\t\t\tnormals.push(0, 0, 1);\r\n\t\t\tuvs.push(0.5, 0.5);\r\n\r\n\t\t\tfor (let s = 0, i = 3; s <= segments; s++, i += 3) {\r\n\t\t\t\tconst segment = thetaStart + s / segments * thetaLength; // vertex\r\n\r\n\t\t\t\tvertex.x = radius * Math.cos(segment);\r\n\t\t\t\tvertex.y = radius * Math.sin(segment);\r\n\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n\t\t\t\tnormals.push(0, 0, 1); // uvs\r\n\r\n\t\t\t\tuv.x = (vertices[i] / radius + 1) / 2;\r\n\t\t\t\tuv.y = (vertices[i + 1] / radius + 1) / 2;\r\n\t\t\t\tuvs.push(uv.x, uv.y);\r\n\t\t\t} // indices\r\n\r\n\r\n\t\t\tfor (let i = 1; i <= segments; i++) {\r\n\t\t\t\tindices.push(i, i + 1, 0);\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new CircleGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass CylinderGeometry extends BufferGeometry {\r\n\t\tconstructor(radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CylinderGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradiusTop: radiusTop,\r\n\t\t\t\tradiusBottom: radiusBottom,\r\n\t\t\t\theight: height,\r\n\t\t\t\tradialSegments: radialSegments,\r\n\t\t\t\theightSegments: heightSegments,\r\n\t\t\t\topenEnded: openEnded,\r\n\t\t\t\tthetaStart: thetaStart,\r\n\t\t\t\tthetaLength: thetaLength\r\n\t\t\t};\r\n\t\t\tconst scope = this;\r\n\t\t\tradialSegments = Math.floor(radialSegments);\r\n\t\t\theightSegments = Math.floor(heightSegments); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tlet index = 0;\r\n\t\t\tconst indexArray = [];\r\n\t\t\tconst halfHeight = height / 2;\r\n\t\t\tlet groupStart = 0; // generate geometry\r\n\r\n\t\t\tgenerateTorso();\r\n\r\n\t\t\tif (openEnded === false) {\r\n\t\t\t\tif (radiusTop > 0) generateCap(true);\r\n\t\t\t\tif (radiusBottom > 0) generateCap(false);\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\r\n\t\t\tfunction generateTorso() {\r\n\t\t\t\tconst normal = new Vector3();\r\n\t\t\t\tconst vertex = new Vector3();\r\n\t\t\t\tlet groupCount = 0; // this will be used to calculate the normal\r\n\r\n\t\t\t\tconst slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\r\n\r\n\t\t\t\tfor (let y = 0; y <= heightSegments; y++) {\r\n\t\t\t\t\tconst indexRow = [];\r\n\t\t\t\t\tconst v = y / heightSegments; // calculate the radius of the current row\r\n\r\n\t\t\t\t\tconst radius = v * (radiusBottom - radiusTop) + radiusTop;\r\n\r\n\t\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\r\n\t\t\t\t\t\tconst u = x / radialSegments;\r\n\t\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\r\n\t\t\t\t\t\tconst sinTheta = Math.sin(theta);\r\n\t\t\t\t\t\tconst cosTheta = Math.cos(theta); // vertex\r\n\r\n\t\t\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\t\t\tvertex.y = -v * height + halfHeight;\r\n\t\t\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n\t\t\t\t\t\tnormal.set(sinTheta, slope, cosTheta).normalize();\r\n\t\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n\t\t\t\t\t\tuvs.push(u, 1 - v); // save index of vertex in respective row\r\n\r\n\t\t\t\t\t\tindexRow.push(index++);\r\n\t\t\t\t\t} // now save vertices of the row in our index array\r\n\r\n\r\n\t\t\t\t\tindexArray.push(indexRow);\r\n\t\t\t\t} // generate indices\r\n\r\n\r\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\r\n\t\t\t\t\tfor (let y = 0; y < heightSegments; y++) {\r\n\t\t\t\t\t\t// we use the index array to access the correct indices\r\n\t\t\t\t\t\tconst a = indexArray[y][x];\r\n\t\t\t\t\t\tconst b = indexArray[y + 1][x];\r\n\t\t\t\t\t\tconst c = indexArray[y + 1][x + 1];\r\n\t\t\t\t\t\tconst d = indexArray[y][x + 1]; // faces\r\n\r\n\t\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\t\tindices.push(b, c, d); // update group counter\r\n\r\n\t\t\t\t\t\tgroupCount += 6;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\r\n\r\n\r\n\t\t\t\tscope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\r\n\r\n\t\t\t\tgroupStart += groupCount;\r\n\t\t\t}\r\n\r\n\t\t\tfunction generateCap(top) {\r\n\t\t\t\t// save the index of the first center vertex\r\n\t\t\t\tconst centerIndexStart = index;\r\n\t\t\t\tconst uv = new Vector2();\r\n\t\t\t\tconst vertex = new Vector3();\r\n\t\t\t\tlet groupCount = 0;\r\n\t\t\t\tconst radius = top === true ? radiusTop : radiusBottom;\r\n\t\t\t\tconst sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\r\n\t\t\t\t// because the geometry needs one set of uvs per face,\r\n\t\t\t\t// we must generate a center vertex per face/segment\r\n\r\n\t\t\t\tfor (let x = 1; x <= radialSegments; x++) {\r\n\t\t\t\t\t// vertex\r\n\t\t\t\t\tvertices.push(0, halfHeight * sign, 0); // normal\r\n\r\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\r\n\r\n\t\t\t\t\tuvs.push(0.5, 0.5); // increase index\r\n\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t} // save the index of the last center vertex\r\n\r\n\r\n\t\t\t\tconst centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\r\n\r\n\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\r\n\t\t\t\t\tconst u = x / radialSegments;\r\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\r\n\t\t\t\t\tconst cosTheta = Math.cos(theta);\r\n\t\t\t\t\tconst sinTheta = Math.sin(theta); // vertex\r\n\r\n\t\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\t\tvertex.y = halfHeight * sign;\r\n\t\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\r\n\r\n\t\t\t\t\tuv.x = cosTheta * 0.5 + 0.5;\r\n\t\t\t\t\tuv.y = sinTheta * 0.5 * sign + 0.5;\r\n\t\t\t\t\tuvs.push(uv.x, uv.y); // increase index\r\n\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t} // generate indices\r\n\r\n\r\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\r\n\t\t\t\t\tconst c = centerIndexStart + x;\r\n\t\t\t\t\tconst i = centerIndexEnd + x;\r\n\r\n\t\t\t\t\tif (top === true) {\r\n\t\t\t\t\t\t// face top\r\n\t\t\t\t\t\tindices.push(i, i + 1, c);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// face bottom\r\n\t\t\t\t\t\tindices.push(i + 1, i, c);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgroupCount += 3;\r\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\r\n\r\n\r\n\t\t\t\tscope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\r\n\r\n\t\t\t\tgroupStart += groupCount;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass ConeGeometry extends CylinderGeometry {\r\n\t\tconstructor(radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\r\n\t\t\tsuper(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\r\n\t\t\tthis.type = 'ConeGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\theight: height,\r\n\t\t\t\tradialSegments: radialSegments,\r\n\t\t\t\theightSegments: heightSegments,\r\n\t\t\t\topenEnded: openEnded,\r\n\t\t\t\tthetaStart: thetaStart,\r\n\t\t\t\tthetaLength: thetaLength\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new ConeGeometry(data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass PolyhedronGeometry extends BufferGeometry {\r\n\t\tconstructor(vertices = [], indices = [], radius = 1, detail = 0) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'PolyhedronGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tvertices: vertices,\r\n\t\t\t\tindices: indices,\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tdetail: detail\r\n\t\t\t}; // default buffer data\r\n\r\n\t\t\tconst vertexBuffer = [];\r\n\t\t\tconst uvBuffer = []; // the subdivision creates the vertex buffer data\r\n\r\n\t\t\tsubdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\r\n\r\n\t\t\tapplyRadius(radius); // finally, create the uv data\r\n\r\n\t\t\tgenerateUVs(); // build non-indexed geometry\r\n\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\r\n\r\n\t\t\tif (detail === 0) {\r\n\t\t\t\tthis.computeVertexNormals(); // flat normals\r\n\t\t\t} else {\r\n\t\t\t\tthis.normalizeNormals(); // smooth normals\r\n\t\t\t} // helper functions\r\n\r\n\r\n\t\t\tfunction subdivide(detail) {\r\n\t\t\t\tconst a = new Vector3();\r\n\t\t\t\tconst b = new Vector3();\r\n\t\t\t\tconst c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\r\n\r\n\t\t\t\tfor (let i = 0; i < indices.length; i += 3) {\r\n\t\t\t\t\t// get the vertices of the face\r\n\t\t\t\t\tgetVertexByIndex(indices[i + 0], a);\r\n\t\t\t\t\tgetVertexByIndex(indices[i + 1], b);\r\n\t\t\t\t\tgetVertexByIndex(indices[i + 2], c); // perform subdivision\r\n\r\n\t\t\t\t\tsubdivideFace(a, b, c, detail);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction subdivideFace(a, b, c, detail) {\r\n\t\t\t\tconst cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\r\n\r\n\t\t\t\tconst v = []; // construct all of the vertices for this subdivision\r\n\r\n\t\t\t\tfor (let i = 0; i <= cols; i++) {\r\n\t\t\t\t\tv[i] = [];\r\n\t\t\t\t\tconst aj = a.clone().lerp(c, i / cols);\r\n\t\t\t\t\tconst bj = b.clone().lerp(c, i / cols);\r\n\t\t\t\t\tconst rows = cols - i;\r\n\r\n\t\t\t\t\tfor (let j = 0; j <= rows; j++) {\r\n\t\t\t\t\t\tif (j === 0 && i === cols) {\r\n\t\t\t\t\t\t\tv[i][j] = aj;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tv[i][j] = aj.clone().lerp(bj, j / rows);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} // construct all of the faces\r\n\r\n\r\n\t\t\t\tfor (let i = 0; i < cols; i++) {\r\n\t\t\t\t\tfor (let j = 0; j < 2 * (cols - i) - 1; j++) {\r\n\t\t\t\t\t\tconst k = Math.floor(j / 2);\r\n\r\n\t\t\t\t\t\tif (j % 2 === 0) {\r\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\r\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\r\n\t\t\t\t\t\t\tpushVertex(v[i][k]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\r\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k + 1]);\r\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction applyRadius(radius) {\r\n\t\t\t\tconst vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\r\n\r\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\r\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\r\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\r\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\r\n\t\t\t\t\tvertex.normalize().multiplyScalar(radius);\r\n\t\t\t\t\tvertexBuffer[i + 0] = vertex.x;\r\n\t\t\t\t\tvertexBuffer[i + 1] = vertex.y;\r\n\t\t\t\t\tvertexBuffer[i + 2] = vertex.z;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction generateUVs() {\r\n\t\t\t\tconst vertex = new Vector3();\r\n\r\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\r\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\r\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\r\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\r\n\t\t\t\t\tconst u = azimuth(vertex) / 2 / Math.PI + 0.5;\r\n\t\t\t\t\tconst v = inclination(vertex) / Math.PI + 0.5;\r\n\t\t\t\t\tuvBuffer.push(u, 1 - v);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcorrectUVs();\r\n\t\t\t\tcorrectSeam();\r\n\t\t\t}\r\n\r\n\t\t\tfunction correctSeam() {\r\n\t\t\t\t// handle case when face straddles the seam, see #3269\r\n\t\t\t\tfor (let i = 0; i < uvBuffer.length; i += 6) {\r\n\t\t\t\t\t// uv data of a single face\r\n\t\t\t\t\tconst x0 = uvBuffer[i + 0];\r\n\t\t\t\t\tconst x1 = uvBuffer[i + 2];\r\n\t\t\t\t\tconst x2 = uvBuffer[i + 4];\r\n\t\t\t\t\tconst max = Math.max(x0, x1, x2);\r\n\t\t\t\t\tconst min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\r\n\r\n\t\t\t\t\tif (max > 0.9 && min < 0.1) {\r\n\t\t\t\t\t\tif (x0 < 0.2) uvBuffer[i + 0] += 1;\r\n\t\t\t\t\t\tif (x1 < 0.2) uvBuffer[i + 2] += 1;\r\n\t\t\t\t\t\tif (x2 < 0.2) uvBuffer[i + 4] += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction pushVertex(vertex) {\r\n\t\t\t\tvertexBuffer.push(vertex.x, vertex.y, vertex.z);\r\n\t\t\t}\r\n\r\n\t\t\tfunction getVertexByIndex(index, vertex) {\r\n\t\t\t\tconst stride = index * 3;\r\n\t\t\t\tvertex.x = vertices[stride + 0];\r\n\t\t\t\tvertex.y = vertices[stride + 1];\r\n\t\t\t\tvertex.z = vertices[stride + 2];\r\n\t\t\t}\r\n\r\n\t\t\tfunction correctUVs() {\r\n\t\t\t\tconst a = new Vector3();\r\n\t\t\t\tconst b = new Vector3();\r\n\t\t\t\tconst c = new Vector3();\r\n\t\t\t\tconst centroid = new Vector3();\r\n\t\t\t\tconst uvA = new Vector2();\r\n\t\t\t\tconst uvB = new Vector2();\r\n\t\t\t\tconst uvC = new Vector2();\r\n\r\n\t\t\t\tfor (let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\r\n\t\t\t\t\ta.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\r\n\t\t\t\t\tb.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\r\n\t\t\t\t\tc.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\r\n\t\t\t\t\tuvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\r\n\t\t\t\t\tuvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\r\n\t\t\t\t\tuvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\r\n\t\t\t\t\tcentroid.copy(a).add(b).add(c).divideScalar(3);\r\n\t\t\t\t\tconst azi = azimuth(centroid);\r\n\t\t\t\t\tcorrectUV(uvA, j + 0, a, azi);\r\n\t\t\t\t\tcorrectUV(uvB, j + 2, b, azi);\r\n\t\t\t\t\tcorrectUV(uvC, j + 4, c, azi);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction correctUV(uv, stride, vector, azimuth) {\r\n\t\t\t\tif (azimuth < 0 && uv.x === 1) {\r\n\t\t\t\t\tuvBuffer[stride] = uv.x - 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vector.x === 0 && vector.z === 0) {\r\n\t\t\t\t\tuvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\r\n\t\t\t\t}\r\n\t\t\t} // Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\r\n\t\t\tfunction azimuth(vector) {\r\n\t\t\t\treturn Math.atan2(vector.z, -vector.x);\r\n\t\t\t} // Angle above the XZ plane.\r\n\r\n\r\n\t\t\tfunction inclination(vector) {\r\n\t\t\t\treturn Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new PolyhedronGeometry(data.vertices, data.indices, data.radius, data.details);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass DodecahedronGeometry extends PolyhedronGeometry {\r\n\t\tconstructor(radius = 1, detail = 0) {\r\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\r\n\t\t\tconst r = 1 / t;\r\n\t\t\tconst vertices = [// (±1, ±1, ±1)\r\n\t\t\t-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\r\n\t\t\t0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\r\n\t\t\t-r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\r\n\t\t\t-t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\r\n\t\t\tconst indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\r\n\t\t\tsuper(vertices, indices, radius, detail);\r\n\t\t\tthis.type = 'DodecahedronGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tdetail: detail\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new DodecahedronGeometry(data.radius, data.detail);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _v0 = new Vector3();\r\n\r\n\tconst _v1$1 = new Vector3();\r\n\r\n\tconst _normal = new Vector3();\r\n\r\n\tconst _triangle = new Triangle();\r\n\r\n\tclass EdgesGeometry extends BufferGeometry {\r\n\t\tconstructor(geometry = null, thresholdAngle = 1) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'EdgesGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tthresholdAngle: thresholdAngle\r\n\t\t\t};\r\n\r\n\t\t\tif (geometry !== null) {\r\n\t\t\t\tconst precisionPoints = 4;\r\n\t\t\t\tconst precision = Math.pow(10, precisionPoints);\r\n\t\t\t\tconst thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\r\n\t\t\t\tconst indexAttr = geometry.getIndex();\r\n\t\t\t\tconst positionAttr = geometry.getAttribute('position');\r\n\t\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\r\n\t\t\t\tconst indexArr = [0, 0, 0];\r\n\t\t\t\tconst vertKeys = ['a', 'b', 'c'];\r\n\t\t\t\tconst hashes = new Array(3);\r\n\t\t\t\tconst edgeData = {};\r\n\t\t\t\tconst vertices = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < indexCount; i += 3) {\r\n\t\t\t\t\tif (indexAttr) {\r\n\t\t\t\t\t\tindexArr[0] = indexAttr.getX(i);\r\n\t\t\t\t\t\tindexArr[1] = indexAttr.getX(i + 1);\r\n\t\t\t\t\t\tindexArr[2] = indexAttr.getX(i + 2);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tindexArr[0] = i;\r\n\t\t\t\t\t\tindexArr[1] = i + 1;\r\n\t\t\t\t\t\tindexArr[2] = i + 2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\ta,\r\n\t\t\t\t\t\tb,\r\n\t\t\t\t\t\tc\r\n\t\t\t\t\t} = _triangle;\r\n\t\t\t\t\ta.fromBufferAttribute(positionAttr, indexArr[0]);\r\n\t\t\t\t\tb.fromBufferAttribute(positionAttr, indexArr[1]);\r\n\t\t\t\t\tc.fromBufferAttribute(positionAttr, indexArr[2]);\r\n\r\n\t\t\t\t\t_triangle.getNormal(_normal); // create hashes for the edge from the vertices\r\n\r\n\r\n\t\t\t\t\thashes[0] = `${Math.round(a.x * precision)},${Math.round(a.y * precision)},${Math.round(a.z * precision)}`;\r\n\t\t\t\t\thashes[1] = `${Math.round(b.x * precision)},${Math.round(b.y * precision)},${Math.round(b.z * precision)}`;\r\n\t\t\t\t\thashes[2] = `${Math.round(c.x * precision)},${Math.round(c.y * precision)},${Math.round(c.z * precision)}`; // skip degenerate triangles\r\n\r\n\t\t\t\t\tif (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} // iterate over every edge\r\n\r\n\r\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\t\t// get the first and next vertex making up the edge\r\n\t\t\t\t\t\tconst jNext = (j + 1) % 3;\r\n\t\t\t\t\t\tconst vecHash0 = hashes[j];\r\n\t\t\t\t\t\tconst vecHash1 = hashes[jNext];\r\n\t\t\t\t\t\tconst v0 = _triangle[vertKeys[j]];\r\n\t\t\t\t\t\tconst v1 = _triangle[vertKeys[jNext]];\r\n\t\t\t\t\t\tconst hash = `${vecHash0}_${vecHash1}`;\r\n\t\t\t\t\t\tconst reverseHash = `${vecHash1}_${vecHash0}`;\r\n\r\n\t\t\t\t\t\tif (reverseHash in edgeData && edgeData[reverseHash]) {\r\n\t\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\r\n\t\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\r\n\t\t\t\t\t\t\tif (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\r\n\t\t\t\t\t\t\t\tvertices.push(v0.x, v0.y, v0.z);\r\n\t\t\t\t\t\t\t\tvertices.push(v1.x, v1.y, v1.z);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tedgeData[reverseHash] = null;\r\n\t\t\t\t\t\t} else if (!(hash in edgeData)) {\r\n\t\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\r\n\t\t\t\t\t\t\tedgeData[hash] = {\r\n\t\t\t\t\t\t\t\tindex0: indexArr[j],\r\n\t\t\t\t\t\t\t\tindex1: indexArr[jNext],\r\n\t\t\t\t\t\t\t\tnormal: _normal.clone()\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} // iterate over all remaining, unmatched edges and add them to the vertex array\r\n\r\n\r\n\t\t\t\tfor (const key in edgeData) {\r\n\t\t\t\t\tif (edgeData[key]) {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tindex0,\r\n\t\t\t\t\t\t\tindex1\r\n\t\t\t\t\t\t} = edgeData[key];\r\n\r\n\t\t\t\t\t\t_v0.fromBufferAttribute(positionAttr, index0);\r\n\r\n\t\t\t\t\t\t_v1$1.fromBufferAttribute(positionAttr, index1);\r\n\r\n\t\t\t\t\t\tvertices.push(_v0.x, _v0.y, _v0.z);\r\n\t\t\t\t\t\tvertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Extensible curve object.\r\n\t *\r\n\t * Some common of curve methods:\r\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\r\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following curves inherit from THREE.Curve:\r\n\t *\r\n\t * -- 2D curves --\r\n\t * THREE.ArcCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.EllipseCurve\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.SplineCurve\r\n\t *\r\n\t * -- 3D curves --\r\n\t * THREE.CatmullRomCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath.\r\n\t *\r\n\t **/\r\n\r\n\tclass Curve {\r\n\t\tconstructor() {\r\n\t\t\tthis.type = 'Curve';\r\n\t\t\tthis.arcLengthDivisions = 200;\r\n\t\t} // Virtual base class method to overwrite and implement in subclasses\r\n\t\t//\t- t [0 .. 1]\r\n\r\n\r\n\t\tgetPoint() {\r\n\t\t\tconsole.warn('THREE.Curve: .getPoint() not implemented.');\r\n\t\t\treturn null;\r\n\t\t} // Get point at relative position in curve according to arc length\r\n\t\t// - u [0 .. 1]\r\n\r\n\r\n\t\tgetPointAt(u, optionalTarget) {\r\n\t\t\tconst t = this.getUtoTmapping(u);\r\n\t\t\treturn this.getPoint(t, optionalTarget);\r\n\t\t} // Get sequence of points using getPoint( t )\r\n\r\n\r\n\t\tgetPoints(divisions = 5) {\r\n\t\t\tconst points = [];\r\n\r\n\t\t\tfor (let d = 0; d <= divisions; d++) {\r\n\t\t\t\tpoints.push(this.getPoint(d / divisions));\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\t\t} // Get sequence of points using getPointAt( u )\r\n\r\n\r\n\t\tgetSpacedPoints(divisions = 5) {\r\n\t\t\tconst points = [];\r\n\r\n\t\t\tfor (let d = 0; d <= divisions; d++) {\r\n\t\t\t\tpoints.push(this.getPointAt(d / divisions));\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\t\t} // Get total curve arc length\r\n\r\n\r\n\t\tgetLength() {\r\n\t\t\tconst lengths = this.getLengths();\r\n\t\t\treturn lengths[lengths.length - 1];\r\n\t\t} // Get list of cumulative segment lengths\r\n\r\n\r\n\t\tgetLengths(divisions = this.arcLengthDivisions) {\r\n\t\t\tif (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\r\n\t\t\t\treturn this.cacheArcLengths;\r\n\t\t\t}\r\n\r\n\t\t\tthis.needsUpdate = false;\r\n\t\t\tconst cache = [];\r\n\t\t\tlet current,\r\n\t\t\t\t\tlast = this.getPoint(0);\r\n\t\t\tlet sum = 0;\r\n\t\t\tcache.push(0);\r\n\r\n\t\t\tfor (let p = 1; p <= divisions; p++) {\r\n\t\t\t\tcurrent = this.getPoint(p / divisions);\r\n\t\t\t\tsum += current.distanceTo(last);\r\n\t\t\t\tcache.push(sum);\r\n\t\t\t\tlast = current;\r\n\t\t\t}\r\n\r\n\t\t\tthis.cacheArcLengths = cache;\r\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\r\n\t\t}\r\n\r\n\t\tupdateArcLengths() {\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t\tthis.getLengths();\r\n\t\t} // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n\r\n\t\tgetUtoTmapping(u, distance) {\r\n\t\t\tconst arcLengths = this.getLengths();\r\n\t\t\tlet i = 0;\r\n\t\t\tconst il = arcLengths.length;\r\n\t\t\tlet targetArcLength; // The targeted u distance value to get\r\n\r\n\t\t\tif (distance) {\r\n\t\t\t\ttargetArcLength = distance;\r\n\t\t\t} else {\r\n\t\t\t\ttargetArcLength = u * arcLengths[il - 1];\r\n\t\t\t} // binary search for the index with largest value smaller than target u distance\r\n\r\n\r\n\t\t\tlet low = 0,\r\n\t\t\t\t\thigh = il - 1,\r\n\t\t\t\t\tcomparison;\r\n\r\n\t\t\twhile (low <= high) {\r\n\t\t\t\ti = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\t\t\tcomparison = arcLengths[i] - targetArcLength;\r\n\r\n\t\t\t\tif (comparison < 0) {\r\n\t\t\t\t\tlow = i + 1;\r\n\t\t\t\t} else if (comparison > 0) {\r\n\t\t\t\t\thigh = i - 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\thigh = i;\r\n\t\t\t\t\tbreak; // DONE\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ti = high;\r\n\r\n\t\t\tif (arcLengths[i] === targetArcLength) {\r\n\t\t\t\treturn i / (il - 1);\r\n\t\t\t} // we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\r\n\t\t\tconst lengthBefore = arcLengths[i];\r\n\t\t\tconst lengthAfter = arcLengths[i + 1];\r\n\t\t\tconst segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\r\n\r\n\t\t\tconst segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\r\n\r\n\t\t\tconst t = (i + segmentFraction) / (il - 1);\r\n\t\t\treturn t;\r\n\t\t} // Returns a unit vector tangent at t\r\n\t\t// In case any sub curve does not implement its tangent derivation,\r\n\t\t// 2 points a small delta apart will be used to find its gradient\r\n\t\t// which seems to give a reasonable approximation\r\n\r\n\r\n\t\tgetTangent(t, optionalTarget) {\r\n\t\t\tconst delta = 0.0001;\r\n\t\t\tlet t1 = t - delta;\r\n\t\t\tlet t2 = t + delta; // Capping in case of danger\r\n\r\n\t\t\tif (t1 < 0) t1 = 0;\r\n\t\t\tif (t2 > 1) t2 = 1;\r\n\t\t\tconst pt1 = this.getPoint(t1);\r\n\t\t\tconst pt2 = this.getPoint(t2);\r\n\t\t\tconst tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\r\n\t\t\ttangent.copy(pt2).sub(pt1).normalize();\r\n\t\t\treturn tangent;\r\n\t\t}\r\n\r\n\t\tgetTangentAt(u, optionalTarget) {\r\n\t\t\tconst t = this.getUtoTmapping(u);\r\n\t\t\treturn this.getTangent(t, optionalTarget);\r\n\t\t}\r\n\r\n\t\tcomputeFrenetFrames(segments, closed) {\r\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\t\t\tconst normal = new Vector3();\r\n\t\t\tconst tangents = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst binormals = [];\r\n\t\t\tconst vec = new Vector3();\r\n\t\t\tconst mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\r\n\r\n\t\t\tfor (let i = 0; i <= segments; i++) {\r\n\t\t\t\tconst u = i / segments;\r\n\t\t\t\ttangents[i] = this.getTangentAt(u, new Vector3());\r\n\t\t\t} // select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the minimum tangent xyz component\r\n\r\n\r\n\t\t\tnormals[0] = new Vector3();\r\n\t\t\tbinormals[0] = new Vector3();\r\n\t\t\tlet min = Number.MAX_VALUE;\r\n\t\t\tconst tx = Math.abs(tangents[0].x);\r\n\t\t\tconst ty = Math.abs(tangents[0].y);\r\n\t\t\tconst tz = Math.abs(tangents[0].z);\r\n\r\n\t\t\tif (tx <= min) {\r\n\t\t\t\tmin = tx;\r\n\t\t\t\tnormal.set(1, 0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (ty <= min) {\r\n\t\t\t\tmin = ty;\r\n\t\t\t\tnormal.set(0, 1, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (tz <= min) {\r\n\t\t\t\tnormal.set(0, 0, 1);\r\n\t\t\t}\r\n\r\n\t\t\tvec.crossVectors(tangents[0], normal).normalize();\r\n\t\t\tnormals[0].crossVectors(tangents[0], vec);\r\n\t\t\tbinormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\r\n\r\n\t\t\tfor (let i = 1; i <= segments; i++) {\r\n\t\t\t\tnormals[i] = normals[i - 1].clone();\r\n\t\t\t\tbinormals[i] = binormals[i - 1].clone();\r\n\t\t\t\tvec.crossVectors(tangents[i - 1], tangents[i]);\r\n\r\n\t\t\t\tif (vec.length() > Number.EPSILON) {\r\n\t\t\t\t\tvec.normalize();\r\n\t\t\t\t\tconst theta = Math.acos(clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\r\n\r\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\r\n\t\t\t} // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\r\n\t\t\tif (closed === true) {\r\n\t\t\t\tlet theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\r\n\t\t\t\ttheta /= segments;\r\n\r\n\t\t\t\tif (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\r\n\t\t\t\t\ttheta = -theta;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = 1; i <= segments; i++) {\r\n\t\t\t\t\t// twist a little...\r\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\r\n\t\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttangents: tangents,\r\n\t\t\t\tnormals: normals,\r\n\t\t\t\tbinormals: binormals\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Curve',\r\n\t\t\t\t\tgenerator: 'Curve.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\r\n\t\t\tdata.type = this.type;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass EllipseCurve extends Curve {\r\n\t\tconstructor(aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'EllipseCurve';\r\n\t\t\tthis.aX = aX;\r\n\t\t\tthis.aY = aY;\r\n\t\t\tthis.xRadius = xRadius;\r\n\t\t\tthis.yRadius = yRadius;\r\n\t\t\tthis.aStartAngle = aStartAngle;\r\n\t\t\tthis.aEndAngle = aEndAngle;\r\n\t\t\tthis.aClockwise = aClockwise;\r\n\t\t\tthis.aRotation = aRotation;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget) {\r\n\t\t\tconst point = optionalTarget || new Vector2();\r\n\t\t\tconst twoPi = Math.PI * 2;\r\n\t\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\t\tconst samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\r\n\r\n\t\t\twhile (deltaAngle < 0) deltaAngle += twoPi;\r\n\r\n\t\t\twhile (deltaAngle > twoPi) deltaAngle -= twoPi;\r\n\r\n\t\t\tif (deltaAngle < Number.EPSILON) {\r\n\t\t\t\tif (samePoints) {\r\n\t\t\t\t\tdeltaAngle = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdeltaAngle = twoPi;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.aClockwise === true && !samePoints) {\r\n\t\t\t\tif (deltaAngle === twoPi) {\r\n\t\t\t\t\tdeltaAngle = -twoPi;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdeltaAngle = deltaAngle - twoPi;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst angle = this.aStartAngle + t * deltaAngle;\r\n\t\t\tlet x = this.aX + this.xRadius * Math.cos(angle);\r\n\t\t\tlet y = this.aY + this.yRadius * Math.sin(angle);\r\n\r\n\t\t\tif (this.aRotation !== 0) {\r\n\t\t\t\tconst cos = Math.cos(this.aRotation);\r\n\t\t\t\tconst sin = Math.sin(this.aRotation);\r\n\t\t\t\tconst tx = x - this.aX;\r\n\t\t\t\tconst ty = y - this.aY; // Rotate the point about the center of the ellipse.\r\n\r\n\t\t\t\tx = tx * cos - ty * sin + this.aX;\r\n\t\t\t\ty = tx * sin + ty * cos + this.aY;\r\n\t\t\t}\r\n\r\n\t\t\treturn point.set(x, y);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.aX = source.aX;\r\n\t\t\tthis.aY = source.aY;\r\n\t\t\tthis.xRadius = source.xRadius;\r\n\t\t\tthis.yRadius = source.yRadius;\r\n\t\t\tthis.aStartAngle = source.aStartAngle;\r\n\t\t\tthis.aEndAngle = source.aEndAngle;\r\n\t\t\tthis.aClockwise = source.aClockwise;\r\n\t\t\tthis.aRotation = source.aRotation;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.aX = this.aX;\r\n\t\t\tdata.aY = this.aY;\r\n\t\t\tdata.xRadius = this.xRadius;\r\n\t\t\tdata.yRadius = this.yRadius;\r\n\t\t\tdata.aStartAngle = this.aStartAngle;\r\n\t\t\tdata.aEndAngle = this.aEndAngle;\r\n\t\t\tdata.aClockwise = this.aClockwise;\r\n\t\t\tdata.aRotation = this.aRotation;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.aX = json.aX;\r\n\t\t\tthis.aY = json.aY;\r\n\t\t\tthis.xRadius = json.xRadius;\r\n\t\t\tthis.yRadius = json.yRadius;\r\n\t\t\tthis.aStartAngle = json.aStartAngle;\r\n\t\t\tthis.aEndAngle = json.aEndAngle;\r\n\t\t\tthis.aClockwise = json.aClockwise;\r\n\t\t\tthis.aRotation = json.aRotation;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tEllipseCurve.prototype.isEllipseCurve = true;\r\n\r\n\tclass ArcCurve extends EllipseCurve {\r\n\t\tconstructor(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\r\n\t\t\tsuper(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n\t\t\tthis.type = 'ArcCurve';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tArcCurve.prototype.isArcCurve = true;\r\n\r\n\t/**\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\t\tlet c0 = 0,\r\n\t\t\t\tc1 = 0,\r\n\t\t\t\tc2 = 0,\r\n\t\t\t\tc3 = 0;\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *\t p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *\t p(0) = x0, p(1) = x1\r\n\t\t *\tand\r\n\t\t *\t p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\r\n\t\tfunction init(x0, x1, t0, t1) {\r\n\t\t\tc0 = x0;\r\n\t\t\tc1 = t0;\r\n\t\t\tc2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tinitCatmullRom: function (x0, x1, x2, x3, tension) {\r\n\t\t\t\tinit(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\r\n\t\t\t},\r\n\t\t\tinitNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\r\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\t\tlet t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\r\n\t\t\t\tlet t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\r\n\r\n\t\t\t\tt1 *= dt1;\r\n\t\t\t\tt2 *= dt1;\r\n\t\t\t\tinit(x1, x2, t1, t2);\r\n\t\t\t},\r\n\t\t\tcalc: function (t) {\r\n\t\t\t\tconst t2 = t * t;\r\n\t\t\t\tconst t3 = t2 * t;\r\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\r\n\t\t\t}\r\n\t\t};\r\n\t} //\r\n\r\n\r\n\tconst tmp = new Vector3();\r\n\tconst px = new CubicPoly(),\r\n\t\t\t\tpy = new CubicPoly(),\r\n\t\t\t\tpz = new CubicPoly();\r\n\r\n\tclass CatmullRomCurve3 extends Curve {\r\n\t\tconstructor(points = [], closed = false, curveType = 'centripetal', tension = 0.5) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CatmullRomCurve3';\r\n\t\t\tthis.points = points;\r\n\t\t\tthis.closed = closed;\r\n\t\t\tthis.curveType = curveType;\r\n\t\t\tthis.tension = tension;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\r\n\t\t\tconst point = optionalTarget;\r\n\t\t\tconst points = this.points;\r\n\t\t\tconst l = points.length;\r\n\t\t\tconst p = (l - (this.closed ? 0 : 1)) * t;\r\n\t\t\tlet intPoint = Math.floor(p);\r\n\t\t\tlet weight = p - intPoint;\r\n\r\n\t\t\tif (this.closed) {\r\n\t\t\t\tintPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\r\n\t\t\t} else if (weight === 0 && intPoint === l - 1) {\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\r\n\r\n\t\t\tif (this.closed || intPoint > 0) {\r\n\t\t\t\tp0 = points[(intPoint - 1) % l];\r\n\t\t\t} else {\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors(points[0], points[1]).add(points[0]);\r\n\t\t\t\tp0 = tmp;\r\n\t\t\t}\r\n\r\n\t\t\tconst p1 = points[intPoint % l];\r\n\t\t\tconst p2 = points[(intPoint + 1) % l];\r\n\r\n\t\t\tif (this.closed || intPoint + 2 < l) {\r\n\t\t\t\tp3 = points[(intPoint + 2) % l];\r\n\t\t\t} else {\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\r\n\t\t\t\tp3 = tmp;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.curveType === 'centripetal' || this.curveType === 'chordal') {\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tlet dt0 = Math.pow(p0.distanceToSquared(p1), pow);\r\n\t\t\t\tlet dt1 = Math.pow(p1.distanceToSquared(p2), pow);\r\n\t\t\t\tlet dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\r\n\r\n\t\t\t\tif (dt1 < 1e-4) dt1 = 1.0;\r\n\t\t\t\tif (dt0 < 1e-4) dt0 = dt1;\r\n\t\t\t\tif (dt2 < 1e-4) dt2 = dt1;\r\n\t\t\t\tpx.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\r\n\t\t\t\tpy.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\r\n\t\t\t\tpz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\r\n\t\t\t} else if (this.curveType === 'catmullrom') {\r\n\t\t\t\tpx.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\r\n\t\t\t\tpy.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\r\n\t\t\t\tpz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\r\n\t\t\t}\r\n\r\n\t\t\tpoint.set(px.calc(weight), py.calc(weight), pz.calc(weight));\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.points = [];\r\n\r\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\r\n\t\t\t\tconst point = source.points[i];\r\n\t\t\t\tthis.points.push(point.clone());\r\n\t\t\t}\r\n\r\n\t\t\tthis.closed = source.closed;\r\n\t\t\tthis.curveType = source.curveType;\r\n\t\t\tthis.tension = source.tension;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.points = [];\r\n\r\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\r\n\t\t\t\tconst point = this.points[i];\r\n\t\t\t\tdata.points.push(point.toArray());\r\n\t\t\t}\r\n\r\n\t\t\tdata.closed = this.closed;\r\n\t\t\tdata.curveType = this.curveType;\r\n\t\t\tdata.tension = this.tension;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.points = [];\r\n\r\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\r\n\t\t\t\tconst point = json.points[i];\r\n\t\t\t\tthis.points.push(new Vector3().fromArray(point));\r\n\t\t\t}\r\n\r\n\t\t\tthis.closed = json.closed;\r\n\t\t\tthis.curveType = json.curveType;\r\n\t\t\tthis.tension = json.tension;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\r\n\r\n\t/**\r\n\t * Bezier Curves formulas obtained from\r\n\t * http://en.wikipedia.org/wiki/Bézier_curve\r\n\t */\r\n\tfunction CatmullRom(t, p0, p1, p2, p3) {\r\n\t\tconst v0 = (p2 - p0) * 0.5;\r\n\t\tconst v1 = (p3 - p1) * 0.5;\r\n\t\tconst t2 = t * t;\r\n\t\tconst t3 = t * t2;\r\n\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n\t} //\r\n\r\n\r\n\tfunction QuadraticBezierP0(t, p) {\r\n\t\tconst k = 1 - t;\r\n\t\treturn k * k * p;\r\n\t}\r\n\r\n\tfunction QuadraticBezierP1(t, p) {\r\n\t\treturn 2 * (1 - t) * t * p;\r\n\t}\r\n\r\n\tfunction QuadraticBezierP2(t, p) {\r\n\t\treturn t * t * p;\r\n\t}\r\n\r\n\tfunction QuadraticBezier(t, p0, p1, p2) {\r\n\t\treturn QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\r\n\t} //\r\n\r\n\r\n\tfunction CubicBezierP0(t, p) {\r\n\t\tconst k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\t}\r\n\r\n\tfunction CubicBezierP1(t, p) {\r\n\t\tconst k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\t}\r\n\r\n\tfunction CubicBezierP2(t, p) {\r\n\t\treturn 3 * (1 - t) * t * t * p;\r\n\t}\r\n\r\n\tfunction CubicBezierP3(t, p) {\r\n\t\treturn t * t * t * p;\r\n\t}\r\n\r\n\tfunction CubicBezier(t, p0, p1, p2, p3) {\r\n\t\treturn CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\r\n\t}\r\n\r\n\tclass CubicBezierCurve extends Curve {\r\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CubicBezierCurve';\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\r\n\t\t\tconst point = optionalTarget;\r\n\t\t\tconst v0 = this.v0,\r\n\t\t\t\t\t\tv1 = this.v1,\r\n\t\t\t\t\t\tv2 = this.v2,\r\n\t\t\t\t\t\tv3 = this.v3;\r\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.v0.copy(source.v0);\r\n\t\t\tthis.v1.copy(source.v1);\r\n\t\t\tthis.v2.copy(source.v2);\r\n\t\t\tthis.v3.copy(source.v3);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.v0 = this.v0.toArray();\r\n\t\t\tdata.v1 = this.v1.toArray();\r\n\t\t\tdata.v2 = this.v2.toArray();\r\n\t\t\tdata.v3 = this.v3.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.v0.fromArray(json.v0);\r\n\t\t\tthis.v1.fromArray(json.v1);\r\n\t\t\tthis.v2.fromArray(json.v2);\r\n\t\t\tthis.v3.fromArray(json.v3);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\r\n\r\n\tclass CubicBezierCurve3 extends Curve {\r\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CubicBezierCurve3';\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\r\n\t\t\tconst point = optionalTarget;\r\n\t\t\tconst v0 = this.v0,\r\n\t\t\t\t\t\tv1 = this.v1,\r\n\t\t\t\t\t\tv2 = this.v2,\r\n\t\t\t\t\t\tv3 = this.v3;\r\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.v0.copy(source.v0);\r\n\t\t\tthis.v1.copy(source.v1);\r\n\t\t\tthis.v2.copy(source.v2);\r\n\t\t\tthis.v3.copy(source.v3);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.v0 = this.v0.toArray();\r\n\t\t\tdata.v1 = this.v1.toArray();\r\n\t\t\tdata.v2 = this.v2.toArray();\r\n\t\t\tdata.v3 = this.v3.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.v0.fromArray(json.v0);\r\n\t\t\tthis.v1.fromArray(json.v1);\r\n\t\t\tthis.v2.fromArray(json.v2);\r\n\t\t\tthis.v3.fromArray(json.v3);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\r\n\r\n\tclass LineCurve extends Curve {\r\n\t\tconstructor(v1 = new Vector2(), v2 = new Vector2()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'LineCurve';\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\r\n\t\t\tconst point = optionalTarget;\r\n\r\n\t\t\tif (t === 1) {\r\n\t\t\t\tpoint.copy(this.v2);\r\n\t\t\t} else {\r\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\r\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\r\n\t\t\t}\r\n\r\n\t\t\treturn point;\r\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\r\n\r\n\r\n\t\tgetPointAt(u, optionalTarget) {\r\n\t\t\treturn this.getPoint(u, optionalTarget);\r\n\t\t}\r\n\r\n\t\tgetTangent(t, optionalTarget) {\r\n\t\t\tconst tangent = optionalTarget || new Vector2();\r\n\t\t\ttangent.copy(this.v2).sub(this.v1).normalize();\r\n\t\t\treturn tangent;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.v1.copy(source.v1);\r\n\t\t\tthis.v2.copy(source.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.v1 = this.v1.toArray();\r\n\t\t\tdata.v2 = this.v2.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.v1.fromArray(json.v1);\r\n\t\t\tthis.v2.fromArray(json.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLineCurve.prototype.isLineCurve = true;\r\n\r\n\tclass LineCurve3 extends Curve {\r\n\t\tconstructor(v1 = new Vector3(), v2 = new Vector3()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'LineCurve3';\r\n\t\t\tthis.isLineCurve3 = true;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\r\n\t\t\tconst point = optionalTarget;\r\n\r\n\t\t\tif (t === 1) {\r\n\t\t\t\tpoint.copy(this.v2);\r\n\t\t\t} else {\r\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\r\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\r\n\t\t\t}\r\n\r\n\t\t\treturn point;\r\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\r\n\r\n\r\n\t\tgetPointAt(u, optionalTarget) {\r\n\t\t\treturn this.getPoint(u, optionalTarget);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.v1.copy(source.v1);\r\n\t\t\tthis.v2.copy(source.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.v1 = this.v1.toArray();\r\n\t\t\tdata.v2 = this.v2.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.v1.fromArray(json.v1);\r\n\t\t\tthis.v2.fromArray(json.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass QuadraticBezierCurve extends Curve {\r\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'QuadraticBezierCurve';\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\r\n\t\t\tconst point = optionalTarget;\r\n\t\t\tconst v0 = this.v0,\r\n\t\t\t\t\t\tv1 = this.v1,\r\n\t\t\t\t\t\tv2 = this.v2;\r\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.v0.copy(source.v0);\r\n\t\t\tthis.v1.copy(source.v1);\r\n\t\t\tthis.v2.copy(source.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.v0 = this.v0.toArray();\r\n\t\t\tdata.v1 = this.v1.toArray();\r\n\t\t\tdata.v2 = this.v2.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.v0.fromArray(json.v0);\r\n\t\t\tthis.v1.fromArray(json.v1);\r\n\t\t\tthis.v2.fromArray(json.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\r\n\r\n\tclass QuadraticBezierCurve3 extends Curve {\r\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'QuadraticBezierCurve3';\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\r\n\t\t\tconst point = optionalTarget;\r\n\t\t\tconst v0 = this.v0,\r\n\t\t\t\t\t\tv1 = this.v1,\r\n\t\t\t\t\t\tv2 = this.v2;\r\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.v0.copy(source.v0);\r\n\t\t\tthis.v1.copy(source.v1);\r\n\t\t\tthis.v2.copy(source.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.v0 = this.v0.toArray();\r\n\t\t\tdata.v1 = this.v1.toArray();\r\n\t\t\tdata.v2 = this.v2.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.v0.fromArray(json.v0);\r\n\t\t\tthis.v1.fromArray(json.v1);\r\n\t\t\tthis.v2.fromArray(json.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\r\n\r\n\tclass SplineCurve extends Curve {\r\n\t\tconstructor(points = []) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'SplineCurve';\r\n\t\t\tthis.points = points;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\r\n\t\t\tconst point = optionalTarget;\r\n\t\t\tconst points = this.points;\r\n\t\t\tconst p = (points.length - 1) * t;\r\n\t\t\tconst intPoint = Math.floor(p);\r\n\t\t\tconst weight = p - intPoint;\r\n\t\t\tconst p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\r\n\t\t\tconst p1 = points[intPoint];\r\n\t\t\tconst p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\r\n\t\t\tconst p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\r\n\t\t\tpoint.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.points = [];\r\n\r\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\r\n\t\t\t\tconst point = source.points[i];\r\n\t\t\t\tthis.points.push(point.clone());\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.points = [];\r\n\r\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\r\n\t\t\t\tconst point = this.points[i];\r\n\t\t\t\tdata.points.push(point.toArray());\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.points = [];\r\n\r\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\r\n\t\t\t\tconst point = json.points[i];\r\n\t\t\t\tthis.points.push(new Vector2().fromArray(point));\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSplineCurve.prototype.isSplineCurve = true;\r\n\r\n\tvar Curves = /*#__PURE__*/Object.freeze({\r\n\t\t__proto__: null,\r\n\t\tArcCurve: ArcCurve,\r\n\t\tCatmullRomCurve3: CatmullRomCurve3,\r\n\t\tCubicBezierCurve: CubicBezierCurve,\r\n\t\tCubicBezierCurve3: CubicBezierCurve3,\r\n\t\tEllipseCurve: EllipseCurve,\r\n\t\tLineCurve: LineCurve,\r\n\t\tLineCurve3: LineCurve3,\r\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\r\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\r\n\t\tSplineCurve: SplineCurve\r\n\t});\r\n\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *\tcurves, but retains the api of a curve\r\n\t **************************************************************/\r\n\r\n\tclass CurvePath extends Curve {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CurvePath';\r\n\t\t\tthis.curves = [];\r\n\t\t\tthis.autoClose = false; // Automatically closes the path\r\n\t\t}\r\n\r\n\t\tadd(curve) {\r\n\t\t\tthis.curves.push(curve);\r\n\t\t}\r\n\r\n\t\tclosePath() {\r\n\t\t\t// Add a line curve if start and end of lines are not connected\r\n\t\t\tconst startPoint = this.curves[0].getPoint(0);\r\n\t\t\tconst endPoint = this.curves[this.curves.length - 1].getPoint(1);\r\n\r\n\t\t\tif (!startPoint.equals(endPoint)) {\r\n\t\t\t\tthis.curves.push(new LineCurve(endPoint, startPoint));\r\n\t\t\t}\r\n\t\t} // To get accurate point with reference to\r\n\t\t// entire path distance at time t,\r\n\t\t// following has to be done:\r\n\t\t// 1. Length of each sub path have to be known\r\n\t\t// 2. Locate and identify type of curve\r\n\t\t// 3. Get t for the curve\r\n\t\t// 4. Return curve.getPointAt(t')\r\n\r\n\r\n\t\tgetPoint(t, optionalTarget) {\r\n\t\t\tconst d = t * this.getLength();\r\n\t\t\tconst curveLengths = this.getCurveLengths();\r\n\t\t\tlet i = 0; // To think about boundaries points.\r\n\r\n\t\t\twhile (i < curveLengths.length) {\r\n\t\t\t\tif (curveLengths[i] >= d) {\r\n\t\t\t\t\tconst diff = curveLengths[i] - d;\r\n\t\t\t\t\tconst curve = this.curves[i];\r\n\t\t\t\t\tconst segmentLength = curve.getLength();\r\n\t\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\r\n\t\t\t\t\treturn curve.getPointAt(u, optionalTarget);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\r\n\t\t\treturn null; // loop where sum != 0, sum > d , sum+1 <d\r\n\t\t} // We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t\t// getPoint() depends on getLength\r\n\r\n\r\n\t\tgetLength() {\r\n\t\t\tconst lens = this.getCurveLengths();\r\n\t\t\treturn lens[lens.length - 1];\r\n\t\t} // cacheLengths must be recalculated.\r\n\r\n\r\n\t\tupdateArcLengths() {\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t\tthis.cacheLengths = null;\r\n\t\t\tthis.getCurveLengths();\r\n\t\t} // Compute lengths and cache them\r\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\n\r\n\t\tgetCurveLengths() {\r\n\t\t\t// We use cache values if curves and cache array are same length\r\n\t\t\tif (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\r\n\t\t\t\treturn this.cacheLengths;\r\n\t\t\t} // Get length of sub-curve\r\n\t\t\t// Push sums into cached array\r\n\r\n\r\n\t\t\tconst lengths = [];\r\n\t\t\tlet sums = 0;\r\n\r\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\r\n\t\t\t\tsums += this.curves[i].getLength();\r\n\t\t\t\tlengths.push(sums);\r\n\t\t\t}\r\n\r\n\t\t\tthis.cacheLengths = lengths;\r\n\t\t\treturn lengths;\r\n\t\t}\r\n\r\n\t\tgetSpacedPoints(divisions = 40) {\r\n\t\t\tconst points = [];\r\n\r\n\t\t\tfor (let i = 0; i <= divisions; i++) {\r\n\t\t\t\tpoints.push(this.getPoint(i / divisions));\r\n\t\t\t}\r\n\r\n\t\t\tif (this.autoClose) {\r\n\t\t\t\tpoints.push(points[0]);\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\t\t}\r\n\r\n\t\tgetPoints(divisions = 12) {\r\n\t\t\tconst points = [];\r\n\t\t\tlet last;\r\n\r\n\t\t\tfor (let i = 0, curves = this.curves; i < curves.length; i++) {\r\n\t\t\t\tconst curve = curves[i];\r\n\t\t\t\tconst resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\r\n\t\t\t\tconst pts = curve.getPoints(resolution);\r\n\r\n\t\t\t\tfor (let j = 0; j < pts.length; j++) {\r\n\t\t\t\t\tconst point = pts[j];\r\n\t\t\t\t\tif (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\r\n\r\n\t\t\t\t\tpoints.push(point);\r\n\t\t\t\t\tlast = point;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\r\n\t\t\t\tpoints.push(points[0]);\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.curves = [];\r\n\r\n\t\t\tfor (let i = 0, l = source.curves.length; i < l; i++) {\r\n\t\t\t\tconst curve = source.curves[i];\r\n\t\t\t\tthis.curves.push(curve.clone());\r\n\t\t\t}\r\n\r\n\t\t\tthis.autoClose = source.autoClose;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.autoClose = this.autoClose;\r\n\t\t\tdata.curves = [];\r\n\r\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\r\n\t\t\t\tconst curve = this.curves[i];\r\n\t\t\t\tdata.curves.push(curve.toJSON());\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.autoClose = json.autoClose;\r\n\t\t\tthis.curves = [];\r\n\r\n\t\t\tfor (let i = 0, l = json.curves.length; i < l; i++) {\r\n\t\t\t\tconst curve = json.curves[i];\r\n\t\t\t\tthis.curves.push(new Curves[curve.type]().fromJSON(curve));\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Path extends CurvePath {\r\n\t\tconstructor(points) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Path';\r\n\t\t\tthis.currentPoint = new Vector2();\r\n\r\n\t\t\tif (points) {\r\n\t\t\t\tthis.setFromPoints(points);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetFromPoints(points) {\r\n\t\t\tthis.moveTo(points[0].x, points[0].y);\r\n\r\n\t\t\tfor (let i = 1, l = points.length; i < l; i++) {\r\n\t\t\t\tthis.lineTo(points[i].x, points[i].y);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmoveTo(x, y) {\r\n\t\t\tthis.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlineTo(x, y) {\r\n\t\t\tconst curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\r\n\t\t\tthis.curves.push(curve);\r\n\t\t\tthis.currentPoint.set(x, y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\r\n\t\t\tconst curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\r\n\t\t\tthis.curves.push(curve);\r\n\t\t\tthis.currentPoint.set(aX, aY);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\r\n\t\t\tconst curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\r\n\t\t\tthis.curves.push(curve);\r\n\t\t\tthis.currentPoint.set(aX, aY);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsplineThru(pts\r\n\t\t/*Array of Vector*/\r\n\t\t) {\r\n\t\t\tconst npts = [this.currentPoint.clone()].concat(pts);\r\n\t\t\tconst curve = new SplineCurve(npts);\r\n\t\t\tthis.curves.push(curve);\r\n\t\t\tthis.currentPoint.copy(pts[pts.length - 1]);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\r\n\t\t\tconst x0 = this.currentPoint.x;\r\n\t\t\tconst y0 = this.currentPoint.y;\r\n\t\t\tthis.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tabsarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\r\n\t\t\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\r\n\t\t\tconst x0 = this.currentPoint.x;\r\n\t\t\tconst y0 = this.currentPoint.y;\r\n\t\t\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tabsellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\r\n\t\t\tconst curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\r\n\r\n\t\t\tif (this.curves.length > 0) {\r\n\t\t\t\t// if a previous curve is present, attempt to join\r\n\t\t\t\tconst firstPoint = curve.getPoint(0);\r\n\r\n\t\t\t\tif (!firstPoint.equals(this.currentPoint)) {\r\n\t\t\t\t\tthis.lineTo(firstPoint.x, firstPoint.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.curves.push(curve);\r\n\t\t\tconst lastPoint = curve.getPoint(1);\r\n\t\t\tthis.currentPoint.copy(lastPoint);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.currentPoint.copy(source.currentPoint);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.currentPoint.fromArray(json.currentPoint);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Shape extends Path {\r\n\t\tconstructor(points) {\r\n\t\t\tsuper(points);\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t\tthis.type = 'Shape';\r\n\t\t\tthis.holes = [];\r\n\t\t}\r\n\r\n\t\tgetPointsHoles(divisions) {\r\n\t\t\tconst holesPts = [];\r\n\r\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\r\n\t\t\t\tholesPts[i] = this.holes[i].getPoints(divisions);\r\n\t\t\t}\r\n\r\n\t\t\treturn holesPts;\r\n\t\t} // get points of shape and holes (keypoints based on segments parameter)\r\n\r\n\r\n\t\textractPoints(divisions) {\r\n\t\t\treturn {\r\n\t\t\t\tshape: this.getPoints(divisions),\r\n\t\t\t\tholes: this.getPointsHoles(divisions)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.holes = [];\r\n\r\n\t\t\tfor (let i = 0, l = source.holes.length; i < l; i++) {\r\n\t\t\t\tconst hole = source.holes[i];\r\n\t\t\t\tthis.holes.push(hole.clone());\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.holes = [];\r\n\r\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\r\n\t\t\t\tconst hole = this.holes[i];\r\n\t\t\t\tdata.holes.push(hole.toJSON());\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.uuid = json.uuid;\r\n\t\t\tthis.holes = [];\r\n\r\n\t\t\tfor (let i = 0, l = json.holes.length; i < l; i++) {\r\n\t\t\t\tconst hole = json.holes[i];\r\n\t\t\t\tthis.holes.push(new Path().fromJSON(hole));\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Port from https://github.com/mapbox/earcut (v2.2.2)\r\n\t */\r\n\tconst Earcut = {\r\n\t\ttriangulate: function (data, holeIndices, dim = 2) {\r\n\t\t\tconst hasHoles = holeIndices && holeIndices.length;\r\n\t\t\tconst outerLen = hasHoles ? holeIndices[0] * dim : data.length;\r\n\t\t\tlet outerNode = linkedList(data, 0, outerLen, dim, true);\r\n\t\t\tconst triangles = [];\r\n\t\t\tif (!outerNode || outerNode.next === outerNode.prev) return triangles;\r\n\t\t\tlet minX, minY, maxX, maxY, x, y, invSize;\r\n\t\t\tif (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n\r\n\t\t\tif (data.length > 80 * dim) {\r\n\t\t\t\tminX = maxX = data[0];\r\n\t\t\t\tminY = maxY = data[1];\r\n\r\n\t\t\t\tfor (let i = dim; i < outerLen; i += dim) {\r\n\t\t\t\t\tx = data[i];\r\n\t\t\t\t\ty = data[i + 1];\r\n\t\t\t\t\tif (x < minX) minX = x;\r\n\t\t\t\t\tif (y < minY) minY = y;\r\n\t\t\t\t\tif (x > maxX) maxX = x;\r\n\t\t\t\t\tif (y > maxY) maxY = y;\r\n\t\t\t\t} // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n\r\n\r\n\t\t\t\tinvSize = Math.max(maxX - minX, maxY - minY);\r\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\r\n\t\t\t}\r\n\r\n\t\t\tearcutLinked(outerNode, triangles, dim, minX, minY, invSize);\r\n\t\t\treturn triangles;\r\n\t\t}\r\n\t}; // create a circular doubly linked list from polygon points in the specified winding order\r\n\r\n\tfunction linkedList(data, start, end, dim, clockwise) {\r\n\t\tlet i, last;\r\n\r\n\t\tif (clockwise === signedArea(data, start, end, dim) > 0) {\r\n\t\t\tfor (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\r\n\t\t} else {\r\n\t\t\tfor (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\r\n\t\t}\r\n\r\n\t\tif (last && equals(last, last.next)) {\r\n\t\t\tremoveNode(last);\r\n\t\t\tlast = last.next;\r\n\t\t}\r\n\r\n\t\treturn last;\r\n\t} // eliminate colinear or duplicate points\r\n\r\n\r\n\tfunction filterPoints(start, end) {\r\n\t\tif (!start) return start;\r\n\t\tif (!end) end = start;\r\n\t\tlet p = start,\r\n\t\t\t\tagain;\r\n\r\n\t\tdo {\r\n\t\t\tagain = false;\r\n\r\n\t\t\tif (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\r\n\t\t\t\tremoveNode(p);\r\n\t\t\t\tp = end = p.prev;\r\n\t\t\t\tif (p === p.next) break;\r\n\t\t\t\tagain = true;\r\n\t\t\t} else {\r\n\t\t\t\tp = p.next;\r\n\t\t\t}\r\n\t\t} while (again || p !== end);\r\n\r\n\t\treturn end;\r\n\t} // main ear slicing loop which triangulates a polygon (given as a linked list)\r\n\r\n\r\n\tfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\r\n\t\tif (!ear) return; // interlink polygon nodes in z-order\r\n\r\n\t\tif (!pass && invSize) indexCurve(ear, minX, minY, invSize);\r\n\t\tlet stop = ear,\r\n\t\t\t\tprev,\r\n\t\t\t\tnext; // iterate through ears, slicing them one by one\r\n\r\n\t\twhile (ear.prev !== ear.next) {\r\n\t\t\tprev = ear.prev;\r\n\t\t\tnext = ear.next;\r\n\r\n\t\t\tif (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\r\n\t\t\t\t// cut off the triangle\r\n\t\t\t\ttriangles.push(prev.i / dim);\r\n\t\t\t\ttriangles.push(ear.i / dim);\r\n\t\t\t\ttriangles.push(next.i / dim);\r\n\t\t\t\tremoveNode(ear); // skipping the next vertex leads to less sliver triangles\r\n\r\n\t\t\t\tear = next.next;\r\n\t\t\t\tstop = next.next;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tear = next; // if we looped through the whole remaining polygon and can't find any more ears\r\n\r\n\t\t\tif (ear === stop) {\r\n\t\t\t\t// try filtering points and slicing again\r\n\t\t\t\tif (!pass) {\r\n\t\t\t\t\tearcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\r\n\t\t\t\t} else if (pass === 1) {\r\n\t\t\t\t\tear = cureLocalIntersections(filterPoints(ear), triangles, dim);\r\n\t\t\t\t\tearcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\r\n\t\t\t\t} else if (pass === 2) {\r\n\t\t\t\t\tsplitEarcut(ear, triangles, dim, minX, minY, invSize);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t} // check whether a polygon node forms a valid ear with adjacent nodes\r\n\r\n\r\n\tfunction isEar(ear) {\r\n\t\tconst a = ear.prev,\r\n\t\t\t\t\tb = ear,\r\n\t\t\t\t\tc = ear.next;\r\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\t\t// now make sure we don't have other points inside the potential ear\r\n\r\n\t\tlet p = ear.next.next;\r\n\r\n\t\twhile (p !== ear.prev) {\r\n\t\t\tif (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\r\n\t\t\tp = p.next;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction isEarHashed(ear, minX, minY, invSize) {\r\n\t\tconst a = ear.prev,\r\n\t\t\t\t\tb = ear,\r\n\t\t\t\t\tc = ear.next;\r\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\t\t// triangle bbox; min & max are calculated like this for speed\r\n\r\n\t\tconst minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\r\n\t\t\t\t\tminTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\r\n\t\t\t\t\tmaxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\r\n\t\t\t\t\tmaxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\r\n\r\n\t\tconst minZ = zOrder(minTX, minTY, minX, minY, invSize),\r\n\t\t\t\t\tmaxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\r\n\t\tlet p = ear.prevZ,\r\n\t\t\t\tn = ear.nextZ; // look for points inside the triangle in both directions\r\n\r\n\t\twhile (p && p.z >= minZ && n && n.z <= maxZ) {\r\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\r\n\t\t\tp = p.prevZ;\r\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\r\n\t\t\tn = n.nextZ;\r\n\t\t} // look for remaining points in decreasing z-order\r\n\r\n\r\n\t\twhile (p && p.z >= minZ) {\r\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\r\n\t\t\tp = p.prevZ;\r\n\t\t} // look for remaining points in increasing z-order\r\n\r\n\r\n\t\twhile (n && n.z <= maxZ) {\r\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\r\n\t\t\tn = n.nextZ;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t} // go through all polygon nodes and cure small local self-intersections\r\n\r\n\r\n\tfunction cureLocalIntersections(start, triangles, dim) {\r\n\t\tlet p = start;\r\n\r\n\t\tdo {\r\n\t\t\tconst a = p.prev,\r\n\t\t\t\t\t\tb = p.next.next;\r\n\r\n\t\t\tif (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\r\n\t\t\t\ttriangles.push(a.i / dim);\r\n\t\t\t\ttriangles.push(p.i / dim);\r\n\t\t\t\ttriangles.push(b.i / dim); // remove two nodes involved\r\n\r\n\t\t\t\tremoveNode(p);\r\n\t\t\t\tremoveNode(p.next);\r\n\t\t\t\tp = start = b;\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== start);\r\n\r\n\t\treturn filterPoints(p);\r\n\t} // try splitting polygon into two and triangulate them independently\r\n\r\n\r\n\tfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\r\n\t\t// look for a valid diagonal that divides the polygon into two\r\n\t\tlet a = start;\r\n\r\n\t\tdo {\r\n\t\t\tlet b = a.next.next;\r\n\r\n\t\t\twhile (b !== a.prev) {\r\n\t\t\t\tif (a.i !== b.i && isValidDiagonal(a, b)) {\r\n\t\t\t\t\t// split the polygon in two by the diagonal\r\n\t\t\t\t\tlet c = splitPolygon(a, b); // filter colinear points around the cuts\r\n\r\n\t\t\t\t\ta = filterPoints(a, a.next);\r\n\t\t\t\t\tc = filterPoints(c, c.next); // run earcut on each half\r\n\r\n\t\t\t\t\tearcutLinked(a, triangles, dim, minX, minY, invSize);\r\n\t\t\t\t\tearcutLinked(c, triangles, dim, minX, minY, invSize);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tb = b.next;\r\n\t\t\t}\r\n\r\n\t\t\ta = a.next;\r\n\t\t} while (a !== start);\r\n\t} // link every hole into the outer loop, producing a single-ring polygon without holes\r\n\r\n\r\n\tfunction eliminateHoles(data, holeIndices, outerNode, dim) {\r\n\t\tconst queue = [];\r\n\t\tlet i, len, start, end, list;\r\n\r\n\t\tfor (i = 0, len = holeIndices.length; i < len; i++) {\r\n\t\t\tstart = holeIndices[i] * dim;\r\n\t\t\tend = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n\t\t\tlist = linkedList(data, start, end, dim, false);\r\n\t\t\tif (list === list.next) list.steiner = true;\r\n\t\t\tqueue.push(getLeftmost(list));\r\n\t\t}\r\n\r\n\t\tqueue.sort(compareX); // process holes from left to right\r\n\r\n\t\tfor (i = 0; i < queue.length; i++) {\r\n\t\t\teliminateHole(queue[i], outerNode);\r\n\t\t\touterNode = filterPoints(outerNode, outerNode.next);\r\n\t\t}\r\n\r\n\t\treturn outerNode;\r\n\t}\r\n\r\n\tfunction compareX(a, b) {\r\n\t\treturn a.x - b.x;\r\n\t} // find a bridge between vertices that connects hole with an outer ring and and link it\r\n\r\n\r\n\tfunction eliminateHole(hole, outerNode) {\r\n\t\touterNode = findHoleBridge(hole, outerNode);\r\n\r\n\t\tif (outerNode) {\r\n\t\t\tconst b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\r\n\r\n\t\t\tfilterPoints(outerNode, outerNode.next);\r\n\t\t\tfilterPoints(b, b.next);\r\n\t\t}\r\n\t} // David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n\r\n\r\n\tfunction findHoleBridge(hole, outerNode) {\r\n\t\tlet p = outerNode;\r\n\t\tconst hx = hole.x;\r\n\t\tconst hy = hole.y;\r\n\t\tlet qx = -Infinity,\r\n\t\t\t\tm; // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n\t\t// segment's endpoint with lesser x will be potential connection point\r\n\r\n\t\tdo {\r\n\t\t\tif (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\r\n\t\t\t\tconst x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\r\n\r\n\t\t\t\tif (x <= hx && x > qx) {\r\n\t\t\t\t\tqx = x;\r\n\r\n\t\t\t\t\tif (x === hx) {\r\n\t\t\t\t\t\tif (hy === p.y) return p;\r\n\t\t\t\t\t\tif (hy === p.next.y) return p.next;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== outerNode);\r\n\r\n\t\tif (!m) return null;\r\n\t\tif (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\r\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\r\n\t\t// if there are no points found, we have a valid connection;\r\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n\t\tconst stop = m,\r\n\t\t\t\t\tmx = m.x,\r\n\t\t\t\t\tmy = m.y;\r\n\t\tlet tanMin = Infinity,\r\n\t\t\t\ttan;\r\n\t\tp = m;\r\n\r\n\t\tdo {\r\n\t\t\tif (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\r\n\t\t\t\ttan = Math.abs(hy - p.y) / (hx - p.x); // tangential\r\n\r\n\t\t\t\tif (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\r\n\t\t\t\t\tm = p;\r\n\t\t\t\t\ttanMin = tan;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== stop);\r\n\r\n\t\treturn m;\r\n\t} // whether sector in vertex m contains sector in vertex p in the same coordinates\r\n\r\n\r\n\tfunction sectorContainsSector(m, p) {\r\n\t\treturn area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\r\n\t} // interlink polygon nodes in z-order\r\n\r\n\r\n\tfunction indexCurve(start, minX, minY, invSize) {\r\n\t\tlet p = start;\r\n\r\n\t\tdo {\r\n\t\t\tif (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\r\n\t\t\tp.prevZ = p.prev;\r\n\t\t\tp.nextZ = p.next;\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== start);\r\n\r\n\t\tp.prevZ.nextZ = null;\r\n\t\tp.prevZ = null;\r\n\t\tsortLinked(p);\r\n\t} // Simon Tatham's linked list merge sort algorithm\r\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n\r\n\r\n\tfunction sortLinked(list) {\r\n\t\tlet i,\r\n\t\t\t\tp,\r\n\t\t\t\tq,\r\n\t\t\t\te,\r\n\t\t\t\ttail,\r\n\t\t\t\tnumMerges,\r\n\t\t\t\tpSize,\r\n\t\t\t\tqSize,\r\n\t\t\t\tinSize = 1;\r\n\r\n\t\tdo {\r\n\t\t\tp = list;\r\n\t\t\tlist = null;\r\n\t\t\ttail = null;\r\n\t\t\tnumMerges = 0;\r\n\r\n\t\t\twhile (p) {\r\n\t\t\t\tnumMerges++;\r\n\t\t\t\tq = p;\r\n\t\t\t\tpSize = 0;\r\n\r\n\t\t\t\tfor (i = 0; i < inSize; i++) {\r\n\t\t\t\t\tpSize++;\r\n\t\t\t\t\tq = q.nextZ;\r\n\t\t\t\t\tif (!q) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tqSize = inSize;\r\n\r\n\t\t\t\twhile (pSize > 0 || qSize > 0 && q) {\r\n\t\t\t\t\tif (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\r\n\t\t\t\t\t\te = p;\r\n\t\t\t\t\t\tp = p.nextZ;\r\n\t\t\t\t\t\tpSize--;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\te = q;\r\n\t\t\t\t\t\tq = q.nextZ;\r\n\t\t\t\t\t\tqSize--;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (tail) tail.nextZ = e;else list = e;\r\n\t\t\t\t\te.prevZ = tail;\r\n\t\t\t\t\ttail = e;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp = q;\r\n\t\t\t}\r\n\r\n\t\t\ttail.nextZ = null;\r\n\t\t\tinSize *= 2;\r\n\t\t} while (numMerges > 1);\r\n\r\n\t\treturn list;\r\n\t} // z-order of a point given coords and inverse of the longer side of data bbox\r\n\r\n\r\n\tfunction zOrder(x, y, minX, minY, invSize) {\r\n\t\t// coords are transformed into non-negative 15-bit integer range\r\n\t\tx = 32767 * (x - minX) * invSize;\r\n\t\ty = 32767 * (y - minY) * invSize;\r\n\t\tx = (x | x << 8) & 0x00FF00FF;\r\n\t\tx = (x | x << 4) & 0x0F0F0F0F;\r\n\t\tx = (x | x << 2) & 0x33333333;\r\n\t\tx = (x | x << 1) & 0x55555555;\r\n\t\ty = (y | y << 8) & 0x00FF00FF;\r\n\t\ty = (y | y << 4) & 0x0F0F0F0F;\r\n\t\ty = (y | y << 2) & 0x33333333;\r\n\t\ty = (y | y << 1) & 0x55555555;\r\n\t\treturn x | y << 1;\r\n\t} // find the leftmost node of a polygon ring\r\n\r\n\r\n\tfunction getLeftmost(start) {\r\n\t\tlet p = start,\r\n\t\t\t\tleftmost = start;\r\n\r\n\t\tdo {\r\n\t\t\tif (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== start);\r\n\r\n\t\treturn leftmost;\r\n\t} // check if a point lies within a convex triangle\r\n\r\n\r\n\tfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\r\n\t\treturn (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\r\n\t} // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n\r\n\r\n\tfunction isValidDiagonal(a, b) {\r\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\r\n\t\tequals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\r\n\t} // signed area of a triangle\r\n\r\n\r\n\tfunction area(p, q, r) {\r\n\t\treturn (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n\t} // check if two points are equal\r\n\r\n\r\n\tfunction equals(p1, p2) {\r\n\t\treturn p1.x === p2.x && p1.y === p2.y;\r\n\t} // check if two segments intersect\r\n\r\n\r\n\tfunction intersects(p1, q1, p2, q2) {\r\n\t\tconst o1 = sign(area(p1, q1, p2));\r\n\t\tconst o2 = sign(area(p1, q1, q2));\r\n\t\tconst o3 = sign(area(p2, q2, p1));\r\n\t\tconst o4 = sign(area(p2, q2, q1));\r\n\t\tif (o1 !== o2 && o3 !== o4) return true; // general case\r\n\r\n\t\tif (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\r\n\r\n\t\tif (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\r\n\r\n\t\tif (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\r\n\r\n\t\tif (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\r\n\r\n\t\treturn false;\r\n\t} // for collinear points p, q, r, check if point q lies on segment pr\r\n\r\n\r\n\tfunction onSegment(p, q, r) {\r\n\t\treturn q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\r\n\t}\r\n\r\n\tfunction sign(num) {\r\n\t\treturn num > 0 ? 1 : num < 0 ? -1 : 0;\r\n\t} // check if a polygon diagonal intersects any polygon segments\r\n\r\n\r\n\tfunction intersectsPolygon(a, b) {\r\n\t\tlet p = a;\r\n\r\n\t\tdo {\r\n\t\t\tif (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== a);\r\n\r\n\t\treturn false;\r\n\t} // check if a polygon diagonal is locally inside the polygon\r\n\r\n\r\n\tfunction locallyInside(a, b) {\r\n\t\treturn area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\r\n\t} // check if the middle point of a polygon diagonal is inside the polygon\r\n\r\n\r\n\tfunction middleInside(a, b) {\r\n\t\tlet p = a,\r\n\t\t\t\tinside = false;\r\n\t\tconst px = (a.x + b.x) / 2,\r\n\t\t\t\t\tpy = (a.y + b.y) / 2;\r\n\r\n\t\tdo {\r\n\t\t\tif (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== a);\r\n\r\n\t\treturn inside;\r\n\t} // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n\r\n\r\n\tfunction splitPolygon(a, b) {\r\n\t\tconst a2 = new Node(a.i, a.x, a.y),\r\n\t\t\t\t\tb2 = new Node(b.i, b.x, b.y),\r\n\t\t\t\t\tan = a.next,\r\n\t\t\t\t\tbp = b.prev;\r\n\t\ta.next = b;\r\n\t\tb.prev = a;\r\n\t\ta2.next = an;\r\n\t\tan.prev = a2;\r\n\t\tb2.next = a2;\r\n\t\ta2.prev = b2;\r\n\t\tbp.next = b2;\r\n\t\tb2.prev = bp;\r\n\t\treturn b2;\r\n\t} // create a node and optionally link it with previous one (in a circular doubly linked list)\r\n\r\n\r\n\tfunction insertNode(i, x, y, last) {\r\n\t\tconst p = new Node(i, x, y);\r\n\r\n\t\tif (!last) {\r\n\t\t\tp.prev = p;\r\n\t\t\tp.next = p;\r\n\t\t} else {\r\n\t\t\tp.next = last.next;\r\n\t\t\tp.prev = last;\r\n\t\t\tlast.next.prev = p;\r\n\t\t\tlast.next = p;\r\n\t\t}\r\n\r\n\t\treturn p;\r\n\t}\r\n\r\n\tfunction removeNode(p) {\r\n\t\tp.next.prev = p.prev;\r\n\t\tp.prev.next = p.next;\r\n\t\tif (p.prevZ) p.prevZ.nextZ = p.nextZ;\r\n\t\tif (p.nextZ) p.nextZ.prevZ = p.prevZ;\r\n\t}\r\n\r\n\tfunction Node(i, x, y) {\r\n\t\t// vertex index in coordinates array\r\n\t\tthis.i = i; // vertex coordinates\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y; // previous and next vertex nodes in a polygon ring\r\n\r\n\t\tthis.prev = null;\r\n\t\tthis.next = null; // z-order curve value\r\n\r\n\t\tthis.z = null; // previous and next nodes in z-order\r\n\r\n\t\tthis.prevZ = null;\r\n\t\tthis.nextZ = null; // indicates whether this is a steiner point\r\n\r\n\t\tthis.steiner = false;\r\n\t}\r\n\r\n\tfunction signedArea(data, start, end, dim) {\r\n\t\tlet sum = 0;\r\n\r\n\t\tfor (let i = start, j = end - dim; i < end; i += dim) {\r\n\t\t\tsum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\r\n\t\t\tj = i;\r\n\t\t}\r\n\r\n\t\treturn sum;\r\n\t}\r\n\r\n\tclass ShapeUtils {\r\n\t\t// calculate area of the contour polygon\r\n\t\tstatic area(contour) {\r\n\t\t\tconst n = contour.length;\r\n\t\t\tlet a = 0.0;\r\n\r\n\t\t\tfor (let p = n - 1, q = 0; q < n; p = q++) {\r\n\t\t\t\ta += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\r\n\t\t\t}\r\n\r\n\t\t\treturn a * 0.5;\r\n\t\t}\r\n\r\n\t\tstatic isClockWise(pts) {\r\n\t\t\treturn ShapeUtils.area(pts) < 0;\r\n\t\t}\r\n\r\n\t\tstatic triangulateShape(contour, holes) {\r\n\t\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\r\n\r\n\t\t\tconst holeIndices = []; // array of hole indices\r\n\r\n\t\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\r\n\r\n\t\t\tremoveDupEndPts(contour);\r\n\t\t\taddContour(vertices, contour); //\r\n\r\n\t\t\tlet holeIndex = contour.length;\r\n\t\t\tholes.forEach(removeDupEndPts);\r\n\r\n\t\t\tfor (let i = 0; i < holes.length; i++) {\r\n\t\t\t\tholeIndices.push(holeIndex);\r\n\t\t\t\tholeIndex += holes[i].length;\r\n\t\t\t\taddContour(vertices, holes[i]);\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tconst triangles = Earcut.triangulate(vertices, holeIndices); //\r\n\r\n\t\t\tfor (let i = 0; i < triangles.length; i += 3) {\r\n\t\t\t\tfaces.push(triangles.slice(i, i + 3));\r\n\t\t\t}\r\n\r\n\t\t\treturn faces;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeDupEndPts(points) {\r\n\t\tconst l = points.length;\r\n\r\n\t\tif (l > 2 && points[l - 1].equals(points[0])) {\r\n\t\t\tpoints.pop();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addContour(vertices, contour) {\r\n\t\tfor (let i = 0; i < contour.length; i++) {\r\n\t\t\tvertices.push(contour[i].x);\r\n\t\t\tvertices.push(contour[i].y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *\tcurveSegments: <int>, // number of points on the curves\r\n\t *\tsteps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *\tdepth: <float>, // Depth to extrude the shape\r\n\t *\r\n\t *\tbevelEnabled: <bool>, // turn on bevel\r\n\t *\tbevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *\tbevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\r\n\t *\tbevelOffset: <float>, // how far from shape outline does bevel start\r\n\t *\tbevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *\textrudePath: <THREE.Curve> // curve to extrude shape along\r\n\t *\r\n\t *\tUVGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tclass ExtrudeGeometry extends BufferGeometry {\r\n\t\tconstructor(shapes = new Shape([new Vector2(0.5, 0.5), new Vector2(-0.5, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]), options = {}) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'ExtrudeGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tshapes: shapes,\r\n\t\t\t\toptions: options\r\n\t\t\t};\r\n\t\t\tshapes = Array.isArray(shapes) ? shapes : [shapes];\r\n\t\t\tconst scope = this;\r\n\t\t\tconst verticesArray = [];\r\n\t\t\tconst uvArray = [];\r\n\r\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\r\n\t\t\t\tconst shape = shapes[i];\r\n\t\t\t\taddShape(shape);\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\r\n\t\t\tthis.computeVertexNormals(); // functions\r\n\r\n\t\t\tfunction addShape(shape) {\r\n\t\t\t\tconst placeholder = []; // options\r\n\r\n\t\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\r\n\t\t\t\tlet depth = options.depth !== undefined ? options.depth : 1;\r\n\t\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\r\n\t\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\r\n\t\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\r\n\t\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\r\n\t\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\t\t\t\tconst extrudePath = options.extrudePath;\r\n\t\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\r\n\r\n\t\t\t\tif (options.amount !== undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\r\n\t\t\t\t\tdepth = options.amount;\r\n\t\t\t\t} //\r\n\r\n\r\n\t\t\t\tlet extrudePts,\r\n\t\t\t\t\t\textrudeByPath = false;\r\n\t\t\t\tlet splineTube, binormal, normal, position2;\r\n\r\n\t\t\t\tif (extrudePath) {\r\n\t\t\t\t\textrudePts = extrudePath.getSpacedPoints(steps);\r\n\t\t\t\t\textrudeByPath = true;\r\n\t\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\t\t\t\t\t// SETUP TNB variables\r\n\t\t\t\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\t\t\t\tsplineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\t\t\t\tbinormal = new Vector3();\r\n\t\t\t\t\tnormal = new Vector3();\r\n\t\t\t\t\tposition2 = new Vector3();\r\n\t\t\t\t} // Safeguards if bevels are not enabled\r\n\r\n\r\n\t\t\t\tif (!bevelEnabled) {\r\n\t\t\t\t\tbevelSegments = 0;\r\n\t\t\t\t\tbevelThickness = 0;\r\n\t\t\t\t\tbevelSize = 0;\r\n\t\t\t\t\tbevelOffset = 0;\r\n\t\t\t\t} // Variables initialization\r\n\r\n\r\n\t\t\t\tconst shapePoints = shape.extractPoints(curveSegments);\r\n\t\t\t\tlet vertices = shapePoints.shape;\r\n\t\t\t\tconst holes = shapePoints.holes;\r\n\t\t\t\tconst reverse = !ShapeUtils.isClockWise(vertices);\r\n\r\n\t\t\t\tif (reverse) {\r\n\t\t\t\t\tvertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\r\n\t\t\t\t\t\tconst ahole = holes[h];\r\n\r\n\t\t\t\t\t\tif (ShapeUtils.isClockWise(ahole)) {\r\n\t\t\t\t\t\t\tholes[h] = ahole.reverse();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(vertices, holes);\r\n\t\t\t\t/* Vertices */\r\n\r\n\t\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\r\n\t\t\t\t\tconst ahole = holes[h];\r\n\t\t\t\t\tvertices = vertices.concat(ahole);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction scalePt2(pt, vec, size) {\r\n\t\t\t\t\tif (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\r\n\t\t\t\t\treturn vec.clone().multiplyScalar(size).add(pt);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst vlen = vertices.length,\r\n\t\t\t\t\t\t\tflen = faces.length; // Find directions for point movement\r\n\r\n\t\t\t\tfunction getBevelVec(inPt, inPrev, inNext) {\r\n\t\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t\t\t//\t shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t\t\t//\tadjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\r\n\t\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\r\n\t\t\t\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\r\n\t\t\t\t\tconst v_next_x = inNext.x - inPt.x,\r\n\t\t\t\t\t\t\t\tv_next_y = inNext.y - inPt.y;\r\n\t\t\t\t\tconst v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\r\n\r\n\t\t\t\t\tconst collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\r\n\r\n\t\t\t\t\tif (Math.abs(collinear0) > Number.EPSILON) {\r\n\t\t\t\t\t\t// not collinear\r\n\t\t\t\t\t\t// length of vectors for normalizing\r\n\t\t\t\t\t\tconst v_prev_len = Math.sqrt(v_prev_lensq);\r\n\t\t\t\t\t\tconst v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\r\n\r\n\t\t\t\t\t\tconst ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\r\n\t\t\t\t\t\tconst ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\r\n\t\t\t\t\t\tconst ptNextShift_x = inNext.x - v_next_y / v_next_len;\r\n\t\t\t\t\t\tconst ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\r\n\r\n\t\t\t\t\t\tconst sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\r\n\r\n\t\t\t\t\t\tv_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\r\n\t\t\t\t\t\tv_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t\t\t//\tbut prevent crazy spikes\r\n\r\n\t\t\t\t\t\tconst v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\r\n\r\n\t\t\t\t\t\tif (v_trans_lensq <= 2) {\r\n\t\t\t\t\t\t\treturn new Vector2(v_trans_x, v_trans_y);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_trans_lensq / 2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// handle special case of collinear edges\r\n\t\t\t\t\t\tlet direction_eq = false; // assumes: opposite\r\n\r\n\t\t\t\t\t\tif (v_prev_x > Number.EPSILON) {\r\n\t\t\t\t\t\t\tif (v_next_x > Number.EPSILON) {\r\n\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (v_prev_x < -Number.EPSILON) {\r\n\t\t\t\t\t\t\t\tif (v_next_x < -Number.EPSILON) {\r\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\r\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (direction_eq) {\r\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\t\t\tv_trans_x = -v_prev_y;\r\n\t\t\t\t\t\t\tv_trans_y = v_prev_x;\r\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq / 2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst contourMovements = [];\r\n\r\n\t\t\t\tfor (let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\r\n\t\t\t\t\tif (j === il) j = 0;\r\n\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\r\n\t\t\t\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\t\t\t\tcontourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst holesMovements = [];\r\n\t\t\t\tlet oneHoleMovements,\r\n\t\t\t\t\t\tverticesMovements = contourMovements.concat();\r\n\r\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\r\n\t\t\t\t\tconst ahole = holes[h];\r\n\t\t\t\t\toneHoleMovements = [];\r\n\r\n\t\t\t\t\tfor (let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\r\n\t\t\t\t\t\tif (j === il) j = 0;\r\n\t\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\r\n\r\n\t\t\t\t\t\toneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tholesMovements.push(oneHoleMovements);\r\n\t\t\t\t\tverticesMovements = verticesMovements.concat(oneHoleMovements);\r\n\t\t\t\t} // Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\r\n\t\t\t\tfor (let b = 0; b < bevelSegments; b++) {\r\n\t\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\t\t\t\t\tconst t = b / bevelSegments;\r\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\r\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\r\n\r\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\r\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\r\n\t\t\t\t\t\tv(vert.x, vert.y, -z);\r\n\t\t\t\t\t} // expand holes\r\n\r\n\r\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\r\n\t\t\t\t\t\tconst ahole = holes[h];\r\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\r\n\r\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\r\n\t\t\t\t\t\t\tv(vert.x, vert.y, -z);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst bs = bevelSize + bevelOffset; // Back facing vertices\r\n\r\n\t\t\t\tfor (let i = 0; i < vlen; i++) {\r\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\r\n\r\n\t\t\t\t\tif (!extrudeByPath) {\r\n\t\t\t\t\t\tv(vert.x, vert.y, 0);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\t\t\t\t\t\tnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\r\n\t\t\t\t\t\tbinormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\r\n\t\t\t\t\t\tposition2.copy(extrudePts[0]).add(normal).add(binormal);\r\n\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\r\n\t\t\t\t\t}\r\n\t\t\t\t} // Add stepped vertices...\r\n\t\t\t\t// Including front facing vertices\r\n\r\n\r\n\t\t\t\tfor (let s = 1; s <= steps; s++) {\r\n\t\t\t\t\tfor (let i = 0; i < vlen; i++) {\r\n\t\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\r\n\r\n\t\t\t\t\t\tif (!extrudeByPath) {\r\n\t\t\t\t\t\t\tv(vert.x, vert.y, depth / steps * s);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\t\t\t\t\t\t\tnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\r\n\t\t\t\t\t\t\tbinormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\r\n\t\t\t\t\t\t\tposition2.copy(extrudePts[s]).add(normal).add(binormal);\r\n\t\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} // Add bevel segments planes\r\n\t\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\r\n\r\n\t\t\t\tfor (let b = bevelSegments - 1; b >= 0; b--) {\r\n\t\t\t\t\tconst t = b / bevelSegments;\r\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\r\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\r\n\r\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\r\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\r\n\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\r\n\t\t\t\t\t} // expand holes\r\n\r\n\r\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\r\n\t\t\t\t\t\tconst ahole = holes[h];\r\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\r\n\r\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\r\n\r\n\t\t\t\t\t\t\tif (!extrudeByPath) {\r\n\t\t\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tv(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t/* Faces */\r\n\t\t\t\t// Top and bottom faces\r\n\r\n\r\n\t\t\t\tbuildLidFaces(); // Sides faces\r\n\r\n\t\t\t\tbuildSideFaces(); /////\tInternal functions\r\n\r\n\t\t\t\tfunction buildLidFaces() {\r\n\t\t\t\t\tconst start = verticesArray.length / 3;\r\n\r\n\t\t\t\t\tif (bevelEnabled) {\r\n\t\t\t\t\t\tlet layer = 0; // steps + 1\r\n\r\n\t\t\t\t\t\tlet offset = vlen * layer; // Bottom faces\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\r\n\t\t\t\t\t\t\tconst face = faces[i];\r\n\t\t\t\t\t\t\tf3(face[2] + offset, face[1] + offset, face[0] + offset);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\t\t\toffset = vlen * layer; // Top faces\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\r\n\t\t\t\t\t\t\tconst face = faces[i];\r\n\t\t\t\t\t\t\tf3(face[0] + offset, face[1] + offset, face[2] + offset);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Bottom faces\r\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\r\n\t\t\t\t\t\t\tconst face = faces[i];\r\n\t\t\t\t\t\t\tf3(face[2], face[1], face[0]);\r\n\t\t\t\t\t\t} // Top faces\r\n\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\r\n\t\t\t\t\t\t\tconst face = faces[i];\r\n\t\t\t\t\t\t\tf3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 0);\r\n\t\t\t\t} // Create faces for the z-sides of the shape\r\n\r\n\r\n\t\t\t\tfunction buildSideFaces() {\r\n\t\t\t\t\tconst start = verticesArray.length / 3;\r\n\t\t\t\t\tlet layeroffset = 0;\r\n\t\t\t\t\tsidewalls(contour, layeroffset);\r\n\t\t\t\t\tlayeroffset += contour.length;\r\n\r\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\r\n\t\t\t\t\t\tconst ahole = holes[h];\r\n\t\t\t\t\t\tsidewalls(ahole, layeroffset); //, true\r\n\r\n\t\t\t\t\t\tlayeroffset += ahole.length;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction sidewalls(contour, layeroffset) {\r\n\t\t\t\t\tlet i = contour.length;\r\n\r\n\t\t\t\t\twhile (--i >= 0) {\r\n\t\t\t\t\t\tconst j = i;\r\n\t\t\t\t\t\tlet k = i - 1;\r\n\t\t\t\t\t\tif (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\t\t\t\tfor (let s = 0, sl = steps + bevelSegments * 2; s < sl; s++) {\r\n\t\t\t\t\t\t\tconst slen1 = vlen * s;\r\n\t\t\t\t\t\t\tconst slen2 = vlen * (s + 1);\r\n\t\t\t\t\t\t\tconst a = layeroffset + j + slen1,\r\n\t\t\t\t\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\t\t\t\t\t\t\tf4(a, b, c, d);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction v(x, y, z) {\r\n\t\t\t\t\tplaceholder.push(x);\r\n\t\t\t\t\tplaceholder.push(y);\r\n\t\t\t\t\tplaceholder.push(z);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction f3(a, b, c) {\r\n\t\t\t\t\taddVertex(a);\r\n\t\t\t\t\taddVertex(b);\r\n\t\t\t\t\taddVertex(c);\r\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\r\n\t\t\t\t\tconst uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\r\n\t\t\t\t\taddUV(uvs[0]);\r\n\t\t\t\t\taddUV(uvs[1]);\r\n\t\t\t\t\taddUV(uvs[2]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction f4(a, b, c, d) {\r\n\t\t\t\t\taddVertex(a);\r\n\t\t\t\t\taddVertex(b);\r\n\t\t\t\t\taddVertex(d);\r\n\t\t\t\t\taddVertex(b);\r\n\t\t\t\t\taddVertex(c);\r\n\t\t\t\t\taddVertex(d);\r\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\r\n\t\t\t\t\tconst uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\r\n\t\t\t\t\taddUV(uvs[0]);\r\n\t\t\t\t\taddUV(uvs[1]);\r\n\t\t\t\t\taddUV(uvs[3]);\r\n\t\t\t\t\taddUV(uvs[1]);\r\n\t\t\t\t\taddUV(uvs[2]);\r\n\t\t\t\t\taddUV(uvs[3]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction addVertex(index) {\r\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 0]);\r\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 1]);\r\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 2]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction addUV(vector2) {\r\n\t\t\t\t\tuvArray.push(vector2.x);\r\n\t\t\t\t\tuvArray.push(vector2.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tconst shapes = this.parameters.shapes;\r\n\t\t\tconst options = this.parameters.options;\r\n\t\t\treturn toJSON$1(shapes, options, data);\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data, shapes) {\r\n\t\t\tconst geometryShapes = [];\r\n\r\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\r\n\t\t\t\tconst shape = shapes[data.shapes[j]];\r\n\t\t\t\tgeometryShapes.push(shape);\r\n\t\t\t}\r\n\r\n\t\t\tconst extrudePath = data.options.extrudePath;\r\n\r\n\t\t\tif (extrudePath !== undefined) {\r\n\t\t\t\tdata.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\r\n\t\t\t}\r\n\r\n\t\t\treturn new ExtrudeGeometry(geometryShapes, data.options);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst WorldUVGenerator = {\r\n\t\tgenerateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\r\n\t\t\tconst a_x = vertices[indexA * 3];\r\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\r\n\t\t\tconst b_x = vertices[indexB * 3];\r\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\r\n\t\t\tconst c_x = vertices[indexC * 3];\r\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\r\n\t\t\treturn [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\r\n\t\t},\r\n\t\tgenerateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\r\n\t\t\tconst a_x = vertices[indexA * 3];\r\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\r\n\t\t\tconst a_z = vertices[indexA * 3 + 2];\r\n\t\t\tconst b_x = vertices[indexB * 3];\r\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\r\n\t\t\tconst b_z = vertices[indexB * 3 + 2];\r\n\t\t\tconst c_x = vertices[indexC * 3];\r\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\r\n\t\t\tconst c_z = vertices[indexC * 3 + 2];\r\n\t\t\tconst d_x = vertices[indexD * 3];\r\n\t\t\tconst d_y = vertices[indexD * 3 + 1];\r\n\t\t\tconst d_z = vertices[indexD * 3 + 2];\r\n\r\n\t\t\tif (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\r\n\t\t\t\treturn [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\r\n\t\t\t} else {\r\n\t\t\t\treturn [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tfunction toJSON$1(shapes, options, data) {\r\n\t\tdata.shapes = [];\r\n\r\n\t\tif (Array.isArray(shapes)) {\r\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\r\n\t\t\t\tconst shape = shapes[i];\r\n\t\t\t\tdata.shapes.push(shape.uuid);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdata.shapes.push(shapes.uuid);\r\n\t\t}\r\n\r\n\t\tif (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\r\n\t\treturn data;\r\n\t}\r\n\r\n\tclass IcosahedronGeometry extends PolyhedronGeometry {\r\n\t\tconstructor(radius = 1, detail = 0) {\r\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\r\n\t\t\tconst vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\r\n\t\t\tconst indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\r\n\t\t\tsuper(vertices, indices, radius, detail);\r\n\t\t\tthis.type = 'IcosahedronGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tdetail: detail\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new IcosahedronGeometry(data.radius, data.detail);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass LatheGeometry extends BufferGeometry {\r\n\t\tconstructor(points = [new Vector2(0, 0.5), new Vector2(0.5, 0), new Vector2(0, -0.5)], segments = 12, phiStart = 0, phiLength = Math.PI * 2) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'LatheGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tpoints: points,\r\n\t\t\t\tsegments: segments,\r\n\t\t\t\tphiStart: phiStart,\r\n\t\t\t\tphiLength: phiLength\r\n\t\t\t};\r\n\t\t\tsegments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\r\n\r\n\t\t\tphiLength = clamp(phiLength, 0, Math.PI * 2); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tconst inverseSegments = 1.0 / segments;\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst uv = new Vector2(); // generate vertices and uvs\r\n\r\n\t\t\tfor (let i = 0; i <= segments; i++) {\r\n\t\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\r\n\t\t\t\tconst sin = Math.sin(phi);\r\n\t\t\t\tconst cos = Math.cos(phi);\r\n\r\n\t\t\t\tfor (let j = 0; j <= points.length - 1; j++) {\r\n\t\t\t\t\t// vertex\r\n\t\t\t\t\tvertex.x = points[j].x * sin;\r\n\t\t\t\t\tvertex.y = points[j].y;\r\n\t\t\t\t\tvertex.z = points[j].x * cos;\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // uv\r\n\r\n\t\t\t\t\tuv.x = i / segments;\r\n\t\t\t\t\tuv.y = j / (points.length - 1);\r\n\t\t\t\t\tuvs.push(uv.x, uv.y);\r\n\t\t\t\t}\r\n\t\t\t} // indices\r\n\r\n\r\n\t\t\tfor (let i = 0; i < segments; i++) {\r\n\t\t\t\tfor (let j = 0; j < points.length - 1; j++) {\r\n\t\t\t\t\tconst base = j + i * points.length;\r\n\t\t\t\t\tconst a = base;\r\n\t\t\t\t\tconst b = base + points.length;\r\n\t\t\t\t\tconst c = base + points.length + 1;\r\n\t\t\t\t\tconst d = base + 1; // faces\r\n\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\r\n\r\n\t\t\tthis.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\r\n\t\t\t// because the corresponding vertices are identical (but still have different UVs).\r\n\r\n\t\t\tif (phiLength === Math.PI * 2) {\r\n\t\t\t\tconst normals = this.attributes.normal.array;\r\n\t\t\t\tconst n1 = new Vector3();\r\n\t\t\t\tconst n2 = new Vector3();\r\n\t\t\t\tconst n = new Vector3(); // this is the buffer offset for the last line of vertices\r\n\r\n\t\t\t\tconst base = segments * points.length * 3;\r\n\r\n\t\t\t\tfor (let i = 0, j = 0; i < points.length; i++, j += 3) {\r\n\t\t\t\t\t// select the normal of the vertex in the first line\r\n\t\t\t\t\tn1.x = normals[j + 0];\r\n\t\t\t\t\tn1.y = normals[j + 1];\r\n\t\t\t\t\tn1.z = normals[j + 2]; // select the normal of the vertex in the last line\r\n\r\n\t\t\t\t\tn2.x = normals[base + j + 0];\r\n\t\t\t\t\tn2.y = normals[base + j + 1];\r\n\t\t\t\t\tn2.z = normals[base + j + 2]; // average normals\r\n\r\n\t\t\t\t\tn.addVectors(n1, n2).normalize(); // assign the new values to both normals\r\n\r\n\t\t\t\t\tnormals[j + 0] = normals[base + j + 0] = n.x;\r\n\t\t\t\t\tnormals[j + 1] = normals[base + j + 1] = n.y;\r\n\t\t\t\t\tnormals[j + 2] = normals[base + j + 2] = n.z;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new LatheGeometry(data.points, data.segments, data.phiStart, data.phiLength);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass OctahedronGeometry extends PolyhedronGeometry {\r\n\t\tconstructor(radius = 1, detail = 0) {\r\n\t\t\tconst vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\r\n\t\t\tconst indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\r\n\t\t\tsuper(vertices, indices, radius, detail);\r\n\t\t\tthis.type = 'OctahedronGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tdetail: detail\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new OctahedronGeometry(data.radius, data.detail);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass RingGeometry extends BufferGeometry {\r\n\t\tconstructor(innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'RingGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tinnerRadius: innerRadius,\r\n\t\t\t\touterRadius: outerRadius,\r\n\t\t\t\tthetaSegments: thetaSegments,\r\n\t\t\t\tphiSegments: phiSegments,\r\n\t\t\t\tthetaStart: thetaStart,\r\n\t\t\t\tthetaLength: thetaLength\r\n\t\t\t};\r\n\t\t\tthetaSegments = Math.max(3, thetaSegments);\r\n\t\t\tphiSegments = Math.max(1, phiSegments); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // some helper variables\r\n\r\n\t\t\tlet radius = innerRadius;\r\n\t\t\tconst radiusStep = (outerRadius - innerRadius) / phiSegments;\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst uv = new Vector2(); // generate vertices, normals and uvs\r\n\r\n\t\t\tfor (let j = 0; j <= phiSegments; j++) {\r\n\t\t\t\tfor (let i = 0; i <= thetaSegments; i++) {\r\n\t\t\t\t\t// values are generate from the inside of the ring to the outside\r\n\t\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength; // vertex\r\n\r\n\t\t\t\t\tvertex.x = radius * Math.cos(segment);\r\n\t\t\t\t\tvertex.y = radius * Math.sin(segment);\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n\t\t\t\t\tnormals.push(0, 0, 1); // uv\r\n\r\n\t\t\t\t\tuv.x = (vertex.x / outerRadius + 1) / 2;\r\n\t\t\t\t\tuv.y = (vertex.y / outerRadius + 1) / 2;\r\n\t\t\t\t\tuvs.push(uv.x, uv.y);\r\n\t\t\t\t} // increase the radius for next row of vertices\r\n\r\n\r\n\t\t\t\tradius += radiusStep;\r\n\t\t\t} // indices\r\n\r\n\r\n\t\t\tfor (let j = 0; j < phiSegments; j++) {\r\n\t\t\t\tconst thetaSegmentLevel = j * (thetaSegments + 1);\r\n\r\n\t\t\t\tfor (let i = 0; i < thetaSegments; i++) {\r\n\t\t\t\t\tconst segment = i + thetaSegmentLevel;\r\n\t\t\t\t\tconst a = segment;\r\n\t\t\t\t\tconst b = segment + thetaSegments + 1;\r\n\t\t\t\t\tconst c = segment + thetaSegments + 2;\r\n\t\t\t\t\tconst d = segment + 1; // faces\r\n\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new RingGeometry(data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass ShapeGeometry extends BufferGeometry {\r\n\t\tconstructor(shapes = new Shape([new Vector2(0, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]), curveSegments = 12) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'ShapeGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tshapes: shapes,\r\n\t\t\t\tcurveSegments: curveSegments\r\n\t\t\t}; // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tlet groupStart = 0;\r\n\t\t\tlet groupCount = 0; // allow single and array values for \"shapes\" parameter\r\n\r\n\t\t\tif (Array.isArray(shapes) === false) {\r\n\t\t\t\taddShape(shapes);\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < shapes.length; i++) {\r\n\t\t\t\t\taddShape(shapes[i]);\r\n\t\t\t\t\tthis.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\r\n\r\n\t\t\t\t\tgroupStart += groupCount;\r\n\t\t\t\t\tgroupCount = 0;\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\r\n\r\n\t\t\tfunction addShape(shape) {\r\n\t\t\t\tconst indexOffset = vertices.length / 3;\r\n\t\t\t\tconst points = shape.extractPoints(curveSegments);\r\n\t\t\t\tlet shapeVertices = points.shape;\r\n\t\t\t\tconst shapeHoles = points.holes; // check direction of vertices\r\n\r\n\t\t\t\tif (ShapeUtils.isClockWise(shapeVertices) === false) {\r\n\t\t\t\t\tshapeVertices = shapeVertices.reverse();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\r\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\r\n\r\n\t\t\t\t\tif (ShapeUtils.isClockWise(shapeHole) === true) {\r\n\t\t\t\t\t\tshapeHoles[i] = shapeHole.reverse();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\r\n\r\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\r\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\r\n\t\t\t\t\tshapeVertices = shapeVertices.concat(shapeHole);\r\n\t\t\t\t} // vertices, normals, uvs\r\n\r\n\r\n\t\t\t\tfor (let i = 0, l = shapeVertices.length; i < l; i++) {\r\n\t\t\t\t\tconst vertex = shapeVertices[i];\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, 0);\r\n\t\t\t\t\tnormals.push(0, 0, 1);\r\n\t\t\t\t\tuvs.push(vertex.x, vertex.y); // world uvs\r\n\t\t\t\t} // incides\r\n\r\n\r\n\t\t\t\tfor (let i = 0, l = faces.length; i < l; i++) {\r\n\t\t\t\t\tconst face = faces[i];\r\n\t\t\t\t\tconst a = face[0] + indexOffset;\r\n\t\t\t\t\tconst b = face[1] + indexOffset;\r\n\t\t\t\t\tconst c = face[2] + indexOffset;\r\n\t\t\t\t\tindices.push(a, b, c);\r\n\t\t\t\t\tgroupCount += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tconst shapes = this.parameters.shapes;\r\n\t\t\treturn toJSON(shapes, data);\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data, shapes) {\r\n\t\t\tconst geometryShapes = [];\r\n\r\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\r\n\t\t\t\tconst shape = shapes[data.shapes[j]];\r\n\t\t\t\tgeometryShapes.push(shape);\r\n\t\t\t}\r\n\r\n\t\t\treturn new ShapeGeometry(geometryShapes, data.curveSegments);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction toJSON(shapes, data) {\r\n\t\tdata.shapes = [];\r\n\r\n\t\tif (Array.isArray(shapes)) {\r\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\r\n\t\t\t\tconst shape = shapes[i];\r\n\t\t\t\tdata.shapes.push(shape.uuid);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdata.shapes.push(shapes.uuid);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tclass SphereGeometry extends BufferGeometry {\r\n\t\tconstructor(radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'SphereGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\twidthSegments: widthSegments,\r\n\t\t\t\theightSegments: heightSegments,\r\n\t\t\t\tphiStart: phiStart,\r\n\t\t\t\tphiLength: phiLength,\r\n\t\t\t\tthetaStart: thetaStart,\r\n\t\t\t\tthetaLength: thetaLength\r\n\t\t\t};\r\n\t\t\twidthSegments = Math.max(3, Math.floor(widthSegments));\r\n\t\t\theightSegments = Math.max(2, Math.floor(heightSegments));\r\n\t\t\tconst thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\r\n\t\t\tlet index = 0;\r\n\t\t\tconst grid = [];\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst normal = new Vector3(); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // generate vertices, normals and uvs\r\n\r\n\t\t\tfor (let iy = 0; iy <= heightSegments; iy++) {\r\n\t\t\t\tconst verticesRow = [];\r\n\t\t\t\tconst v = iy / heightSegments; // special case for the poles\r\n\r\n\t\t\t\tlet uOffset = 0;\r\n\r\n\t\t\t\tif (iy == 0 && thetaStart == 0) {\r\n\t\t\t\t\tuOffset = 0.5 / widthSegments;\r\n\t\t\t\t} else if (iy == heightSegments && thetaEnd == Math.PI) {\r\n\t\t\t\t\tuOffset = -0.5 / widthSegments;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let ix = 0; ix <= widthSegments; ix++) {\r\n\t\t\t\t\tconst u = ix / widthSegments; // vertex\r\n\r\n\t\t\t\t\tvertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n\t\t\t\t\tvertex.y = radius * Math.cos(thetaStart + v * thetaLength);\r\n\t\t\t\t\tvertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n\t\t\t\t\tnormal.copy(vertex).normalize();\r\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n\t\t\t\t\tuvs.push(u + uOffset, 1 - v);\r\n\t\t\t\t\tverticesRow.push(index++);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgrid.push(verticesRow);\r\n\t\t\t} // indices\r\n\r\n\r\n\t\t\tfor (let iy = 0; iy < heightSegments; iy++) {\r\n\t\t\t\tfor (let ix = 0; ix < widthSegments; ix++) {\r\n\t\t\t\t\tconst a = grid[iy][ix + 1];\r\n\t\t\t\t\tconst b = grid[iy][ix];\r\n\t\t\t\t\tconst c = grid[iy + 1][ix];\r\n\t\t\t\t\tconst d = grid[iy + 1][ix + 1];\r\n\t\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\r\n\t\t\t\t\tif (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass TetrahedronGeometry extends PolyhedronGeometry {\r\n\t\tconstructor(radius = 1, detail = 0) {\r\n\t\t\tconst vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\r\n\t\t\tconst indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\r\n\t\t\tsuper(vertices, indices, radius, detail);\r\n\t\t\tthis.type = 'TetrahedronGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tdetail: detail\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new TetrahedronGeometry(data.radius, data.detail);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass TorusGeometry extends BufferGeometry {\r\n\t\tconstructor(radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'TorusGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\ttube: tube,\r\n\t\t\t\tradialSegments: radialSegments,\r\n\t\t\t\ttubularSegments: tubularSegments,\r\n\t\t\t\tarc: arc\r\n\t\t\t};\r\n\t\t\tradialSegments = Math.floor(radialSegments);\r\n\t\t\ttubularSegments = Math.floor(tubularSegments); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tconst center = new Vector3();\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst normal = new Vector3(); // generate vertices, normals and uvs\r\n\r\n\t\t\tfor (let j = 0; j <= radialSegments; j++) {\r\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\r\n\t\t\t\t\tconst u = i / tubularSegments * arc;\r\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2; // vertex\r\n\r\n\t\t\t\t\tvertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\r\n\t\t\t\t\tvertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\r\n\t\t\t\t\tvertex.z = tube * Math.sin(v);\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n\t\t\t\t\tcenter.x = radius * Math.cos(u);\r\n\t\t\t\t\tcenter.y = radius * Math.sin(u);\r\n\t\t\t\t\tnormal.subVectors(vertex, center).normalize();\r\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n\t\t\t\t\tuvs.push(i / tubularSegments);\r\n\t\t\t\t\tuvs.push(j / radialSegments);\r\n\t\t\t\t}\r\n\t\t\t} // generate indices\r\n\r\n\r\n\t\t\tfor (let j = 1; j <= radialSegments; j++) {\r\n\t\t\t\tfor (let i = 1; i <= tubularSegments; i++) {\r\n\t\t\t\t\t// indices\r\n\t\t\t\t\tconst a = (tubularSegments + 1) * j + i - 1;\r\n\t\t\t\t\tconst b = (tubularSegments + 1) * (j - 1) + i - 1;\r\n\t\t\t\t\tconst c = (tubularSegments + 1) * (j - 1) + i;\r\n\t\t\t\t\tconst d = (tubularSegments + 1) * j + i; // faces\r\n\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass TorusKnotGeometry extends BufferGeometry {\r\n\t\tconstructor(radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'TorusKnotGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\ttube: tube,\r\n\t\t\t\ttubularSegments: tubularSegments,\r\n\t\t\t\tradialSegments: radialSegments,\r\n\t\t\t\tp: p,\r\n\t\t\t\tq: q\r\n\t\t\t};\r\n\t\t\ttubularSegments = Math.floor(tubularSegments);\r\n\t\t\tradialSegments = Math.floor(radialSegments); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst normal = new Vector3();\r\n\t\t\tconst P1 = new Vector3();\r\n\t\t\tconst P2 = new Vector3();\r\n\t\t\tconst B = new Vector3();\r\n\t\t\tconst T = new Vector3();\r\n\t\t\tconst N = new Vector3(); // generate vertices, normals and uvs\r\n\r\n\t\t\tfor (let i = 0; i <= tubularSegments; ++i) {\r\n\t\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\r\n\t\t\t\tconst u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n\t\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\r\n\t\t\t\tcalculatePositionOnCurve(u, p, q, radius, P1);\r\n\t\t\t\tcalculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\r\n\r\n\t\t\t\tT.subVectors(P2, P1);\r\n\t\t\t\tN.addVectors(P2, P1);\r\n\t\t\t\tB.crossVectors(T, N);\r\n\t\t\t\tN.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\r\n\r\n\t\t\t\tB.normalize();\r\n\t\t\t\tN.normalize();\r\n\r\n\t\t\t\tfor (let j = 0; j <= radialSegments; ++j) {\r\n\t\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n\t\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\r\n\t\t\t\t\tconst cx = -tube * Math.cos(v);\r\n\t\t\t\t\tconst cy = tube * Math.sin(v); // now calculate the final vertex position.\r\n\t\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\r\n\r\n\t\t\t\t\tvertex.x = P1.x + (cx * N.x + cy * B.x);\r\n\t\t\t\t\tvertex.y = P1.y + (cx * N.y + cy * B.y);\r\n\t\t\t\t\tvertex.z = P1.z + (cx * N.z + cy * B.z);\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n\r\n\t\t\t\t\tnormal.subVectors(vertex, P1).normalize();\r\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n\t\t\t\t\tuvs.push(i / tubularSegments);\r\n\t\t\t\t\tuvs.push(j / radialSegments);\r\n\t\t\t\t}\r\n\t\t\t} // generate indices\r\n\r\n\r\n\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\r\n\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\r\n\t\t\t\t\t// indices\r\n\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\r\n\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\r\n\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\r\n\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\r\n\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\r\n\r\n\t\t\tfunction calculatePositionOnCurve(u, p, q, radius, position) {\r\n\t\t\t\tconst cu = Math.cos(u);\r\n\t\t\t\tconst su = Math.sin(u);\r\n\t\t\t\tconst quOverP = q / p * u;\r\n\t\t\t\tconst cs = Math.cos(quOverP);\r\n\t\t\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\r\n\t\t\t\tposition.y = radius * (2 + cs) * su * 0.5;\r\n\t\t\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new TorusKnotGeometry(data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass TubeGeometry extends BufferGeometry {\r\n\t\tconstructor(path = new QuadraticBezierCurve3(new Vector3(-1, -1, 0), new Vector3(-1, 1, 0), new Vector3(1, 1, 0)), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'TubeGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tpath: path,\r\n\t\t\t\ttubularSegments: tubularSegments,\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tradialSegments: radialSegments,\r\n\t\t\t\tclosed: closed\r\n\t\t\t};\r\n\t\t\tconst frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\r\n\r\n\t\t\tthis.tangents = frames.tangents;\r\n\t\t\tthis.normals = frames.normals;\r\n\t\t\tthis.binormals = frames.binormals; // helper variables\r\n\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst normal = new Vector3();\r\n\t\t\tconst uv = new Vector2();\r\n\t\t\tlet P = new Vector3(); // buffer\r\n\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = [];\r\n\t\t\tconst indices = []; // create buffer data\r\n\r\n\t\t\tgenerateBufferData(); // build geometry\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\r\n\r\n\t\t\tfunction generateBufferData() {\r\n\t\t\t\tfor (let i = 0; i < tubularSegments; i++) {\r\n\t\t\t\t\tgenerateSegment(i);\r\n\t\t\t\t} // if the geometry is not closed, generate the last row of vertices and normals\r\n\t\t\t\t// at the regular position on the given path\r\n\t\t\t\t//\r\n\t\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\r\n\r\n\r\n\t\t\t\tgenerateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\r\n\t\t\t\t// this makes it easy compute correct values for closed geometries\r\n\r\n\t\t\t\tgenerateUVs(); // finally create faces\r\n\r\n\t\t\t\tgenerateIndices();\r\n\t\t\t}\r\n\r\n\t\t\tfunction generateSegment(i) {\r\n\t\t\t\t// we use getPointAt to sample evenly distributed points from the given path\r\n\t\t\t\tP = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\r\n\r\n\t\t\t\tconst N = frames.normals[i];\r\n\t\t\t\tconst B = frames.binormals[i]; // generate normals and vertices for the current segment\r\n\r\n\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\r\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\r\n\t\t\t\t\tconst sin = Math.sin(v);\r\n\t\t\t\t\tconst cos = -Math.cos(v); // normal\r\n\r\n\t\t\t\t\tnormal.x = cos * N.x + sin * B.x;\r\n\t\t\t\t\tnormal.y = cos * N.y + sin * B.y;\r\n\t\t\t\t\tnormal.z = cos * N.z + sin * B.z;\r\n\t\t\t\t\tnormal.normalize();\r\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // vertex\r\n\r\n\t\t\t\t\tvertex.x = P.x + radius * normal.x;\r\n\t\t\t\t\tvertex.y = P.y + radius * normal.y;\r\n\t\t\t\t\tvertex.z = P.z + radius * normal.z;\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction generateIndices() {\r\n\t\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\r\n\t\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\r\n\t\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\r\n\t\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\r\n\t\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\r\n\t\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\r\n\r\n\t\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction generateUVs() {\r\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\r\n\t\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\r\n\t\t\t\t\t\tuv.x = i / tubularSegments;\r\n\t\t\t\t\t\tuv.y = j / radialSegments;\r\n\t\t\t\t\t\tuvs.push(uv.x, uv.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.path = this.parameters.path.toJSON();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\r\n\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\r\n\t\t\treturn new TubeGeometry(new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass WireframeGeometry extends BufferGeometry {\r\n\t\tconstructor(geometry = null) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'WireframeGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tgeometry: geometry\r\n\t\t\t};\r\n\r\n\t\t\tif (geometry !== null) {\r\n\t\t\t\t// buffer\r\n\t\t\t\tconst vertices = [];\r\n\t\t\t\tconst edges = new Set(); // helper variables\r\n\r\n\t\t\t\tconst start = new Vector3();\r\n\t\t\t\tconst end = new Vector3();\r\n\r\n\t\t\t\tif (geometry.index !== null) {\r\n\t\t\t\t\t// indexed BufferGeometry\r\n\t\t\t\t\tconst position = geometry.attributes.position;\r\n\t\t\t\t\tconst indices = geometry.index;\r\n\t\t\t\t\tlet groups = geometry.groups;\r\n\r\n\t\t\t\t\tif (groups.length === 0) {\r\n\t\t\t\t\t\tgroups = [{\r\n\t\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\t\tcount: indices.count,\r\n\t\t\t\t\t\t\tmaterialIndex: 0\r\n\t\t\t\t\t\t}];\r\n\t\t\t\t\t} // create a data structure that contains all eges without duplicates\r\n\r\n\r\n\t\t\t\t\tfor (let o = 0, ol = groups.length; o < ol; ++o) {\r\n\t\t\t\t\t\tconst group = groups[o];\r\n\t\t\t\t\t\tconst groupStart = group.start;\r\n\t\t\t\t\t\tconst groupCount = group.count;\r\n\r\n\t\t\t\t\t\tfor (let i = groupStart, l = groupStart + groupCount; i < l; i += 3) {\r\n\t\t\t\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\t\t\t\tconst index1 = indices.getX(i + j);\r\n\t\t\t\t\t\t\t\tconst index2 = indices.getX(i + (j + 1) % 3);\r\n\t\t\t\t\t\t\t\tstart.fromBufferAttribute(position, index1);\r\n\t\t\t\t\t\t\t\tend.fromBufferAttribute(position, index2);\r\n\r\n\t\t\t\t\t\t\t\tif (isUniqueEdge(start, end, edges) === true) {\r\n\t\t\t\t\t\t\t\t\tvertices.push(start.x, start.y, start.z);\r\n\t\t\t\t\t\t\t\t\tvertices.push(end.x, end.y, end.z);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// non-indexed BufferGeometry\r\n\t\t\t\t\tconst position = geometry.attributes.position;\r\n\r\n\t\t\t\t\tfor (let i = 0, l = position.count / 3; i < l; i++) {\r\n\t\t\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\r\n\t\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\r\n\t\t\t\t\t\t\tconst index1 = 3 * i + j;\r\n\t\t\t\t\t\t\tconst index2 = 3 * i + (j + 1) % 3;\r\n\t\t\t\t\t\t\tstart.fromBufferAttribute(position, index1);\r\n\t\t\t\t\t\t\tend.fromBufferAttribute(position, index2);\r\n\r\n\t\t\t\t\t\t\tif (isUniqueEdge(start, end, edges) === true) {\r\n\t\t\t\t\t\t\t\tvertices.push(start.x, start.y, start.z);\r\n\t\t\t\t\t\t\t\tvertices.push(end.x, end.y, end.z);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} // build geometry\r\n\r\n\r\n\t\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction isUniqueEdge(start, end, edges) {\r\n\t\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\r\n\t\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\r\n\r\n\t\tif (edges.has(hash1) === true || edges.has(hash2) === true) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tedges.add(hash1, hash2);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tvar Geometries = /*#__PURE__*/Object.freeze({\r\n\t\t__proto__: null,\r\n\t\tBoxGeometry: BoxGeometry,\r\n\t\tBoxBufferGeometry: BoxGeometry,\r\n\t\tCircleGeometry: CircleGeometry,\r\n\t\tCircleBufferGeometry: CircleGeometry,\r\n\t\tConeGeometry: ConeGeometry,\r\n\t\tConeBufferGeometry: ConeGeometry,\r\n\t\tCylinderGeometry: CylinderGeometry,\r\n\t\tCylinderBufferGeometry: CylinderGeometry,\r\n\t\tDodecahedronGeometry: DodecahedronGeometry,\r\n\t\tDodecahedronBufferGeometry: DodecahedronGeometry,\r\n\t\tEdgesGeometry: EdgesGeometry,\r\n\t\tExtrudeGeometry: ExtrudeGeometry,\r\n\t\tExtrudeBufferGeometry: ExtrudeGeometry,\r\n\t\tIcosahedronGeometry: IcosahedronGeometry,\r\n\t\tIcosahedronBufferGeometry: IcosahedronGeometry,\r\n\t\tLatheGeometry: LatheGeometry,\r\n\t\tLatheBufferGeometry: LatheGeometry,\r\n\t\tOctahedronGeometry: OctahedronGeometry,\r\n\t\tOctahedronBufferGeometry: OctahedronGeometry,\r\n\t\tPlaneGeometry: PlaneGeometry,\r\n\t\tPlaneBufferGeometry: PlaneGeometry,\r\n\t\tPolyhedronGeometry: PolyhedronGeometry,\r\n\t\tPolyhedronBufferGeometry: PolyhedronGeometry,\r\n\t\tRingGeometry: RingGeometry,\r\n\t\tRingBufferGeometry: RingGeometry,\r\n\t\tShapeGeometry: ShapeGeometry,\r\n\t\tShapeBufferGeometry: ShapeGeometry,\r\n\t\tSphereGeometry: SphereGeometry,\r\n\t\tSphereBufferGeometry: SphereGeometry,\r\n\t\tTetrahedronGeometry: TetrahedronGeometry,\r\n\t\tTetrahedronBufferGeometry: TetrahedronGeometry,\r\n\t\tTorusGeometry: TorusGeometry,\r\n\t\tTorusBufferGeometry: TorusGeometry,\r\n\t\tTorusKnotGeometry: TorusKnotGeometry,\r\n\t\tTorusKnotBufferGeometry: TorusKnotGeometry,\r\n\t\tTubeGeometry: TubeGeometry,\r\n\t\tTubeBufferGeometry: TubeGeometry,\r\n\t\tWireframeGeometry: WireframeGeometry\r\n\t});\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <THREE.Color>\r\n\t * }\r\n\t */\r\n\r\n\tclass ShadowMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'ShadowMaterial';\r\n\t\t\tthis.color = new Color(0x000000);\r\n\t\t\tthis.transparent = true;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tShadowMaterial.prototype.isShadowMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\troughness: <float>,\r\n\t *\tmetalness: <float>,\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tlightMap: new THREE.Texture( <Image> ),\r\n\t *\tlightMapIntensity: <float>\r\n\t *\r\n\t *\taoMap: new THREE.Texture( <Image> ),\r\n\t *\taoMapIntensity: <float>\r\n\t *\r\n\t *\temissive: <hex>,\r\n\t *\temissiveIntensity: <float>\r\n\t *\temissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tbumpMap: new THREE.Texture( <Image> ),\r\n\t *\tbumpScale: <float>,\r\n\t *\r\n\t *\tnormalMap: new THREE.Texture( <Image> ),\r\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n\t *\tnormalScale: <Vector2>,\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>,\r\n\t *\r\n\t *\troughnessMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tmetalnessMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *\tenvMapIntensity: <float>\r\n\t *\r\n\t *\trefractionRatio: <float>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>,\r\n\t *\r\n\t *\tflatShading: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshStandardMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'STANDARD': ''\r\n\t\t\t};\r\n\t\t\tthis.type = 'MeshStandardMaterial';\r\n\t\t\tthis.color = new Color(0xffffff); // diffuse\r\n\r\n\t\t\tthis.roughness = 1.0;\r\n\t\t\tthis.metalness = 0.0;\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.lightMap = null;\r\n\t\t\tthis.lightMapIntensity = 1.0;\r\n\t\t\tthis.aoMap = null;\r\n\t\t\tthis.aoMapIntensity = 1.0;\r\n\t\t\tthis.emissive = new Color(0x000000);\r\n\t\t\tthis.emissiveIntensity = 1.0;\r\n\t\t\tthis.emissiveMap = null;\r\n\t\t\tthis.bumpMap = null;\r\n\t\t\tthis.bumpScale = 1;\r\n\t\t\tthis.normalMap = null;\r\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\t\tthis.normalScale = new Vector2(1, 1);\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.roughnessMap = null;\r\n\t\t\tthis.metalnessMap = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.envMap = null;\r\n\t\t\tthis.envMapIntensity = 1.0;\r\n\t\t\tthis.refractionRatio = 0.98;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.wireframeLinecap = 'round';\r\n\t\t\tthis.wireframeLinejoin = 'round';\r\n\t\t\tthis.flatShading = false;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'STANDARD': ''\r\n\t\t\t};\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.roughness = source.roughness;\r\n\t\t\tthis.metalness = source.metalness;\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.lightMap = source.lightMap;\r\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\t\tthis.aoMap = source.aoMap;\r\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\t\tthis.emissive.copy(source.emissive);\r\n\t\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\t\t\tthis.bumpMap = source.bumpMap;\r\n\t\t\tthis.bumpScale = source.bumpScale;\r\n\t\t\tthis.normalMap = source.normalMap;\r\n\t\t\tthis.normalMapType = source.normalMapType;\r\n\t\t\tthis.normalScale.copy(source.normalScale);\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\tthis.roughnessMap = source.roughnessMap;\r\n\t\t\tthis.metalnessMap = source.metalnessMap;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.envMap = source.envMap;\r\n\t\t\tthis.envMapIntensity = source.envMapIntensity;\r\n\t\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\t\tthis.flatShading = source.flatShading;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tclearcoat: <float>,\r\n\t *\tclearcoatMap: new THREE.Texture( <Image> ),\r\n\t *\tclearcoatRoughness: <float>,\r\n\t *\tclearcoatRoughnessMap: new THREE.Texture( <Image> ),\r\n\t *\tclearcoatNormalScale: <Vector2>,\r\n\t *\tclearcoatNormalMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tior: <float>,\r\n\t *\treflectivity: <float>,\r\n\t *\r\n\t *\tsheen: <float>,\r\n\t *\tsheenTint: <Color>,\r\n\t *\tsheenRoughness: <float>,\r\n\t *\r\n\t *\ttransmission: <float>,\r\n\t *\ttransmissionMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tthickness: <float>,\r\n\t *\tthicknessMap: new THREE.Texture( <Image> ),\r\n\t *\tattenuationDistance: <float>,\r\n\t *\tattenuationTint: <Color>,\r\n\t *\r\n\t *\tspecularIntensity: <float>,\r\n\t *\tspecularIntensityhMap: new THREE.Texture( <Image> ),\r\n\t *\tspecularTint: <Color>,\r\n\t *\tspecularTintMap: new THREE.Texture( <Image> )\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshPhysicalMaterial extends MeshStandardMaterial {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'STANDARD': '',\r\n\t\t\t\t'PHYSICAL': ''\r\n\t\t\t};\r\n\t\t\tthis.type = 'MeshPhysicalMaterial';\r\n\t\t\tthis.clearcoatMap = null;\r\n\t\t\tthis.clearcoatRoughness = 0.0;\r\n\t\t\tthis.clearcoatRoughnessMap = null;\r\n\t\t\tthis.clearcoatNormalScale = new Vector2(1, 1);\r\n\t\t\tthis.clearcoatNormalMap = null;\r\n\t\t\tthis.ior = 1.5;\r\n\t\t\tObject.defineProperty(this, 'reflectivity', {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn clamp(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);\r\n\t\t\t\t},\r\n\t\t\t\tset: function (reflectivity) {\r\n\t\t\t\t\tthis.ior = (1 + 0.4 * reflectivity) / (1 - 0.4 * reflectivity);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.sheenTint = new Color(0x000000);\r\n\t\t\tthis.sheenRoughness = 1.0;\r\n\t\t\tthis.transmissionMap = null;\r\n\t\t\tthis.thickness = 0.01;\r\n\t\t\tthis.thicknessMap = null;\r\n\t\t\tthis.attenuationDistance = 0.0;\r\n\t\t\tthis.attenuationTint = new Color(1, 1, 1);\r\n\t\t\tthis.specularIntensity = 1.0;\r\n\t\t\tthis.specularIntensityMap = null;\r\n\t\t\tthis.specularTint = new Color(1, 1, 1);\r\n\t\t\tthis.specularTintMap = null;\r\n\t\t\tthis._sheen = 0.0;\r\n\t\t\tthis._clearcoat = 0;\r\n\t\t\tthis._transmission = 0;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tget sheen() {\r\n\t\t\treturn this._sheen;\r\n\t\t}\r\n\r\n\t\tset sheen(value) {\r\n\t\t\tif (this._sheen > 0 !== value > 0) {\r\n\t\t\t\tthis.version++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._sheen = value;\r\n\t\t}\r\n\r\n\t\tget clearcoat() {\r\n\t\t\treturn this._clearcoat;\r\n\t\t}\r\n\r\n\t\tset clearcoat(value) {\r\n\t\t\tif (this._clearcoat > 0 !== value > 0) {\r\n\t\t\t\tthis.version++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._clearcoat = value;\r\n\t\t}\r\n\r\n\t\tget transmission() {\r\n\t\t\treturn this._transmission;\r\n\t\t}\r\n\r\n\t\tset transmission(value) {\r\n\t\t\tif (this._transmission > 0 !== value > 0) {\r\n\t\t\t\tthis.version++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._transmission = value;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'STANDARD': '',\r\n\t\t\t\t'PHYSICAL': ''\r\n\t\t\t};\r\n\t\t\tthis.clearcoat = source.clearcoat;\r\n\t\t\tthis.clearcoatMap = source.clearcoatMap;\r\n\t\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\r\n\t\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\r\n\t\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\r\n\t\t\tthis.clearcoatNormalScale.copy(source.clearcoatNormalScale);\r\n\t\t\tthis.ior = source.ior;\r\n\t\t\tthis.sheen = source.sheen;\r\n\t\t\tthis.sheenTint.copy(source.sheenTint);\r\n\t\t\tthis.sheenRoughness = source.sheenRoughness;\r\n\t\t\tthis.transmission = source.transmission;\r\n\t\t\tthis.transmissionMap = source.transmissionMap;\r\n\t\t\tthis.thickness = source.thickness;\r\n\t\t\tthis.thicknessMap = source.thicknessMap;\r\n\t\t\tthis.attenuationDistance = source.attenuationDistance;\r\n\t\t\tthis.attenuationTint.copy(source.attenuationTint);\r\n\t\t\tthis.specularIntensity = source.specularIntensity;\r\n\t\t\tthis.specularIntensityMap = source.specularIntensityMap;\r\n\t\t\tthis.specularTint.copy(source.specularTint);\r\n\t\t\tthis.specularTintMap = source.specularTintMap;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\tspecular: <hex>,\r\n\t *\tshininess: <float>,\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tlightMap: new THREE.Texture( <Image> ),\r\n\t *\tlightMapIntensity: <float>\r\n\t *\r\n\t *\taoMap: new THREE.Texture( <Image> ),\r\n\t *\taoMapIntensity: <float>\r\n\t *\r\n\t *\temissive: <hex>,\r\n\t *\temissiveIntensity: <float>\r\n\t *\temissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tbumpMap: new THREE.Texture( <Image> ),\r\n\t *\tbumpScale: <float>,\r\n\t *\r\n\t *\tnormalMap: new THREE.Texture( <Image> ),\r\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n\t *\tnormalScale: <Vector2>,\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>,\r\n\t *\r\n\t *\tspecularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *\tcombine: THREE.MultiplyOperation,\r\n\t *\treflectivity: <float>,\r\n\t *\trefractionRatio: <float>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>,\r\n\t *\r\n\t *\tflatShading: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshPhongMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'MeshPhongMaterial';\r\n\t\t\tthis.color = new Color(0xffffff); // diffuse\r\n\r\n\t\t\tthis.specular = new Color(0x111111);\r\n\t\t\tthis.shininess = 30;\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.lightMap = null;\r\n\t\t\tthis.lightMapIntensity = 1.0;\r\n\t\t\tthis.aoMap = null;\r\n\t\t\tthis.aoMapIntensity = 1.0;\r\n\t\t\tthis.emissive = new Color(0x000000);\r\n\t\t\tthis.emissiveIntensity = 1.0;\r\n\t\t\tthis.emissiveMap = null;\r\n\t\t\tthis.bumpMap = null;\r\n\t\t\tthis.bumpScale = 1;\r\n\t\t\tthis.normalMap = null;\r\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\t\tthis.normalScale = new Vector2(1, 1);\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.specularMap = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.envMap = null;\r\n\t\t\tthis.combine = MultiplyOperation;\r\n\t\t\tthis.reflectivity = 1;\r\n\t\t\tthis.refractionRatio = 0.98;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.wireframeLinecap = 'round';\r\n\t\t\tthis.wireframeLinejoin = 'round';\r\n\t\t\tthis.flatShading = false;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.specular.copy(source.specular);\r\n\t\t\tthis.shininess = source.shininess;\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.lightMap = source.lightMap;\r\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\t\tthis.aoMap = source.aoMap;\r\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\t\tthis.emissive.copy(source.emissive);\r\n\t\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\t\t\tthis.bumpMap = source.bumpMap;\r\n\t\t\tthis.bumpScale = source.bumpScale;\r\n\t\t\tthis.normalMap = source.normalMap;\r\n\t\t\tthis.normalMapType = source.normalMapType;\r\n\t\t\tthis.normalScale.copy(source.normalScale);\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\tthis.specularMap = source.specularMap;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.envMap = source.envMap;\r\n\t\t\tthis.combine = source.combine;\r\n\t\t\tthis.reflectivity = source.reflectivity;\r\n\t\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\t\tthis.flatShading = source.flatShading;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\tgradientMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tlightMap: new THREE.Texture( <Image> ),\r\n\t *\tlightMapIntensity: <float>\r\n\t *\r\n\t *\taoMap: new THREE.Texture( <Image> ),\r\n\t *\taoMapIntensity: <float>\r\n\t *\r\n\t *\temissive: <hex>,\r\n\t *\temissiveIntensity: <float>\r\n\t *\temissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tbumpMap: new THREE.Texture( <Image> ),\r\n\t *\tbumpScale: <float>,\r\n\t *\r\n\t *\tnormalMap: new THREE.Texture( <Image> ),\r\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n\t *\tnormalScale: <Vector2>,\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>,\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>,\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshToonMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'TOON': ''\r\n\t\t\t};\r\n\t\t\tthis.type = 'MeshToonMaterial';\r\n\t\t\tthis.color = new Color(0xffffff);\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.gradientMap = null;\r\n\t\t\tthis.lightMap = null;\r\n\t\t\tthis.lightMapIntensity = 1.0;\r\n\t\t\tthis.aoMap = null;\r\n\t\t\tthis.aoMapIntensity = 1.0;\r\n\t\t\tthis.emissive = new Color(0x000000);\r\n\t\t\tthis.emissiveIntensity = 1.0;\r\n\t\t\tthis.emissiveMap = null;\r\n\t\t\tthis.bumpMap = null;\r\n\t\t\tthis.bumpScale = 1;\r\n\t\t\tthis.normalMap = null;\r\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\t\tthis.normalScale = new Vector2(1, 1);\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.wireframeLinecap = 'round';\r\n\t\t\tthis.wireframeLinejoin = 'round';\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.gradientMap = source.gradientMap;\r\n\t\t\tthis.lightMap = source.lightMap;\r\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\t\tthis.aoMap = source.aoMap;\r\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\t\tthis.emissive.copy(source.emissive);\r\n\t\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\t\t\tthis.bumpMap = source.bumpMap;\r\n\t\t\tthis.bumpScale = source.bumpScale;\r\n\t\t\tthis.normalMap = source.normalMap;\r\n\t\t\tthis.normalMapType = source.normalMapType;\r\n\t\t\tthis.normalScale.copy(source.normalScale);\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tbumpMap: new THREE.Texture( <Image> ),\r\n\t *\tbumpScale: <float>,\r\n\t *\r\n\t *\tnormalMap: new THREE.Texture( <Image> ),\r\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n\t *\tnormalScale: <Vector2>,\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>\r\n\t *\r\n\t *\tflatShading: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshNormalMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'MeshNormalMaterial';\r\n\t\t\tthis.bumpMap = null;\r\n\t\t\tthis.bumpScale = 1;\r\n\t\t\tthis.normalMap = null;\r\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\t\tthis.normalScale = new Vector2(1, 1);\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.fog = false;\r\n\t\t\tthis.flatShading = false;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.bumpMap = source.bumpMap;\r\n\t\t\tthis.bumpScale = source.bumpScale;\r\n\t\t\tthis.normalMap = source.normalMap;\r\n\t\t\tthis.normalMapType = source.normalMapType;\r\n\t\t\tthis.normalScale.copy(source.normalScale);\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.flatShading = source.flatShading;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tlightMap: new THREE.Texture( <Image> ),\r\n\t *\tlightMapIntensity: <float>\r\n\t *\r\n\t *\taoMap: new THREE.Texture( <Image> ),\r\n\t *\taoMapIntensity: <float>\r\n\t *\r\n\t *\temissive: <hex>,\r\n\t *\temissiveIntensity: <float>\r\n\t *\temissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tspecularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *\tcombine: THREE.Multiply,\r\n\t *\treflectivity: <float>,\r\n\t *\trefractionRatio: <float>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>,\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshLambertMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'MeshLambertMaterial';\r\n\t\t\tthis.color = new Color(0xffffff); // diffuse\r\n\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.lightMap = null;\r\n\t\t\tthis.lightMapIntensity = 1.0;\r\n\t\t\tthis.aoMap = null;\r\n\t\t\tthis.aoMapIntensity = 1.0;\r\n\t\t\tthis.emissive = new Color(0x000000);\r\n\t\t\tthis.emissiveIntensity = 1.0;\r\n\t\t\tthis.emissiveMap = null;\r\n\t\t\tthis.specularMap = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.envMap = null;\r\n\t\t\tthis.combine = MultiplyOperation;\r\n\t\t\tthis.reflectivity = 1;\r\n\t\t\tthis.refractionRatio = 0.98;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.wireframeLinecap = 'round';\r\n\t\t\tthis.wireframeLinejoin = 'round';\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.lightMap = source.lightMap;\r\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\t\tthis.aoMap = source.aoMap;\r\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\t\tthis.emissive.copy(source.emissive);\r\n\t\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\t\t\tthis.specularMap = source.specularMap;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.envMap = source.envMap;\r\n\t\t\tthis.combine = source.combine;\r\n\t\t\tthis.reflectivity = source.reflectivity;\r\n\t\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tmatcap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tbumpMap: new THREE.Texture( <Image> ),\r\n\t *\tbumpScale: <float>,\r\n\t *\r\n\t *\tnormalMap: new THREE.Texture( <Image> ),\r\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n\t *\tnormalScale: <Vector2>,\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>,\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tflatShading: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshMatcapMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'MATCAP': ''\r\n\t\t\t};\r\n\t\t\tthis.type = 'MeshMatcapMaterial';\r\n\t\t\tthis.color = new Color(0xffffff); // diffuse\r\n\r\n\t\t\tthis.matcap = null;\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.bumpMap = null;\r\n\t\t\tthis.bumpScale = 1;\r\n\t\t\tthis.normalMap = null;\r\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\t\tthis.normalScale = new Vector2(1, 1);\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.flatShading = false;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'MATCAP': ''\r\n\t\t\t};\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.matcap = source.matcap;\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.bumpMap = source.bumpMap;\r\n\t\t\tthis.bumpScale = source.bumpScale;\r\n\t\t\tthis.normalMap = source.normalMap;\r\n\t\t\tthis.normalMapType = source.normalMapType;\r\n\t\t\tthis.normalScale.copy(source.normalScale);\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.flatShading = source.flatShading;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tlinewidth: <float>,\r\n\t *\r\n\t *\tscale: <float>,\r\n\t *\tdashSize: <float>,\r\n\t *\tgapSize: <float>\r\n\t * }\r\n\t */\r\n\r\n\tclass LineDashedMaterial extends LineBasicMaterial {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'LineDashedMaterial';\r\n\t\t\tthis.scale = 1;\r\n\t\t\tthis.dashSize = 3;\r\n\t\t\tthis.gapSize = 1;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.scale = source.scale;\r\n\t\t\tthis.dashSize = source.dashSize;\r\n\t\t\tthis.gapSize = source.gapSize;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\r\n\r\n\tvar Materials = /*#__PURE__*/Object.freeze({\r\n\t\t__proto__: null,\r\n\t\tShadowMaterial: ShadowMaterial,\r\n\t\tSpriteMaterial: SpriteMaterial,\r\n\t\tRawShaderMaterial: RawShaderMaterial,\r\n\t\tShaderMaterial: ShaderMaterial,\r\n\t\tPointsMaterial: PointsMaterial,\r\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\r\n\t\tMeshStandardMaterial: MeshStandardMaterial,\r\n\t\tMeshPhongMaterial: MeshPhongMaterial,\r\n\t\tMeshToonMaterial: MeshToonMaterial,\r\n\t\tMeshNormalMaterial: MeshNormalMaterial,\r\n\t\tMeshLambertMaterial: MeshLambertMaterial,\r\n\t\tMeshDepthMaterial: MeshDepthMaterial,\r\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\r\n\t\tMeshBasicMaterial: MeshBasicMaterial,\r\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\r\n\t\tLineDashedMaterial: LineDashedMaterial,\r\n\t\tLineBasicMaterial: LineBasicMaterial,\r\n\t\tMaterial: Material\r\n\t});\r\n\r\n\tconst AnimationUtils = {\r\n\t\t// same as Array.prototype.slice, but also works on typed arrays\r\n\t\tarraySlice: function (array, from, to) {\r\n\t\t\tif (AnimationUtils.isTypedArray(array)) {\r\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\r\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\r\n\t\t\t\treturn new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\r\n\t\t\t}\r\n\r\n\t\t\treturn array.slice(from, to);\r\n\t\t},\r\n\t\t// converts an array to a specific type\r\n\t\tconvertArray: function (array, type, forceClone) {\r\n\t\t\tif (!array || // let 'undefined' and 'null' pass\r\n\t\t\t!forceClone && array.constructor === type) return array;\r\n\r\n\t\t\tif (typeof type.BYTES_PER_ELEMENT === 'number') {\r\n\t\t\t\treturn new type(array); // create typed array\r\n\t\t\t}\r\n\r\n\t\t\treturn Array.prototype.slice.call(array); // create Array\r\n\t\t},\r\n\t\tisTypedArray: function (object) {\r\n\t\t\treturn ArrayBuffer.isView(object) && !(object instanceof DataView);\r\n\t\t},\r\n\t\t// returns an array by which times and values can be sorted\r\n\t\tgetKeyframeOrder: function (times) {\r\n\t\t\tfunction compareTime(i, j) {\r\n\t\t\t\treturn times[i] - times[j];\r\n\t\t\t}\r\n\r\n\t\t\tconst n = times.length;\r\n\t\t\tconst result = new Array(n);\r\n\r\n\t\t\tfor (let i = 0; i !== n; ++i) result[i] = i;\r\n\r\n\t\t\tresult.sort(compareTime);\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\r\n\t\tsortedArray: function (values, stride, order) {\r\n\t\t\tconst nValues = values.length;\r\n\t\t\tconst result = new values.constructor(nValues);\r\n\r\n\t\t\tfor (let i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\r\n\t\t\t\tconst srcOffset = order[i] * stride;\r\n\r\n\t\t\t\tfor (let j = 0; j !== stride; ++j) {\r\n\t\t\t\t\tresult[dstOffset++] = values[srcOffset + j];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\t// function for parsing AOS keyframe formats\r\n\t\tflattenJSON: function (jsonKeys, times, values, valuePropertyName) {\r\n\t\t\tlet i = 1,\r\n\t\t\t\t\tkey = jsonKeys[0];\r\n\r\n\t\t\twhile (key !== undefined && key[valuePropertyName] === undefined) {\r\n\t\t\t\tkey = jsonKeys[i++];\r\n\t\t\t}\r\n\r\n\t\t\tif (key === undefined) return; // no data\r\n\r\n\t\t\tlet value = key[valuePropertyName];\r\n\t\t\tif (value === undefined) return; // no data\r\n\r\n\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvalue = key[valuePropertyName];\r\n\r\n\t\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\t\ttimes.push(key.time);\r\n\t\t\t\t\t\tvalues.push.apply(values, value); // push all elements\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[i++];\r\n\t\t\t\t} while (key !== undefined);\r\n\t\t\t} else if (value.toArray !== undefined) {\r\n\t\t\t\t// ...assume THREE.Math-ish\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvalue = key[valuePropertyName];\r\n\r\n\t\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\t\ttimes.push(key.time);\r\n\t\t\t\t\t\tvalue.toArray(values, values.length);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[i++];\r\n\t\t\t\t} while (key !== undefined);\r\n\t\t\t} else {\r\n\t\t\t\t// otherwise push as-is\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvalue = key[valuePropertyName];\r\n\r\n\t\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\t\ttimes.push(key.time);\r\n\t\t\t\t\t\tvalues.push(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[i++];\r\n\t\t\t\t} while (key !== undefined);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubclip: function (sourceClip, name, startFrame, endFrame, fps = 30) {\r\n\t\t\tconst clip = sourceClip.clone();\r\n\t\t\tclip.name = name;\r\n\t\t\tconst tracks = [];\r\n\r\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\r\n\t\t\t\tconst track = clip.tracks[i];\r\n\t\t\t\tconst valueSize = track.getValueSize();\r\n\t\t\t\tconst times = [];\r\n\t\t\t\tconst values = [];\r\n\r\n\t\t\t\tfor (let j = 0; j < track.times.length; ++j) {\r\n\t\t\t\t\tconst frame = track.times[j] * fps;\r\n\t\t\t\t\tif (frame < startFrame || frame >= endFrame) continue;\r\n\t\t\t\t\ttimes.push(track.times[j]);\r\n\r\n\t\t\t\t\tfor (let k = 0; k < valueSize; ++k) {\r\n\t\t\t\t\t\tvalues.push(track.values[j * valueSize + k]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (times.length === 0) continue;\r\n\t\t\t\ttrack.times = AnimationUtils.convertArray(times, track.times.constructor);\r\n\t\t\t\ttrack.values = AnimationUtils.convertArray(values, track.values.constructor);\r\n\t\t\t\ttracks.push(track);\r\n\t\t\t}\r\n\r\n\t\t\tclip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\r\n\r\n\t\t\tlet minStartTime = Infinity;\r\n\r\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\r\n\t\t\t\tif (minStartTime > clip.tracks[i].times[0]) {\r\n\t\t\t\t\tminStartTime = clip.tracks[i].times[0];\r\n\t\t\t\t}\r\n\t\t\t} // shift all tracks such that clip begins at t=0\r\n\r\n\r\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\r\n\t\t\t\tclip.tracks[i].shift(-1 * minStartTime);\r\n\t\t\t}\r\n\r\n\t\t\tclip.resetDuration();\r\n\t\t\treturn clip;\r\n\t\t},\r\n\t\tmakeClipAdditive: function (targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30) {\r\n\t\t\tif (fps <= 0) fps = 30;\r\n\t\t\tconst numTracks = referenceClip.tracks.length;\r\n\t\t\tconst referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\r\n\r\n\t\t\tfor (let i = 0; i < numTracks; ++i) {\r\n\t\t\t\tconst referenceTrack = referenceClip.tracks[i];\r\n\t\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\r\n\r\n\t\t\t\tif (referenceTrackType === 'bool' || referenceTrackType === 'string') continue; // Find the track in the target clip whose name and type matches the reference track\r\n\r\n\t\t\t\tconst targetTrack = targetClip.tracks.find(function (track) {\r\n\t\t\t\t\treturn track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\r\n\t\t\t\t});\r\n\t\t\t\tif (targetTrack === undefined) continue;\r\n\t\t\t\tlet referenceOffset = 0;\r\n\t\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\r\n\r\n\t\t\t\tif (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\r\n\t\t\t\t\treferenceOffset = referenceValueSize / 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet targetOffset = 0;\r\n\t\t\t\tconst targetValueSize = targetTrack.getValueSize();\r\n\r\n\t\t\t\tif (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\r\n\t\t\t\t\ttargetOffset = targetValueSize / 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst lastIndex = referenceTrack.times.length - 1;\r\n\t\t\t\tlet referenceValue; // Find the value to subtract out of the track\r\n\r\n\t\t\t\tif (referenceTime <= referenceTrack.times[0]) {\r\n\t\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\r\n\t\t\t\t\tconst startIndex = referenceOffset;\r\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\r\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\r\n\t\t\t\t} else if (referenceTime >= referenceTrack.times[lastIndex]) {\r\n\t\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\r\n\t\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\r\n\t\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\r\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Interpolate to the reference value\r\n\t\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\r\n\t\t\t\t\tconst startIndex = referenceOffset;\r\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\r\n\t\t\t\t\tinterpolant.evaluate(referenceTime);\r\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(interpolant.resultBuffer, startIndex, endIndex);\r\n\t\t\t\t} // Conjugate the quaternion\r\n\r\n\r\n\t\t\t\tif (referenceTrackType === 'quaternion') {\r\n\t\t\t\t\tconst referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\r\n\t\t\t\t\treferenceQuat.toArray(referenceValue);\r\n\t\t\t\t} // Subtract the reference value from all of the track values\r\n\r\n\r\n\t\t\t\tconst numTimes = targetTrack.times.length;\r\n\r\n\t\t\t\tfor (let j = 0; j < numTimes; ++j) {\r\n\t\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\r\n\r\n\t\t\t\t\tif (referenceTrackType === 'quaternion') {\r\n\t\t\t\t\t\t// Multiply the conjugate for quaternion track types\r\n\t\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\r\n\r\n\t\t\t\t\t\tfor (let k = 0; k < valueEnd; ++k) {\r\n\t\t\t\t\t\t\ttargetTrack.values[valueStart + k] -= referenceValue[k];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\r\n\t\t\treturn targetClip;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Abstract base class of interpolants over parametric samples.\r\n\t *\r\n\t * The parameter domain is one dimensional, typically the time or a path\r\n\t * along a curve defined by the data.\r\n\t *\r\n\t * The sample values can have any dimensionality and derived classes may\r\n\t * apply special interpretations to the data.\r\n\t *\r\n\t * This class provides the interval seek in a Template Method, deferring\r\n\t * the actual interpolation to derived classes.\r\n\t *\r\n\t * Time complexity is O(1) for linear access crossing at most two points\r\n\t * and O(log N) for random access, where N is the number of positions.\r\n\t *\r\n\t * References:\r\n\t *\r\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n\t *\r\n\t */\r\n\tclass Interpolant {\r\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n\t\t\tthis.parameterPositions = parameterPositions;\r\n\t\t\tthis._cachedIndex = 0;\r\n\t\t\tthis.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\r\n\t\t\tthis.sampleValues = sampleValues;\r\n\t\t\tthis.valueSize = sampleSize;\r\n\t\t\tthis.settings = null;\r\n\t\t\tthis.DefaultSettings_ = {};\r\n\t\t}\r\n\r\n\t\tevaluate(t) {\r\n\t\t\tconst pp = this.parameterPositions;\r\n\t\t\tlet i1 = this._cachedIndex,\r\n\t\t\t\t\tt1 = pp[i1],\r\n\t\t\t\t\tt0 = pp[i1 - 1];\r\n\r\n\t\t\tvalidate_interval: {\r\n\t\t\t\tseek: {\r\n\t\t\t\t\tlet right;\r\n\r\n\t\t\t\t\tlinear_scan: {\r\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\r\n\t\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t\t//-\r\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\t\tforward_scan: if (!(t < t1)) {\r\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 + 2;;) {\r\n\t\t\t\t\t\t\t\tif (t1 === undefined) {\r\n\t\t\t\t\t\t\t\t\tif (t < t0) break forward_scan; // after end\r\n\r\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t, t0);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\r\n\r\n\t\t\t\t\t\t\t\tt0 = t1;\r\n\t\t\t\t\t\t\t\tt1 = pp[++i1];\r\n\r\n\t\t\t\t\t\t\t\tif (t < t1) {\r\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t\tbreak seek;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} // prepare binary search on the right side of the index\r\n\r\n\r\n\t\t\t\t\t\t\tright = pp.length;\r\n\t\t\t\t\t\t\tbreak linear_scan;\r\n\t\t\t\t\t\t} //- slower code:\r\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\r\n\r\n\t\t\t\t\t\tif (!(t >= t0)) {\r\n\t\t\t\t\t\t\t// looping?\r\n\t\t\t\t\t\t\tconst t1global = pp[1];\r\n\r\n\t\t\t\t\t\t\tif (t < t1global) {\r\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n\r\n\t\t\t\t\t\t\t\tt0 = t1global;\r\n\t\t\t\t\t\t\t} // linear reverse scan\r\n\r\n\r\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 - 2;;) {\r\n\t\t\t\t\t\t\t\tif (t0 === undefined) {\r\n\t\t\t\t\t\t\t\t\t// before start\r\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\r\n\r\n\t\t\t\t\t\t\t\tt1 = t0;\r\n\t\t\t\t\t\t\t\tt0 = pp[--i1 - 1];\r\n\r\n\t\t\t\t\t\t\t\tif (t >= t0) {\r\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t\tbreak seek;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} // prepare binary search on the left side of the index\r\n\r\n\r\n\t\t\t\t\t\t\tright = i1;\r\n\t\t\t\t\t\t\ti1 = 0;\r\n\t\t\t\t\t\t\tbreak linear_scan;\r\n\t\t\t\t\t\t} // the interval is valid\r\n\r\n\r\n\t\t\t\t\t\tbreak validate_interval;\r\n\t\t\t\t\t} // linear scan\r\n\t\t\t\t\t// binary search\r\n\r\n\r\n\t\t\t\t\twhile (i1 < right) {\r\n\t\t\t\t\t\tconst mid = i1 + right >>> 1;\r\n\r\n\t\t\t\t\t\tif (t < pp[mid]) {\r\n\t\t\t\t\t\t\tright = mid;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ti1 = mid + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tt1 = pp[i1];\r\n\t\t\t\t\tt0 = pp[i1 - 1]; // check boundary cases, again\r\n\r\n\t\t\t\t\tif (t0 === undefined) {\r\n\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (t1 === undefined) {\r\n\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t0, t);\r\n\t\t\t\t\t}\r\n\t\t\t\t} // seek\r\n\r\n\r\n\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\tthis.intervalChanged_(i1, t0, t1);\r\n\t\t\t} // validate_interval\r\n\r\n\r\n\t\t\treturn this.interpolate_(i1, t0, t, t1);\r\n\t\t}\r\n\r\n\t\tgetSettings_() {\r\n\t\t\treturn this.settings || this.DefaultSettings_;\r\n\t\t}\r\n\r\n\t\tcopySampleValue_(index) {\r\n\t\t\t// copies a sample value to the result buffer\r\n\t\t\tconst result = this.resultBuffer,\r\n\t\t\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\toffset = index * stride;\r\n\r\n\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\tresult[i] = values[offset + i];\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t} // Template methods for derived classes:\r\n\r\n\r\n\t\tinterpolate_() {\r\n\t\t\tthrow new Error('call to abstract method'); // implementations shall return this.resultBuffer\r\n\t\t}\r\n\r\n\t\tintervalChanged_() {// empty\r\n\t\t}\r\n\r\n\t} // ALIAS DEFINITIONS\r\n\r\n\r\n\tInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\r\n\tInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\r\n\r\n\t/**\r\n\t * Fast and simple cubic spline interpolant.\r\n\t *\r\n\t * It was derived from a Hermitian construction setting the first derivative\r\n\t * at each sample position to the linear slope between neighboring positions\r\n\t * over their parameter interval.\r\n\t */\r\n\r\n\tclass CubicInterpolant extends Interpolant {\r\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n\t\t\tthis._weightPrev = -0;\r\n\t\t\tthis._offsetPrev = -0;\r\n\t\t\tthis._weightNext = -0;\r\n\t\t\tthis._offsetNext = -0;\r\n\t\t\tthis.DefaultSettings_ = {\r\n\t\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\t\tendingEnd: ZeroCurvatureEnding\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tintervalChanged_(i1, t0, t1) {\r\n\t\t\tconst pp = this.parameterPositions;\r\n\t\t\tlet iPrev = i1 - 2,\r\n\t\t\t\t\tiNext = i1 + 1,\r\n\t\t\t\t\ttPrev = pp[iPrev],\r\n\t\t\t\t\ttNext = pp[iNext];\r\n\r\n\t\t\tif (tPrev === undefined) {\r\n\t\t\t\tswitch (this.getSettings_().endingStart) {\r\n\t\t\t\t\tcase ZeroSlopeEnding:\r\n\t\t\t\t\t\t// f'(t0) = 0\r\n\t\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase WrapAroundEnding:\r\n\t\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\t\tiPrev = pp.length - 2;\r\n\t\t\t\t\t\ttPrev = t0 + pp[iPrev] - pp[iPrev + 1];\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// ZeroCurvatureEnding\r\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\r\n\t\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\t\ttPrev = t1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tNext === undefined) {\r\n\t\t\t\tswitch (this.getSettings_().endingEnd) {\r\n\t\t\t\t\tcase ZeroSlopeEnding:\r\n\t\t\t\t\t\t// f'(tN) = 0\r\n\t\t\t\t\t\tiNext = i1;\r\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase WrapAroundEnding:\r\n\t\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\t\tiNext = 1;\r\n\t\t\t\t\t\ttNext = t1 + pp[1] - pp[0];\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// ZeroCurvatureEnding\r\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\r\n\t\t\t\t\t\tiNext = i1 - 1;\r\n\t\t\t\t\t\ttNext = t0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst halfDt = (t1 - t0) * 0.5,\r\n\t\t\t\t\t\tstride = this.valueSize;\r\n\t\t\tthis._weightPrev = halfDt / (t0 - tPrev);\r\n\t\t\tthis._weightNext = halfDt / (tNext - t1);\r\n\t\t\tthis._offsetPrev = iPrev * stride;\r\n\t\t\tthis._offsetNext = iNext * stride;\r\n\t\t}\r\n\r\n\t\tinterpolate_(i1, t0, t, t1) {\r\n\t\t\tconst result = this.resultBuffer,\r\n\t\t\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\to1 = i1 * stride,\r\n\t\t\t\t\t\to0 = o1 - stride,\r\n\t\t\t\t\t\toP = this._offsetPrev,\r\n\t\t\t\t\t\toN = this._offsetNext,\r\n\t\t\t\t\t\twP = this._weightPrev,\r\n\t\t\t\t\t\twN = this._weightNext,\r\n\t\t\t\t\t\tp = (t - t0) / (t1 - t0),\r\n\t\t\t\t\t\tpp = p * p,\r\n\t\t\t\t\t\tppp = pp * p; // evaluate polynomials\r\n\r\n\t\t\tconst sP = -wP * ppp + 2 * wP * pp - wP * p;\r\n\t\t\tconst s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\r\n\t\t\tconst s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\r\n\t\t\tconst sN = wN * ppp - wN * pp; // combine data linearly\r\n\r\n\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\tresult[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass LinearInterpolant extends Interpolant {\r\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n\t\t}\r\n\r\n\t\tinterpolate_(i1, t0, t, t1) {\r\n\t\t\tconst result = this.resultBuffer,\r\n\t\t\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\toffset1 = i1 * stride,\r\n\t\t\t\t\t\toffset0 = offset1 - stride,\r\n\t\t\t\t\t\tweight1 = (t - t0) / (t1 - t0),\r\n\t\t\t\t\t\tweight0 = 1 - weight1;\r\n\r\n\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\tresult[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * Interpolant that evaluates to the sample value at the position preceeding\r\n\t * the parameter.\r\n\t */\r\n\r\n\tclass DiscreteInterpolant extends Interpolant {\r\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n\t\t}\r\n\r\n\t\tinterpolate_(i1\r\n\t\t/*, t0, t, t1 */\r\n\t\t) {\r\n\t\t\treturn this.copySampleValue_(i1 - 1);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass KeyframeTrack {\r\n\t\tconstructor(name, times, values, interpolation) {\r\n\t\t\tif (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\r\n\t\t\tif (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\r\n\t\t\tthis.name = name;\r\n\t\t\tthis.times = AnimationUtils.convertArray(times, this.TimeBufferType);\r\n\t\t\tthis.values = AnimationUtils.convertArray(values, this.ValueBufferType);\r\n\t\t\tthis.setInterpolation(interpolation || this.DefaultInterpolation);\r\n\t\t} // Serialization (in static context, because of constructor invocation\r\n\t\t// and automatic invocation of .toJSON):\r\n\r\n\r\n\t\tstatic toJSON(track) {\r\n\t\t\tconst trackType = track.constructor;\r\n\t\t\tlet json; // derived classes can define a static toJSON method\r\n\r\n\t\t\tif (trackType.toJSON !== this.toJSON) {\r\n\t\t\t\tjson = trackType.toJSON(track);\r\n\t\t\t} else {\r\n\t\t\t\t// by default, we assume the data can be serialized as-is\r\n\t\t\t\tjson = {\r\n\t\t\t\t\t'name': track.name,\r\n\t\t\t\t\t'times': AnimationUtils.convertArray(track.times, Array),\r\n\t\t\t\t\t'values': AnimationUtils.convertArray(track.values, Array)\r\n\t\t\t\t};\r\n\t\t\t\tconst interpolation = track.getInterpolation();\r\n\r\n\t\t\t\tif (interpolation !== track.DefaultInterpolation) {\r\n\t\t\t\t\tjson.interpolation = interpolation;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tjson.type = track.ValueTypeName; // mandatory\r\n\r\n\t\t\treturn json;\r\n\t\t}\r\n\r\n\t\tInterpolantFactoryMethodDiscrete(result) {\r\n\t\t\treturn new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\r\n\t\t}\r\n\r\n\t\tInterpolantFactoryMethodLinear(result) {\r\n\t\t\treturn new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\r\n\t\t}\r\n\r\n\t\tInterpolantFactoryMethodSmooth(result) {\r\n\t\t\treturn new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\r\n\t\t}\r\n\r\n\t\tsetInterpolation(interpolation) {\r\n\t\t\tlet factoryMethod;\r\n\r\n\t\t\tswitch (interpolation) {\r\n\t\t\t\tcase InterpolateDiscrete:\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase InterpolateLinear:\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase InterpolateSmooth:\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (factoryMethod === undefined) {\r\n\t\t\t\tconst message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\r\n\r\n\t\t\t\tif (this.createInterpolant === undefined) {\r\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\r\n\t\t\t\t\tif (interpolation !== this.DefaultInterpolation) {\r\n\t\t\t\t\t\tthis.setInterpolation(this.DefaultInterpolation);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(message); // fatal, in this case\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.warn('THREE.KeyframeTrack:', message);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tthis.createInterpolant = factoryMethod;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetInterpolation() {\r\n\t\t\tswitch (this.createInterpolant) {\r\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\r\n\t\t\t\t\treturn InterpolateDiscrete;\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\r\n\t\t\t\t\treturn InterpolateLinear;\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\r\n\t\t\t\t\treturn InterpolateSmooth;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetValueSize() {\r\n\t\t\treturn this.values.length / this.times.length;\r\n\t\t} // move all keyframes either forwards or backwards in time\r\n\r\n\r\n\t\tshift(timeOffset) {\r\n\t\t\tif (timeOffset !== 0.0) {\r\n\t\t\t\tconst times = this.times;\r\n\r\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\r\n\t\t\t\t\ttimes[i] += timeOffset;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\r\n\r\n\t\tscale(timeScale) {\r\n\t\t\tif (timeScale !== 1.0) {\r\n\t\t\t\tconst times = this.times;\r\n\r\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\r\n\t\t\t\t\ttimes[i] *= timeScale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\r\n\r\n\t\ttrim(startTime, endTime) {\r\n\t\t\tconst times = this.times,\r\n\t\t\t\t\t\tnKeys = times.length;\r\n\t\t\tlet from = 0,\r\n\t\t\t\t\tto = nKeys - 1;\r\n\r\n\t\t\twhile (from !== nKeys && times[from] < startTime) {\r\n\t\t\t\t++from;\r\n\t\t\t}\r\n\r\n\t\t\twhile (to !== -1 && times[to] > endTime) {\r\n\t\t\t\t--to;\r\n\t\t\t}\r\n\r\n\t\t\t++to; // inclusive -> exclusive bound\r\n\r\n\t\t\tif (from !== 0 || to !== nKeys) {\r\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\r\n\t\t\t\tif (from >= to) {\r\n\t\t\t\t\tto = Math.max(to, 1);\r\n\t\t\t\t\tfrom = to - 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst stride = this.getValueSize();\r\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, from, to);\r\n\t\t\t\tthis.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\r\n\r\n\t\tvalidate() {\r\n\t\t\tlet valid = true;\r\n\t\t\tconst valueSize = this.getValueSize();\r\n\r\n\t\t\tif (valueSize - Math.floor(valueSize) !== 0) {\r\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Invalid value size in track.', this);\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\r\n\t\t\tconst times = this.times,\r\n\t\t\t\t\t\tvalues = this.values,\r\n\t\t\t\t\t\tnKeys = times.length;\r\n\r\n\t\t\tif (nKeys === 0) {\r\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Track is empty.', this);\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\r\n\t\t\tlet prevTime = null;\r\n\r\n\t\t\tfor (let i = 0; i !== nKeys; i++) {\r\n\t\t\t\tconst currTime = times[i];\r\n\r\n\t\t\t\tif (typeof currTime === 'number' && isNaN(currTime)) {\r\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (prevTime !== null && prevTime > currTime) {\r\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprevTime = currTime;\r\n\t\t\t}\r\n\r\n\t\t\tif (values !== undefined) {\r\n\t\t\t\tif (AnimationUtils.isTypedArray(values)) {\r\n\t\t\t\t\tfor (let i = 0, n = values.length; i !== n; ++i) {\r\n\t\t\t\t\t\tconst value = values[i];\r\n\r\n\t\t\t\t\t\tif (isNaN(value)) {\r\n\t\t\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\r\n\t\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn valid;\r\n\t\t} // removes equivalent sequential keys as common in morph target sequences\r\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\r\n\r\n\t\toptimize() {\r\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\r\n\t\t\tconst times = AnimationUtils.arraySlice(this.times),\r\n\t\t\t\t\t\tvalues = AnimationUtils.arraySlice(this.values),\r\n\t\t\t\t\t\tstride = this.getValueSize(),\r\n\t\t\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\r\n\t\t\t\t\t\tlastIndex = times.length - 1;\r\n\t\t\tlet writeIndex = 1;\r\n\r\n\t\t\tfor (let i = 1; i < lastIndex; ++i) {\r\n\t\t\t\tlet keep = false;\r\n\t\t\t\tconst time = times[i];\r\n\t\t\t\tconst timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\r\n\r\n\t\t\t\tif (time !== timeNext && (i !== 1 || time !== times[0])) {\r\n\t\t\t\t\tif (!smoothInterpolation) {\r\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\r\n\t\t\t\t\t\tconst offset = i * stride,\r\n\t\t\t\t\t\t\t\t\toffsetP = offset - stride,\r\n\t\t\t\t\t\t\t\t\toffsetN = offset + stride;\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\r\n\t\t\t\t\t\t\tconst value = values[offset + j];\r\n\r\n\t\t\t\t\t\t\tif (value !== values[offsetP + j] || value !== values[offsetN + j]) {\r\n\t\t\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // in-place compaction\r\n\r\n\r\n\t\t\t\tif (keep) {\r\n\t\t\t\t\tif (i !== writeIndex) {\r\n\t\t\t\t\t\ttimes[writeIndex] = times[i];\r\n\t\t\t\t\t\tconst readOffset = i * stride,\r\n\t\t\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\r\n\t\t\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t++writeIndex;\r\n\t\t\t\t}\r\n\t\t\t} // flush last keyframe (compaction looks ahead)\r\n\r\n\r\n\t\t\tif (lastIndex > 0) {\r\n\t\t\t\ttimes[writeIndex] = times[lastIndex];\r\n\r\n\t\t\t\tfor (let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\r\n\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t++writeIndex;\r\n\t\t\t}\r\n\r\n\t\t\tif (writeIndex !== times.length) {\r\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, 0, writeIndex);\r\n\t\t\t\tthis.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\r\n\t\t\t} else {\r\n\t\t\t\tthis.times = times;\r\n\t\t\t\tthis.values = values;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\tconst times = AnimationUtils.arraySlice(this.times, 0);\r\n\t\t\tconst values = AnimationUtils.arraySlice(this.values, 0);\r\n\t\t\tconst TypedKeyframeTrack = this.constructor;\r\n\t\t\tconst track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\r\n\r\n\t\t\ttrack.createInterpolant = this.createInterpolant;\r\n\t\t\treturn track;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tKeyframeTrack.prototype.TimeBufferType = Float32Array;\r\n\tKeyframeTrack.prototype.ValueBufferType = Float32Array;\r\n\tKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\r\n\r\n\t/**\r\n\t * A Track of Boolean keyframe values.\r\n\t */\r\n\r\n\tclass BooleanKeyframeTrack extends KeyframeTrack {}\r\n\r\n\tBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\r\n\tBooleanKeyframeTrack.prototype.ValueBufferType = Array;\r\n\tBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\r\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\r\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined; // Note: Actually this track could have a optimized / compressed\r\n\r\n\t/**\r\n\t * A Track of keyframe values that represent color.\r\n\t */\r\n\r\n\tclass ColorKeyframeTrack extends KeyframeTrack {}\r\n\r\n\tColorKeyframeTrack.prototype.ValueTypeName = 'color'; // ValueBufferType is inherited\r\n\r\n\t/**\r\n\t * A Track of numeric keyframe values.\r\n\t */\r\n\r\n\tclass NumberKeyframeTrack extends KeyframeTrack {}\r\n\r\n\tNumberKeyframeTrack.prototype.ValueTypeName = 'number'; // ValueBufferType is inherited\r\n\r\n\t/**\r\n\t * Spherical linear unit quaternion interpolant.\r\n\t */\r\n\r\n\tclass QuaternionLinearInterpolant extends Interpolant {\r\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n\t\t}\r\n\r\n\t\tinterpolate_(i1, t0, t, t1) {\r\n\t\t\tconst result = this.resultBuffer,\r\n\t\t\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\talpha = (t - t0) / (t1 - t0);\r\n\t\t\tlet offset = i1 * stride;\r\n\r\n\t\t\tfor (let end = offset + stride; offset !== end; offset += 4) {\r\n\t\t\t\tQuaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A Track of quaternion keyframe values.\r\n\t */\r\n\r\n\tclass QuaternionKeyframeTrack extends KeyframeTrack {\r\n\t\tInterpolantFactoryMethodLinear(result) {\r\n\t\t\treturn new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion'; // ValueBufferType is inherited\r\n\r\n\tQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\r\n\tQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n\r\n\t/**\r\n\t * A Track that interpolates Strings\r\n\t */\r\n\r\n\tclass StringKeyframeTrack extends KeyframeTrack {}\r\n\r\n\tStringKeyframeTrack.prototype.ValueTypeName = 'string';\r\n\tStringKeyframeTrack.prototype.ValueBufferType = Array;\r\n\tStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\r\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\r\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n\r\n\t/**\r\n\t * A Track of vectored keyframe values.\r\n\t */\r\n\r\n\tclass VectorKeyframeTrack extends KeyframeTrack {}\r\n\r\n\tVectorKeyframeTrack.prototype.ValueTypeName = 'vector'; // ValueBufferType is inherited\r\n\r\n\tclass AnimationClip {\r\n\t\tconstructor(name, duration = -1, tracks, blendMode = NormalAnimationBlendMode) {\r\n\t\t\tthis.name = name;\r\n\t\t\tthis.tracks = tracks;\r\n\t\t\tthis.duration = duration;\r\n\t\t\tthis.blendMode = blendMode;\r\n\t\t\tthis.uuid = generateUUID(); // this means it should figure out its duration by scanning the tracks\r\n\r\n\t\t\tif (this.duration < 0) {\r\n\t\t\t\tthis.resetDuration();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic parse(json) {\r\n\t\t\tconst tracks = [],\r\n\t\t\t\t\t\tjsonTracks = json.tracks,\r\n\t\t\t\t\t\tframeTime = 1.0 / (json.fps || 1.0);\r\n\r\n\t\t\tfor (let i = 0, n = jsonTracks.length; i !== n; ++i) {\r\n\t\t\t\ttracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\r\n\t\t\t}\r\n\r\n\t\t\tconst clip = new this(json.name, json.duration, tracks, json.blendMode);\r\n\t\t\tclip.uuid = json.uuid;\r\n\t\t\treturn clip;\r\n\t\t}\r\n\r\n\t\tstatic toJSON(clip) {\r\n\t\t\tconst tracks = [],\r\n\t\t\t\t\t\tclipTracks = clip.tracks;\r\n\t\t\tconst json = {\r\n\t\t\t\t'name': clip.name,\r\n\t\t\t\t'duration': clip.duration,\r\n\t\t\t\t'tracks': tracks,\r\n\t\t\t\t'uuid': clip.uuid,\r\n\t\t\t\t'blendMode': clip.blendMode\r\n\t\t\t};\r\n\r\n\t\t\tfor (let i = 0, n = clipTracks.length; i !== n; ++i) {\r\n\t\t\t\ttracks.push(KeyframeTrack.toJSON(clipTracks[i]));\r\n\t\t\t}\r\n\r\n\t\t\treturn json;\r\n\t\t}\r\n\r\n\t\tstatic CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\r\n\t\t\tconst numMorphTargets = morphTargetSequence.length;\r\n\t\t\tconst tracks = [];\r\n\r\n\t\t\tfor (let i = 0; i < numMorphTargets; i++) {\r\n\t\t\t\tlet times = [];\r\n\t\t\t\tlet values = [];\r\n\t\t\t\ttimes.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\r\n\t\t\t\tvalues.push(0, 1, 0);\r\n\t\t\t\tconst order = AnimationUtils.getKeyframeOrder(times);\r\n\t\t\t\ttimes = AnimationUtils.sortedArray(times, 1, order);\r\n\t\t\t\tvalues = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\r\n\t\t\t\t// last frame as well for perfect loop.\r\n\r\n\t\t\t\tif (!noLoop && times[0] === 0) {\r\n\t\t\t\t\ttimes.push(numMorphTargets);\r\n\t\t\t\t\tvalues.push(values[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\r\n\t\t\t}\r\n\r\n\t\t\treturn new this(name, -1, tracks);\r\n\t\t}\r\n\r\n\t\tstatic findByName(objectOrClipArray, name) {\r\n\t\t\tlet clipArray = objectOrClipArray;\r\n\r\n\t\t\tif (!Array.isArray(objectOrClipArray)) {\r\n\t\t\t\tconst o = objectOrClipArray;\r\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < clipArray.length; i++) {\r\n\t\t\t\tif (clipArray[i].name === name) {\r\n\t\t\t\t\treturn clipArray[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tstatic CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\r\n\t\t\tconst animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\r\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\r\n\t\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\r\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\r\n\t\t\tfor (let i = 0, il = morphTargets.length; i < il; i++) {\r\n\t\t\t\tconst morphTarget = morphTargets[i];\r\n\t\t\t\tconst parts = morphTarget.name.match(pattern);\r\n\r\n\t\t\t\tif (parts && parts.length > 1) {\r\n\t\t\t\t\tconst name = parts[1];\r\n\t\t\t\t\tlet animationMorphTargets = animationToMorphTargets[name];\r\n\r\n\t\t\t\t\tif (!animationMorphTargets) {\r\n\t\t\t\t\t\tanimationToMorphTargets[name] = animationMorphTargets = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationMorphTargets.push(morphTarget);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst clips = [];\r\n\r\n\t\t\tfor (const name in animationToMorphTargets) {\r\n\t\t\t\tclips.push(this.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\r\n\t\t\t}\r\n\r\n\t\t\treturn clips;\r\n\t\t} // parse the animation.hierarchy format\r\n\r\n\r\n\t\tstatic parseAnimation(animation, bones) {\r\n\t\t\tif (!animation) {\r\n\t\t\t\tconsole.error('THREE.AnimationClip: No animation in JSONLoader data.');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\r\n\t\t\t\t// only return track if there are actually keys.\r\n\t\t\t\tif (animationKeys.length !== 0) {\r\n\t\t\t\t\tconst times = [];\r\n\t\t\t\t\tconst values = [];\r\n\t\t\t\t\tAnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\r\n\r\n\t\t\t\t\tif (times.length !== 0) {\r\n\t\t\t\t\t\tdestTracks.push(new trackType(trackName, times, values));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconst tracks = [];\r\n\t\t\tconst clipName = animation.name || 'default';\r\n\t\t\tconst fps = animation.fps || 30;\r\n\t\t\tconst blendMode = animation.blendMode; // automatic length determination in AnimationClip.\r\n\r\n\t\t\tlet duration = animation.length || -1;\r\n\t\t\tconst hierarchyTracks = animation.hierarchy || [];\r\n\r\n\t\t\tfor (let h = 0; h < hierarchyTracks.length; h++) {\r\n\t\t\t\tconst animationKeys = hierarchyTracks[h].keys; // skip empty tracks\r\n\r\n\t\t\t\tif (!animationKeys || animationKeys.length === 0) continue; // process morph targets\r\n\r\n\t\t\t\tif (animationKeys[0].morphTargets) {\r\n\t\t\t\t\t// figure out all morph targets used in this track\r\n\t\t\t\t\tconst morphTargetNames = {};\r\n\t\t\t\t\tlet k;\r\n\r\n\t\t\t\t\tfor (k = 0; k < animationKeys.length; k++) {\r\n\t\t\t\t\t\tif (animationKeys[k].morphTargets) {\r\n\t\t\t\t\t\t\tfor (let m = 0; m < animationKeys[k].morphTargets.length; m++) {\r\n\t\t\t\t\t\t\t\tmorphTargetNames[animationKeys[k].morphTargets[m]] = -1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} // create a track for each morph target with all zero\r\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\r\n\t\t\t\t\t// the morphTarget is named.\r\n\r\n\r\n\t\t\t\t\tfor (const morphTargetName in morphTargetNames) {\r\n\t\t\t\t\t\tconst times = [];\r\n\t\t\t\t\t\tconst values = [];\r\n\r\n\t\t\t\t\t\tfor (let m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\r\n\t\t\t\t\t\t\tconst animationKey = animationKeys[k];\r\n\t\t\t\t\t\t\ttimes.push(animationKey.time);\r\n\t\t\t\t\t\t\tvalues.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tduration = morphTargetNames.length * (fps || 1.0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// ...assume skeletal animation\r\n\t\t\t\t\tconst boneName = '.bones[' + bones[h].name + ']';\r\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\r\n\t\t\t\t\taddNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\r\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tracks.length === 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst clip = new this(clipName, duration, tracks, blendMode);\r\n\t\t\treturn clip;\r\n\t\t}\r\n\r\n\t\tresetDuration() {\r\n\t\t\tconst tracks = this.tracks;\r\n\t\t\tlet duration = 0;\r\n\r\n\t\t\tfor (let i = 0, n = tracks.length; i !== n; ++i) {\r\n\t\t\t\tconst track = this.tracks[i];\r\n\t\t\t\tduration = Math.max(duration, track.times[track.times.length - 1]);\r\n\t\t\t}\r\n\r\n\t\t\tthis.duration = duration;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttrim() {\r\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\r\n\t\t\t\tthis.tracks[i].trim(0, this.duration);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tvalidate() {\r\n\t\t\tlet valid = true;\r\n\r\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\r\n\t\t\t\tvalid = valid && this.tracks[i].validate();\r\n\t\t\t}\r\n\r\n\t\t\treturn valid;\r\n\t\t}\r\n\r\n\t\toptimize() {\r\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\r\n\t\t\t\tthis.tracks[i].optimize();\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\tconst tracks = [];\r\n\r\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\r\n\t\t\t\ttracks.push(this.tracks[i].clone());\r\n\t\t\t}\r\n\r\n\t\t\treturn new this.constructor(this.name, this.duration, tracks, this.blendMode);\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\treturn this.constructor.toJSON(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTrackTypeForValueTypeName(typeName) {\r\n\t\tswitch (typeName.toLowerCase()) {\r\n\t\t\tcase 'scalar':\r\n\t\t\tcase 'double':\r\n\t\t\tcase 'float':\r\n\t\t\tcase 'number':\r\n\t\t\tcase 'integer':\r\n\t\t\t\treturn NumberKeyframeTrack;\r\n\r\n\t\t\tcase 'vector':\r\n\t\t\tcase 'vector2':\r\n\t\t\tcase 'vector3':\r\n\t\t\tcase 'vector4':\r\n\t\t\t\treturn VectorKeyframeTrack;\r\n\r\n\t\t\tcase 'color':\r\n\t\t\t\treturn ColorKeyframeTrack;\r\n\r\n\t\t\tcase 'quaternion':\r\n\t\t\t\treturn QuaternionKeyframeTrack;\r\n\r\n\t\t\tcase 'bool':\r\n\t\t\tcase 'boolean':\r\n\t\t\t\treturn BooleanKeyframeTrack;\r\n\r\n\t\t\tcase 'string':\r\n\t\t\t\treturn StringKeyframeTrack;\r\n\t\t}\r\n\r\n\t\tthrow new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\r\n\t}\r\n\r\n\tfunction parseKeyframeTrack(json) {\r\n\t\tif (json.type === undefined) {\r\n\t\t\tthrow new Error('THREE.KeyframeTrack: track type undefined, can not parse');\r\n\t\t}\r\n\r\n\t\tconst trackType = getTrackTypeForValueTypeName(json.type);\r\n\r\n\t\tif (json.times === undefined) {\r\n\t\t\tconst times = [],\r\n\t\t\t\t\t\tvalues = [];\r\n\t\t\tAnimationUtils.flattenJSON(json.keys, times, values, 'value');\r\n\t\t\tjson.times = times;\r\n\t\t\tjson.values = values;\r\n\t\t} // derived classes can define a static parse method\r\n\r\n\r\n\t\tif (trackType.parse !== undefined) {\r\n\t\t\treturn trackType.parse(json);\r\n\t\t} else {\r\n\t\t\t// by default, we assume a constructor compatible with the base\r\n\t\t\treturn new trackType(json.name, json.times, json.values, json.interpolation);\r\n\t\t}\r\n\t}\r\n\r\n\tconst Cache = {\r\n\t\tenabled: false,\r\n\t\tfiles: {},\r\n\t\tadd: function (key, file) {\r\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\t\tthis.files[key] = file;\r\n\t\t},\r\n\t\tget: function (key) {\r\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\t\treturn this.files[key];\r\n\t\t},\r\n\t\tremove: function (key) {\r\n\t\t\tdelete this.files[key];\r\n\t\t},\r\n\t\tclear: function () {\r\n\t\t\tthis.files = {};\r\n\t\t}\r\n\t};\r\n\r\n\tclass LoadingManager {\r\n\t\tconstructor(onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tlet isLoading = false;\r\n\t\t\tlet itemsLoaded = 0;\r\n\t\t\tlet itemsTotal = 0;\r\n\t\t\tlet urlModifier = undefined;\r\n\t\t\tconst handlers = []; // Refer to #5689 for the reason why we don't set .onStart\r\n\t\t\t// in the constructor\r\n\r\n\t\t\tthis.onStart = undefined;\r\n\t\t\tthis.onLoad = onLoad;\r\n\t\t\tthis.onProgress = onProgress;\r\n\t\t\tthis.onError = onError;\r\n\r\n\t\t\tthis.itemStart = function (url) {\r\n\t\t\t\titemsTotal++;\r\n\r\n\t\t\t\tif (isLoading === false) {\r\n\t\t\t\t\tif (scope.onStart !== undefined) {\r\n\t\t\t\t\t\tscope.onStart(url, itemsLoaded, itemsTotal);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tisLoading = true;\r\n\t\t\t};\r\n\r\n\t\t\tthis.itemEnd = function (url) {\r\n\t\t\t\titemsLoaded++;\r\n\r\n\t\t\t\tif (scope.onProgress !== undefined) {\r\n\t\t\t\t\tscope.onProgress(url, itemsLoaded, itemsTotal);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (itemsLoaded === itemsTotal) {\r\n\t\t\t\t\tisLoading = false;\r\n\r\n\t\t\t\t\tif (scope.onLoad !== undefined) {\r\n\t\t\t\t\t\tscope.onLoad();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.itemError = function (url) {\r\n\t\t\t\tif (scope.onError !== undefined) {\r\n\t\t\t\t\tscope.onError(url);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.resolveURL = function (url) {\r\n\t\t\t\tif (urlModifier) {\r\n\t\t\t\t\treturn urlModifier(url);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn url;\r\n\t\t\t};\r\n\r\n\t\t\tthis.setURLModifier = function (transform) {\r\n\t\t\t\turlModifier = transform;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\tthis.addHandler = function (regex, loader) {\r\n\t\t\t\thandlers.push(regex, loader);\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\tthis.removeHandler = function (regex) {\r\n\t\t\t\tconst index = handlers.indexOf(regex);\r\n\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\thandlers.splice(index, 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\tthis.getHandler = function (file) {\r\n\t\t\t\tfor (let i = 0, l = handlers.length; i < l; i += 2) {\r\n\t\t\t\t\tconst regex = handlers[i];\r\n\t\t\t\t\tconst loader = handlers[i + 1];\r\n\t\t\t\t\tif (regex.global) regex.lastIndex = 0; // see #17920\r\n\r\n\t\t\t\t\tif (regex.test(file)) {\r\n\t\t\t\t\t\treturn loader;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst DefaultLoadingManager = new LoadingManager();\r\n\r\n\tclass Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\r\n\t\t\tthis.crossOrigin = 'anonymous';\r\n\t\t\tthis.withCredentials = false;\r\n\t\t\tthis.path = '';\r\n\t\t\tthis.resourcePath = '';\r\n\t\t\tthis.requestHeader = {};\r\n\t\t}\r\n\r\n\t\tload() {}\r\n\r\n\t\tloadAsync(url, onProgress) {\r\n\t\t\tconst scope = this;\r\n\t\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t\tscope.load(url, resolve, onProgress, reject);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tparse() {}\r\n\r\n\t\tsetCrossOrigin(crossOrigin) {\r\n\t\t\tthis.crossOrigin = crossOrigin;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetWithCredentials(value) {\r\n\t\t\tthis.withCredentials = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetPath(path) {\r\n\t\t\tthis.path = path;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetResourcePath(resourcePath) {\r\n\t\t\tthis.resourcePath = resourcePath;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetRequestHeader(requestHeader) {\r\n\t\t\tthis.requestHeader = requestHeader;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst loading = {};\r\n\r\n\tclass FileLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tif (url === undefined) url = '';\r\n\t\t\tif (this.path !== undefined) url = this.path + url;\r\n\t\t\turl = this.manager.resolveURL(url);\r\n\t\t\tconst scope = this;\r\n\t\t\tconst cached = Cache.get(url);\r\n\r\n\t\t\tif (cached !== undefined) {\r\n\t\t\t\tscope.manager.itemStart(url);\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tif (onLoad) onLoad(cached);\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t}, 0);\r\n\t\t\t\treturn cached;\r\n\t\t\t} // Check if request is duplicate\r\n\r\n\r\n\t\t\tif (loading[url] !== undefined) {\r\n\t\t\t\tloading[url].push({\r\n\t\t\t\t\tonLoad: onLoad,\r\n\t\t\t\t\tonProgress: onProgress,\r\n\t\t\t\t\tonError: onError\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t} // Check for data: URI\r\n\r\n\r\n\t\t\tconst dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\r\n\t\t\tconst dataUriRegexResult = url.match(dataUriRegex);\r\n\t\t\tlet request; // Safari can not handle Data URIs through XMLHttpRequest so process manually\r\n\r\n\t\t\tif (dataUriRegexResult) {\r\n\t\t\t\tconst mimeType = dataUriRegexResult[1];\r\n\t\t\t\tconst isBase64 = !!dataUriRegexResult[2];\r\n\t\t\t\tlet data = dataUriRegexResult[3];\r\n\t\t\t\tdata = decodeURIComponent(data);\r\n\t\t\t\tif (isBase64) data = atob(data);\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet response;\r\n\t\t\t\t\tconst responseType = (this.responseType || '').toLowerCase();\r\n\r\n\t\t\t\t\tswitch (responseType) {\r\n\t\t\t\t\t\tcase 'arraybuffer':\r\n\t\t\t\t\t\tcase 'blob':\r\n\t\t\t\t\t\t\tconst view = new Uint8Array(data.length);\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\t\t\t\t\t\tview[i] = data.charCodeAt(i);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (responseType === 'blob') {\r\n\t\t\t\t\t\t\t\tresponse = new Blob([view.buffer], {\r\n\t\t\t\t\t\t\t\t\ttype: mimeType\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tresponse = view.buffer;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'document':\r\n\t\t\t\t\t\t\tconst parser = new DOMParser();\r\n\t\t\t\t\t\t\tresponse = parser.parseFromString(data, mimeType);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'json':\r\n\t\t\t\t\t\t\tresponse = JSON.parse(data);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t// 'text' or other\r\n\t\t\t\t\t\t\tresponse = data;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} // Wait for next browser tick like standard XMLHttpRequest event dispatching does\r\n\r\n\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tif (onLoad) onLoad(response);\r\n\t\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tif (onError) onError(error);\r\n\t\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Initialise array for duplicate requests\r\n\t\t\t\tloading[url] = [];\r\n\t\t\t\tloading[url].push({\r\n\t\t\t\t\tonLoad: onLoad,\r\n\t\t\t\t\tonProgress: onProgress,\r\n\t\t\t\t\tonError: onError\r\n\t\t\t\t});\r\n\t\t\t\trequest = new XMLHttpRequest();\r\n\t\t\t\trequest.open('GET', url, true);\r\n\t\t\t\trequest.addEventListener('load', function (event) {\r\n\t\t\t\t\tconst response = this.response;\r\n\t\t\t\t\tconst callbacks = loading[url];\r\n\t\t\t\t\tdelete loading[url];\r\n\r\n\t\t\t\t\tif (this.status === 200 || this.status === 0) {\r\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\r\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\r\n\t\t\t\t\t\tif (this.status === 0) console.warn('THREE.FileLoader: HTTP Status 0 received.'); // Add to cache only on HTTP success, so that we do not cache\r\n\t\t\t\t\t\t// error response bodies as proper responses to requests.\r\n\r\n\t\t\t\t\t\tCache.add(url, response);\r\n\r\n\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst callback = callbacks[i];\r\n\t\t\t\t\t\t\tif (callback.onLoad) callback.onLoad(response);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst callback = callbacks[i];\r\n\t\t\t\t\t\t\tif (callback.onError) callback.onError(event);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, false);\r\n\t\t\t\trequest.addEventListener('progress', function (event) {\r\n\t\t\t\t\tconst callbacks = loading[url];\r\n\r\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\r\n\t\t\t\t\t\tconst callback = callbacks[i];\r\n\t\t\t\t\t\tif (callback.onProgress) callback.onProgress(event);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, false);\r\n\t\t\t\trequest.addEventListener('error', function (event) {\r\n\t\t\t\t\tconst callbacks = loading[url];\r\n\t\t\t\t\tdelete loading[url];\r\n\r\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\r\n\t\t\t\t\t\tconst callback = callbacks[i];\r\n\t\t\t\t\t\tif (callback.onError) callback.onError(event);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t}, false);\r\n\t\t\t\trequest.addEventListener('abort', function (event) {\r\n\t\t\t\t\tconst callbacks = loading[url];\r\n\t\t\t\t\tdelete loading[url];\r\n\r\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\r\n\t\t\t\t\t\tconst callback = callbacks[i];\r\n\t\t\t\t\t\tif (callback.onError) callback.onError(event);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t}, false);\r\n\t\t\t\tif (this.responseType !== undefined) request.responseType = this.responseType;\r\n\t\t\t\tif (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\r\n\t\t\t\tif (request.overrideMimeType) request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\r\n\r\n\t\t\t\tfor (const header in this.requestHeader) {\r\n\t\t\t\t\trequest.setRequestHeader(header, this.requestHeader[header]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trequest.send(null);\r\n\t\t\t}\r\n\r\n\t\t\tscope.manager.itemStart(url);\r\n\t\t\treturn request;\r\n\t\t}\r\n\r\n\t\tsetResponseType(value) {\r\n\t\t\tthis.responseType = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetMimeType(value) {\r\n\t\t\tthis.mimeType = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass AnimationLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setWithCredentials(this.withCredentials);\r\n\t\t\tloader.load(url, function (text) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (onError) {\r\n\t\t\t\t\t\tonError(e);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t}\r\n\t\t\t}, onProgress, onError);\r\n\t\t}\r\n\r\n\t\tparse(json) {\r\n\t\t\tconst animations = [];\r\n\r\n\t\t\tfor (let i = 0; i < json.length; i++) {\r\n\t\t\t\tconst clip = AnimationClip.parse(json[i]);\r\n\t\t\t\tanimations.push(clip);\r\n\t\t\t}\r\n\r\n\t\t\treturn animations;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t *\r\n\t * Sub classes have to implement the parse() method which will be used in load().\r\n\t */\r\n\r\n\tclass CompressedTextureLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst images = [];\r\n\t\t\tconst texture = new CompressedTexture();\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setResponseType('arraybuffer');\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setWithCredentials(scope.withCredentials);\r\n\t\t\tlet loaded = 0;\r\n\r\n\t\t\tfunction loadTexture(i) {\r\n\t\t\t\tloader.load(url[i], function (buffer) {\r\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\r\n\t\t\t\t\timages[i] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif (loaded === 6) {\r\n\t\t\t\t\t\tif (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\r\n\t\t\t\t\t\ttexture.image = images;\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, onProgress, onError);\r\n\t\t\t}\r\n\r\n\t\t\tif (Array.isArray(url)) {\r\n\t\t\t\tfor (let i = 0, il = url.length; i < il; ++i) {\r\n\t\t\t\t\tloadTexture(i);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\t\t\t\tloader.load(url, function (buffer) {\r\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\r\n\r\n\t\t\t\t\tif (texDatas.isCubemap) {\r\n\t\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\t\tfor (let f = 0; f < faces; f++) {\r\n\t\t\t\t\t\t\timages[f] = {\r\n\t\t\t\t\t\t\t\tmipmaps: []\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < texDatas.mipmapCount; i++) {\r\n\t\t\t\t\t\t\t\timages[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\r\n\t\t\t\t\t\t\t\timages[f].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[f].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[f].height = texDatas.height;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttexture.image = images;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (texDatas.mipmapCount === 1) {\r\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\t\tif (onLoad) onLoad(texture);\r\n\t\t\t\t}, onProgress, onError);\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass ImageLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tif (this.path !== undefined) url = this.path + url;\r\n\t\t\turl = this.manager.resolveURL(url);\r\n\t\t\tconst scope = this;\r\n\t\t\tconst cached = Cache.get(url);\r\n\r\n\t\t\tif (cached !== undefined) {\r\n\t\t\t\tscope.manager.itemStart(url);\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tif (onLoad) onLoad(cached);\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t}, 0);\r\n\t\t\t\treturn cached;\r\n\t\t\t}\r\n\r\n\t\t\tconst image = createElementNS('img');\r\n\r\n\t\t\tfunction onImageLoad() {\r\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\r\n\t\t\t\timage.removeEventListener('error', onImageError, false);\r\n\t\t\t\tCache.add(url, this);\r\n\t\t\t\tif (onLoad) onLoad(this);\r\n\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t}\r\n\r\n\t\t\tfunction onImageError(event) {\r\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\r\n\t\t\t\timage.removeEventListener('error', onImageError, false);\r\n\t\t\t\tif (onError) onError(event);\r\n\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t}\r\n\r\n\t\t\timage.addEventListener('load', onImageLoad, false);\r\n\t\t\timage.addEventListener('error', onImageError, false);\r\n\r\n\t\t\tif (url.substr(0, 5) !== 'data:') {\r\n\t\t\t\tif (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\r\n\t\t\t}\r\n\r\n\t\t\tscope.manager.itemStart(url);\r\n\t\t\timage.src = url;\r\n\t\t\treturn image;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass CubeTextureLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(urls, onLoad, onProgress, onError) {\r\n\t\t\tconst texture = new CubeTexture();\r\n\t\t\tconst loader = new ImageLoader(this.manager);\r\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tlet loaded = 0;\r\n\r\n\t\t\tfunction loadTexture(i) {\r\n\t\t\t\tloader.load(urls[i], function (image) {\r\n\t\t\t\t\ttexture.images[i] = image;\r\n\t\t\t\t\tloaded++;\r\n\r\n\t\t\t\t\tif (loaded === 6) {\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, onError);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < urls.length; ++i) {\r\n\t\t\t\tloadTexture(i);\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t *\r\n\t * Sub classes have to implement the parse() method which will be used in load().\r\n\t */\r\n\r\n\tclass DataTextureLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst texture = new DataTexture();\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setResponseType('arraybuffer');\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setWithCredentials(scope.withCredentials);\r\n\t\t\tloader.load(url, function (buffer) {\r\n\t\t\t\tconst texData = scope.parse(buffer);\r\n\t\t\t\tif (!texData) return;\r\n\r\n\t\t\t\tif (texData.image !== undefined) {\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\t\t\t\t} else if (texData.data !== undefined) {\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\r\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\r\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\r\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\r\n\r\n\t\t\t\tif (texData.encoding !== undefined) {\r\n\t\t\t\t\ttexture.encoding = texData.encoding;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texData.flipY !== undefined) {\r\n\t\t\t\t\ttexture.flipY = texData.flipY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texData.format !== undefined) {\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texData.type !== undefined) {\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texData.mipmaps !== undefined) {\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texData.mipmapCount === 1) {\r\n\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texData.generateMipmaps !== undefined) {\r\n\t\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\tif (onLoad) onLoad(texture, texData);\r\n\t\t\t}, onProgress, onError);\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass TextureLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst texture = new Texture();\r\n\t\t\tconst loader = new ImageLoader(this.manager);\r\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.load(url, function (image) {\r\n\t\t\t\ttexture.image = image;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif (onLoad !== undefined) {\r\n\t\t\t\t\tonLoad(texture);\r\n\t\t\t\t}\r\n\t\t\t}, onProgress, onError);\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Light extends Object3D {\r\n\t\tconstructor(color, intensity = 1) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Light';\r\n\t\t\tthis.color = new Color(color);\r\n\t\t\tthis.intensity = intensity;\r\n\t\t}\r\n\r\n\t\tdispose() {// Empty here in base class; some subclasses override.\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.intensity = source.intensity;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tdata.object.color = this.color.getHex();\r\n\t\t\tdata.object.intensity = this.intensity;\r\n\t\t\tif (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\r\n\t\t\tif (this.distance !== undefined) data.object.distance = this.distance;\r\n\t\t\tif (this.angle !== undefined) data.object.angle = this.angle;\r\n\t\t\tif (this.decay !== undefined) data.object.decay = this.decay;\r\n\t\t\tif (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\r\n\t\t\tif (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLight.prototype.isLight = true;\r\n\r\n\tclass HemisphereLight extends Light {\r\n\t\tconstructor(skyColor, groundColor, intensity) {\r\n\t\t\tsuper(skyColor, intensity);\r\n\t\t\tthis.type = 'HemisphereLight';\r\n\t\t\tthis.position.copy(Object3D.DefaultUp);\r\n\t\t\tthis.updateMatrix();\r\n\t\t\tthis.groundColor = new Color(groundColor);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tLight.prototype.copy.call(this, source);\r\n\t\t\tthis.groundColor.copy(source.groundColor);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tHemisphereLight.prototype.isHemisphereLight = true;\r\n\r\n\tconst _projScreenMatrix$1 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _lightPositionWorld$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _lookTarget$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass LightShadow {\r\n\t\tconstructor(camera) {\r\n\t\t\tthis.camera = camera;\r\n\t\t\tthis.bias = 0;\r\n\t\t\tthis.normalBias = 0;\r\n\t\t\tthis.radius = 1;\r\n\t\t\tthis.blurSamples = 8;\r\n\t\t\tthis.mapSize = new Vector2(512, 512);\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.mapPass = null;\r\n\t\t\tthis.matrix = new Matrix4();\r\n\t\t\tthis.autoUpdate = true;\r\n\t\t\tthis.needsUpdate = false;\r\n\t\t\tthis._frustum = new Frustum();\r\n\t\t\tthis._frameExtents = new Vector2(1, 1);\r\n\t\t\tthis._viewportCount = 1;\r\n\t\t\tthis._viewports = [new Vector4(0, 0, 1, 1)];\r\n\t\t}\r\n\r\n\t\tgetViewportCount() {\r\n\t\t\treturn this._viewportCount;\r\n\t\t}\r\n\r\n\t\tgetFrustum() {\r\n\t\t\treturn this._frustum;\r\n\t\t}\r\n\r\n\t\tupdateMatrices(light) {\r\n\t\t\tconst shadowCamera = this.camera;\r\n\t\t\tconst shadowMatrix = this.matrix;\r\n\r\n\t\t\t_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\r\n\r\n\t\t\tshadowCamera.position.copy(_lightPositionWorld$1);\r\n\r\n\t\t\t_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\r\n\r\n\t\t\tshadowCamera.lookAt(_lookTarget$1);\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\t_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\r\n\r\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\r\n\r\n\t\t\tshadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\r\n\t\t\tshadowMatrix.multiply(shadowCamera.projectionMatrix);\r\n\t\t\tshadowMatrix.multiply(shadowCamera.matrixWorldInverse);\r\n\t\t}\r\n\r\n\t\tgetViewport(viewportIndex) {\r\n\t\t\treturn this._viewports[viewportIndex];\r\n\t\t}\r\n\r\n\t\tgetFrameExtents() {\r\n\t\t\treturn this._frameExtents;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tif (this.map) {\r\n\t\t\t\tthis.map.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.mapPass) {\r\n\t\t\t\tthis.mapPass.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.camera = source.camera.clone();\r\n\t\t\tthis.bias = source.bias;\r\n\t\t\tthis.radius = source.radius;\r\n\t\t\tthis.mapSize.copy(source.mapSize);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst object = {};\r\n\t\t\tif (this.bias !== 0) object.bias = this.bias;\r\n\t\t\tif (this.normalBias !== 0) object.normalBias = this.normalBias;\r\n\t\t\tif (this.radius !== 1) object.radius = this.radius;\r\n\t\t\tif (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\r\n\t\t\tobject.camera = this.camera.toJSON(false).object;\r\n\t\t\tdelete object.camera.matrix;\r\n\t\t\treturn object;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass SpotLightShadow extends LightShadow {\r\n\t\tconstructor() {\r\n\t\t\tsuper(new PerspectiveCamera(50, 1, 0.5, 500));\r\n\t\t\tthis.focus = 1;\r\n\t\t}\r\n\r\n\t\tupdateMatrices(light) {\r\n\t\t\tconst camera = this.camera;\r\n\t\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\r\n\t\t\tconst aspect = this.mapSize.width / this.mapSize.height;\r\n\t\t\tconst far = light.distance || camera.far;\r\n\r\n\t\t\tif (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\r\n\t\t\t\tcamera.fov = fov;\r\n\t\t\t\tcamera.aspect = aspect;\r\n\t\t\t\tcamera.far = far;\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\t\t\t}\r\n\r\n\t\t\tsuper.updateMatrices(light);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.focus = source.focus;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSpotLightShadow.prototype.isSpotLightShadow = true;\r\n\r\n\tclass SpotLight extends Light {\r\n\t\tconstructor(color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1) {\r\n\t\t\tsuper(color, intensity);\r\n\t\t\tthis.type = 'SpotLight';\r\n\t\t\tthis.position.copy(Object3D.DefaultUp);\r\n\t\t\tthis.updateMatrix();\r\n\t\t\tthis.target = new Object3D();\r\n\t\t\tthis.distance = distance;\r\n\t\t\tthis.angle = angle;\r\n\t\t\tthis.penumbra = penumbra;\r\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\r\n\r\n\t\t\tthis.shadow = new SpotLightShadow();\r\n\t\t}\r\n\r\n\t\tget power() {\r\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\r\n\t\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\r\n\t\t\treturn this.intensity * Math.PI;\r\n\t\t}\r\n\r\n\t\tset power(power) {\r\n\t\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\r\n\t\t\tthis.intensity = power / Math.PI;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.shadow.dispose();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.distance = source.distance;\r\n\t\t\tthis.angle = source.angle;\r\n\t\t\tthis.penumbra = source.penumbra;\r\n\t\t\tthis.decay = source.decay;\r\n\t\t\tthis.target = source.target.clone();\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSpotLight.prototype.isSpotLight = true;\r\n\r\n\tconst _projScreenMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _lightPositionWorld = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _lookTarget = /*@__PURE__*/new Vector3();\r\n\r\n\tclass PointLightShadow extends LightShadow {\r\n\t\tconstructor() {\r\n\t\t\tsuper(new PerspectiveCamera(90, 1, 0.5, 500));\r\n\t\t\tthis._frameExtents = new Vector2(4, 2);\r\n\t\t\tthis._viewportCount = 6;\r\n\t\t\tthis._viewports = [// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t// following orientation:\r\n\t\t\t//\r\n\t\t\t//\txzXZ\r\n\t\t\t//\t y Y\r\n\t\t\t//\r\n\t\t\t// X - Positive x direction\r\n\t\t\t// x - Negative x direction\r\n\t\t\t// Y - Positive y direction\r\n\t\t\t// y - Negative y direction\r\n\t\t\t// Z - Positive z direction\r\n\t\t\t// z - Negative z direction\r\n\t\t\t// positive X\r\n\t\t\tnew Vector4(2, 1, 1, 1), // negative X\r\n\t\t\tnew Vector4(0, 1, 1, 1), // positive Z\r\n\t\t\tnew Vector4(3, 1, 1, 1), // negative Z\r\n\t\t\tnew Vector4(1, 1, 1, 1), // positive Y\r\n\t\t\tnew Vector4(3, 0, 1, 1), // negative Y\r\n\t\t\tnew Vector4(1, 0, 1, 1)];\r\n\t\t\tthis._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\r\n\t\t\tthis._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\r\n\t\t}\r\n\r\n\t\tupdateMatrices(light, viewportIndex = 0) {\r\n\t\t\tconst camera = this.camera;\r\n\t\t\tconst shadowMatrix = this.matrix;\r\n\t\t\tconst far = light.distance || camera.far;\r\n\r\n\t\t\tif (far !== camera.far) {\r\n\t\t\t\tcamera.far = far;\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\t\t\t}\r\n\r\n\t\t\t_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\r\n\r\n\t\t\tcamera.position.copy(_lightPositionWorld);\r\n\r\n\t\t\t_lookTarget.copy(camera.position);\r\n\r\n\t\t\t_lookTarget.add(this._cubeDirections[viewportIndex]);\r\n\r\n\t\t\tcamera.up.copy(this._cubeUps[viewportIndex]);\r\n\t\t\tcamera.lookAt(_lookTarget);\r\n\t\t\tcamera.updateMatrixWorld();\r\n\t\t\tshadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\r\n\r\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPointLightShadow.prototype.isPointLightShadow = true;\r\n\r\n\tclass PointLight extends Light {\r\n\t\tconstructor(color, intensity, distance = 0, decay = 1) {\r\n\t\t\tsuper(color, intensity);\r\n\t\t\tthis.type = 'PointLight';\r\n\t\t\tthis.distance = distance;\r\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\r\n\r\n\t\t\tthis.shadow = new PointLightShadow();\r\n\t\t}\r\n\r\n\t\tget power() {\r\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\r\n\t\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\r\n\t\t\treturn this.intensity * 4 * Math.PI;\r\n\t\t}\r\n\r\n\t\tset power(power) {\r\n\t\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\r\n\t\t\tthis.intensity = power / (4 * Math.PI);\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.shadow.dispose();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.distance = source.distance;\r\n\t\t\tthis.decay = source.decay;\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPointLight.prototype.isPointLight = true;\r\n\r\n\tclass DirectionalLightShadow extends LightShadow {\r\n\t\tconstructor() {\r\n\t\t\tsuper(new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\r\n\r\n\tclass DirectionalLight extends Light {\r\n\t\tconstructor(color, intensity) {\r\n\t\t\tsuper(color, intensity);\r\n\t\t\tthis.type = 'DirectionalLight';\r\n\t\t\tthis.position.copy(Object3D.DefaultUp);\r\n\t\t\tthis.updateMatrix();\r\n\t\t\tthis.target = new Object3D();\r\n\t\t\tthis.shadow = new DirectionalLightShadow();\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.shadow.dispose();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.target = source.target.clone();\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tDirectionalLight.prototype.isDirectionalLight = true;\r\n\r\n\tclass AmbientLight extends Light {\r\n\t\tconstructor(color, intensity) {\r\n\t\t\tsuper(color, intensity);\r\n\t\t\tthis.type = 'AmbientLight';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tAmbientLight.prototype.isAmbientLight = true;\r\n\r\n\tclass RectAreaLight extends Light {\r\n\t\tconstructor(color, intensity, width = 10, height = 10) {\r\n\t\t\tsuper(color, intensity);\r\n\t\t\tthis.type = 'RectAreaLight';\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\t\t}\r\n\r\n\t\tget power() {\r\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\r\n\t\t\treturn this.intensity * this.width * this.height * Math.PI;\r\n\t\t}\r\n\r\n\t\tset power(power) {\r\n\t\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\r\n\t\t\tthis.intensity = power / (this.width * this.height * Math.PI);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tdata.object.width = this.width;\r\n\t\t\tdata.object.height = this.height;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tRectAreaLight.prototype.isRectAreaLight = true;\r\n\r\n\t/**\r\n\t * Primary reference:\r\n\t *\t https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n\t *\r\n\t * Secondary reference:\r\n\t *\t https://www.ppsloan.org/publications/StupidSH36.pdf\r\n\t */\r\n\t// 3-band SH defined by 9 coefficients\r\n\r\n\tclass SphericalHarmonics3 {\r\n\t\tconstructor() {\r\n\t\t\tthis.coefficients = [];\r\n\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients.push(new Vector3());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tset(coefficients) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients[i].copy(coefficients[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tzero() {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients[i].set(0, 0, 0);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // get the radiance in the direction of the normal\r\n\t\t// target is a Vector3\r\n\r\n\r\n\t\tgetAt(normal, target) {\r\n\t\t\t// normal is assumed to be unit length\r\n\t\t\tconst x = normal.x,\r\n\t\t\t\t\t\ty = normal.y,\r\n\t\t\t\t\t\tz = normal.z;\r\n\t\t\tconst coeff = this.coefficients; // band 0\r\n\r\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.282095); // band 1\r\n\r\n\t\t\ttarget.addScaledVector(coeff[1], 0.488603 * y);\r\n\t\t\ttarget.addScaledVector(coeff[2], 0.488603 * z);\r\n\t\t\ttarget.addScaledVector(coeff[3], 0.488603 * x); // band 2\r\n\r\n\t\t\ttarget.addScaledVector(coeff[4], 1.092548 * (x * y));\r\n\t\t\ttarget.addScaledVector(coeff[5], 1.092548 * (y * z));\r\n\t\t\ttarget.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\r\n\t\t\ttarget.addScaledVector(coeff[7], 1.092548 * (x * z));\r\n\t\t\ttarget.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\r\n\t\t\treturn target;\r\n\t\t} // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\r\n\t\t// target is a Vector3\r\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n\r\n\r\n\t\tgetIrradianceAt(normal, target) {\r\n\t\t\t// normal is assumed to be unit length\r\n\t\t\tconst x = normal.x,\r\n\t\t\t\t\t\ty = normal.y,\r\n\t\t\t\t\t\tz = normal.z;\r\n\t\t\tconst coeff = this.coefficients; // band 0\r\n\r\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\r\n\t\t\t// band 1\r\n\r\n\t\t\ttarget.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\r\n\r\n\t\t\ttarget.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\r\n\t\t\ttarget.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\r\n\r\n\t\t\ttarget.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\r\n\r\n\t\t\ttarget.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\r\n\t\t\ttarget.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\r\n\r\n\t\t\ttarget.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\r\n\t\t\ttarget.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\r\n\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tadd(sh) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients[i].add(sh.coefficients[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScaledSH(sh, s) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients[i].addScaledVector(sh.coefficients[i], s);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tscale(s) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients[i].multiplyScalar(s);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerp(sh, alpha) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients[i].lerp(sh.coefficients[i], alpha);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(sh) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tif (!this.coefficients[i].equals(sh.coefficients[i])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tcopy(sh) {\r\n\t\t\treturn this.set(sh.coefficients);\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tconst coefficients = this.coefficients;\r\n\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tcoefficients[i].fromArray(array, offset + i * 3);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tconst coefficients = this.coefficients;\r\n\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tcoefficients[i].toArray(array, offset + i * 3);\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\t\t} // evaluate the basis functions\r\n\t\t// shBasis is an Array[ 9 ]\r\n\r\n\r\n\t\tstatic getBasisAt(normal, shBasis) {\r\n\t\t\t// normal is assumed to be unit length\r\n\t\t\tconst x = normal.x,\r\n\t\t\t\t\t\ty = normal.y,\r\n\t\t\t\t\t\tz = normal.z; // band 0\r\n\r\n\t\t\tshBasis[0] = 0.282095; // band 1\r\n\r\n\t\t\tshBasis[1] = 0.488603 * y;\r\n\t\t\tshBasis[2] = 0.488603 * z;\r\n\t\t\tshBasis[3] = 0.488603 * x; // band 2\r\n\r\n\t\t\tshBasis[4] = 1.092548 * x * y;\r\n\t\t\tshBasis[5] = 1.092548 * y * z;\r\n\t\t\tshBasis[6] = 0.315392 * (3 * z * z - 1);\r\n\t\t\tshBasis[7] = 1.092548 * x * z;\r\n\t\t\tshBasis[8] = 0.546274 * (x * x - y * y);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\r\n\r\n\tclass LightProbe extends Light {\r\n\t\tconstructor(sh = new SphericalHarmonics3(), intensity = 1) {\r\n\t\t\tsuper(undefined, intensity);\r\n\t\t\tthis.sh = sh;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.sh.copy(source.sh);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\r\n\r\n\t\t\tthis.sh.fromArray(json.sh);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tdata.object.sh = this.sh.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLightProbe.prototype.isLightProbe = true;\r\n\r\n\tclass MaterialLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t\tthis.textures = {};\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst loader = new FileLoader(scope.manager);\r\n\t\t\tloader.setPath(scope.path);\r\n\t\t\tloader.setRequestHeader(scope.requestHeader);\r\n\t\t\tloader.setWithCredentials(scope.withCredentials);\r\n\t\t\tloader.load(url, function (text) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (onError) {\r\n\t\t\t\t\t\tonError(e);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t}\r\n\t\t\t}, onProgress, onError);\r\n\t\t}\r\n\r\n\t\tparse(json) {\r\n\t\t\tconst textures = this.textures;\r\n\r\n\t\t\tfunction getTexture(name) {\r\n\t\t\t\tif (textures[name] === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.MaterialLoader: Undefined texture', name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn textures[name];\r\n\t\t\t}\r\n\r\n\t\t\tconst material = new Materials[json.type]();\r\n\t\t\tif (json.uuid !== undefined) material.uuid = json.uuid;\r\n\t\t\tif (json.name !== undefined) material.name = json.name;\r\n\t\t\tif (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\r\n\t\t\tif (json.roughness !== undefined) material.roughness = json.roughness;\r\n\t\t\tif (json.metalness !== undefined) material.metalness = json.metalness;\r\n\t\t\tif (json.sheen !== undefined) material.sheen = json.sheen;\r\n\t\t\tif (json.sheenTint !== undefined) material.sheenTint = new Color().setHex(json.sheenTint);\r\n\t\t\tif (json.sheenRoughness !== undefined) material.sheenRoughness = json.sheenRoughness;\r\n\t\t\tif (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\r\n\t\t\tif (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\r\n\t\t\tif (json.specularIntensity !== undefined) material.specularIntensity = json.specularIntensity;\r\n\t\t\tif (json.specularTint !== undefined && material.specularTint !== undefined) material.specularTint.setHex(json.specularTint);\r\n\t\t\tif (json.shininess !== undefined) material.shininess = json.shininess;\r\n\t\t\tif (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\r\n\t\t\tif (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\r\n\t\t\tif (json.transmission !== undefined) material.transmission = json.transmission;\r\n\t\t\tif (json.thickness !== undefined) material.thickness = json.thickness;\r\n\t\t\tif (json.attenuationDistance !== undefined) material.attenuationDistance = json.attenuationDistance;\r\n\t\t\tif (json.attenuationTint !== undefined && material.attenuationTint !== undefined) material.attenuationTint.setHex(json.attenuationTint);\r\n\t\t\tif (json.fog !== undefined) material.fog = json.fog;\r\n\t\t\tif (json.flatShading !== undefined) material.flatShading = json.flatShading;\r\n\t\t\tif (json.blending !== undefined) material.blending = json.blending;\r\n\t\t\tif (json.combine !== undefined) material.combine = json.combine;\r\n\t\t\tif (json.side !== undefined) material.side = json.side;\r\n\t\t\tif (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\r\n\t\t\tif (json.opacity !== undefined) material.opacity = json.opacity;\r\n\t\t\tif (json.format !== undefined) material.format = json.format;\r\n\t\t\tif (json.transparent !== undefined) material.transparent = json.transparent;\r\n\t\t\tif (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\r\n\t\t\tif (json.depthTest !== undefined) material.depthTest = json.depthTest;\r\n\t\t\tif (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\r\n\t\t\tif (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\r\n\t\t\tif (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\r\n\t\t\tif (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\r\n\t\t\tif (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\r\n\t\t\tif (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\r\n\t\t\tif (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\r\n\t\t\tif (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\r\n\t\t\tif (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\r\n\t\t\tif (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\r\n\t\t\tif (json.wireframe !== undefined) material.wireframe = json.wireframe;\r\n\t\t\tif (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\t\tif (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\r\n\t\t\tif (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\r\n\t\t\tif (json.rotation !== undefined) material.rotation = json.rotation;\r\n\t\t\tif (json.linewidth !== 1) material.linewidth = json.linewidth;\r\n\t\t\tif (json.dashSize !== undefined) material.dashSize = json.dashSize;\r\n\t\t\tif (json.gapSize !== undefined) material.gapSize = json.gapSize;\r\n\t\t\tif (json.scale !== undefined) material.scale = json.scale;\r\n\t\t\tif (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\r\n\t\t\tif (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\r\n\t\t\tif (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\r\n\t\t\tif (json.dithering !== undefined) material.dithering = json.dithering;\r\n\t\t\tif (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\r\n\t\t\tif (json.premultipliedAlpha !== undefined) material.premultipliedAlpha = json.premultipliedAlpha;\r\n\t\t\tif (json.visible !== undefined) material.visible = json.visible;\r\n\t\t\tif (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\r\n\t\t\tif (json.userData !== undefined) material.userData = json.userData;\r\n\r\n\t\t\tif (json.vertexColors !== undefined) {\r\n\t\t\t\tif (typeof json.vertexColors === 'number') {\r\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors > 0 ? true : false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\r\n\t\t\t\t}\r\n\t\t\t} // Shader Material\r\n\r\n\r\n\t\t\tif (json.uniforms !== undefined) {\r\n\t\t\t\tfor (const name in json.uniforms) {\r\n\t\t\t\t\tconst uniform = json.uniforms[name];\r\n\t\t\t\t\tmaterial.uniforms[name] = {};\r\n\r\n\t\t\t\t\tswitch (uniform.type) {\r\n\t\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = getTexture(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Color().setHex(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v2':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector2().fromArray(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v3':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector3().fromArray(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v4':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector4().fromArray(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'm3':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix3().fromArray(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'm4':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix4().fromArray(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = uniform.value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (json.defines !== undefined) material.defines = json.defines;\r\n\t\t\tif (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\r\n\t\t\tif (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\r\n\r\n\t\t\tif (json.extensions !== undefined) {\r\n\t\t\t\tfor (const key in json.extensions) {\r\n\t\t\t\t\tmaterial.extensions[key] = json.extensions[key];\r\n\t\t\t\t}\r\n\t\t\t} // Deprecated\r\n\r\n\r\n\t\t\tif (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\r\n\t\t\t// for PointsMaterial\r\n\r\n\t\t\tif (json.size !== undefined) material.size = json.size;\r\n\t\t\tif (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\r\n\r\n\t\t\tif (json.map !== undefined) material.map = getTexture(json.map);\r\n\t\t\tif (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\r\n\t\t\tif (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\r\n\t\t\tif (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\r\n\t\t\tif (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\r\n\t\t\tif (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\r\n\t\t\tif (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\r\n\r\n\t\t\tif (json.normalScale !== undefined) {\r\n\t\t\t\tlet normalScale = json.normalScale;\r\n\r\n\t\t\t\tif (Array.isArray(normalScale) === false) {\r\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\t\t\t\t\tnormalScale = [normalScale, normalScale];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray(normalScale);\r\n\t\t\t}\r\n\r\n\t\t\tif (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\r\n\t\t\tif (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\r\n\t\t\tif (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\r\n\t\t\tif (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\r\n\t\t\tif (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\r\n\t\t\tif (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\r\n\t\t\tif (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\r\n\t\t\tif (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\r\n\t\t\tif (json.specularIntensityMap !== undefined) material.specularIntensityMap = getTexture(json.specularIntensityMap);\r\n\t\t\tif (json.specularTintMap !== undefined) material.specularTintMap = getTexture(json.specularTintMap);\r\n\t\t\tif (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\r\n\t\t\tif (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\r\n\t\t\tif (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\r\n\t\t\tif (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\r\n\t\t\tif (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\r\n\t\t\tif (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\r\n\t\t\tif (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\r\n\t\t\tif (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\r\n\t\t\tif (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\r\n\t\t\tif (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\r\n\t\t\tif (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\r\n\t\t\tif (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\r\n\t\t\tif (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\r\n\t\t\tif (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\r\n\t\t\tif (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\r\n\t\t\treturn material;\r\n\t\t}\r\n\r\n\t\tsetTextures(value) {\r\n\t\t\tthis.textures = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass LoaderUtils {\r\n\t\tstatic decodeText(array) {\r\n\t\t\tif (typeof TextDecoder !== 'undefined') {\r\n\t\t\t\treturn new TextDecoder().decode(array);\r\n\t\t\t} // Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\r\n\r\n\r\n\t\t\tlet s = '';\r\n\r\n\t\t\tfor (let i = 0, il = array.length; i < il; i++) {\r\n\t\t\t\t// Implicitly assumes little-endian.\r\n\t\t\t\ts += String.fromCharCode(array[i]);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// merges multi-byte utf-8 characters.\r\n\t\t\t\treturn decodeURIComponent(escape(s));\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// see #16358\r\n\t\t\t\treturn s;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic extractUrlBase(url) {\r\n\t\t\tconst index = url.lastIndexOf('/');\r\n\t\t\tif (index === -1) return './';\r\n\t\t\treturn url.substr(0, index + 1);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass InstancedBufferGeometry extends BufferGeometry {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\t\tthis.instanceCount = Infinity;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.instanceCount = source.instanceCount;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON(this);\r\n\t\t\tdata.instanceCount = this.instanceCount;\r\n\t\t\tdata.isInstancedBufferGeometry = true;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\r\n\r\n\tclass BufferGeometryLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst loader = new FileLoader(scope.manager);\r\n\t\t\tloader.setPath(scope.path);\r\n\t\t\tloader.setRequestHeader(scope.requestHeader);\r\n\t\t\tloader.setWithCredentials(scope.withCredentials);\r\n\t\t\tloader.load(url, function (text) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (onError) {\r\n\t\t\t\t\t\tonError(e);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t}\r\n\t\t\t}, onProgress, onError);\r\n\t\t}\r\n\r\n\t\tparse(json) {\r\n\t\t\tconst interleavedBufferMap = {};\r\n\t\t\tconst arrayBufferMap = {};\r\n\r\n\t\t\tfunction getInterleavedBuffer(json, uuid) {\r\n\t\t\t\tif (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\r\n\t\t\t\tconst interleavedBuffers = json.interleavedBuffers;\r\n\t\t\t\tconst interleavedBuffer = interleavedBuffers[uuid];\r\n\t\t\t\tconst buffer = getArrayBuffer(json, interleavedBuffer.buffer);\r\n\t\t\t\tconst array = getTypedArray(interleavedBuffer.type, buffer);\r\n\t\t\t\tconst ib = new InterleavedBuffer(array, interleavedBuffer.stride);\r\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\r\n\t\t\t\tinterleavedBufferMap[uuid] = ib;\r\n\t\t\t\treturn ib;\r\n\t\t\t}\r\n\r\n\t\t\tfunction getArrayBuffer(json, uuid) {\r\n\t\t\t\tif (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\r\n\t\t\t\tconst arrayBuffers = json.arrayBuffers;\r\n\t\t\t\tconst arrayBuffer = arrayBuffers[uuid];\r\n\t\t\t\tconst ab = new Uint32Array(arrayBuffer).buffer;\r\n\t\t\t\tarrayBufferMap[uuid] = ab;\r\n\t\t\t\treturn ab;\r\n\t\t\t}\r\n\r\n\t\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\r\n\t\t\tconst index = json.data.index;\r\n\r\n\t\t\tif (index !== undefined) {\r\n\t\t\t\tconst typedArray = getTypedArray(index.type, index.array);\r\n\t\t\t\tgeometry.setIndex(new BufferAttribute(typedArray, 1));\r\n\t\t\t}\r\n\r\n\t\t\tconst attributes = json.data.attributes;\r\n\r\n\t\t\tfor (const key in attributes) {\r\n\t\t\t\tconst attribute = attributes[key];\r\n\t\t\t\tlet bufferAttribute;\r\n\r\n\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\r\n\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\r\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\r\n\t\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\r\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr(typedArray, attribute.itemSize, attribute.normalized);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\r\n\t\t\t\tif (attribute.usage !== undefined) bufferAttribute.setUsage(attribute.usage);\r\n\r\n\t\t\t\tif (attribute.updateRange !== undefined) {\r\n\t\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\r\n\t\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.setAttribute(key, bufferAttribute);\r\n\t\t\t}\r\n\r\n\t\t\tconst morphAttributes = json.data.morphAttributes;\r\n\r\n\t\t\tif (morphAttributes) {\r\n\t\t\t\tfor (const key in morphAttributes) {\r\n\t\t\t\t\tconst attributeArray = morphAttributes[key];\r\n\t\t\t\t\tconst array = [];\r\n\r\n\t\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\r\n\t\t\t\t\t\tconst attribute = attributeArray[i];\r\n\t\t\t\t\t\tlet bufferAttribute;\r\n\r\n\t\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\r\n\t\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\r\n\t\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\r\n\t\t\t\t\t\t\tbufferAttribute = new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\r\n\t\t\t\t\t\tarray.push(bufferAttribute);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.morphAttributes[key] = array;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\r\n\r\n\t\t\tif (morphTargetsRelative) {\r\n\t\t\t\tgeometry.morphTargetsRelative = true;\r\n\t\t\t}\r\n\r\n\t\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\t\tif (groups !== undefined) {\r\n\t\t\t\tfor (let i = 0, n = groups.length; i !== n; ++i) {\r\n\t\t\t\t\tconst group = groups[i];\r\n\t\t\t\t\tgeometry.addGroup(group.start, group.count, group.materialIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst boundingSphere = json.data.boundingSphere;\r\n\r\n\t\t\tif (boundingSphere !== undefined) {\r\n\t\t\t\tconst center = new Vector3();\r\n\r\n\t\t\t\tif (boundingSphere.center !== undefined) {\r\n\t\t\t\t\tcenter.fromArray(boundingSphere.center);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.boundingSphere = new Sphere(center, boundingSphere.radius);\r\n\t\t\t}\r\n\r\n\t\t\tif (json.name) geometry.name = json.name;\r\n\t\t\tif (json.userData) geometry.userData = json.userData;\r\n\t\t\treturn geometry;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass ObjectLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\r\n\t\t\tthis.resourcePath = this.resourcePath || path;\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setWithCredentials(this.withCredentials);\r\n\t\t\tloader.load(url, function (text) {\r\n\t\t\t\tlet json = null;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tjson = JSON.parse(text);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tif (onError !== undefined) onError(error);\r\n\t\t\t\t\tconsole.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst metadata = json.metadata;\r\n\r\n\t\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\r\n\t\t\t\t\tconsole.error('THREE.ObjectLoader: Can\\'t load ' + url);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.parse(json, onLoad);\r\n\t\t\t}, onProgress, onError);\r\n\t\t}\r\n\r\n\t\tasync loadAsync(url, onProgress) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\r\n\t\t\tthis.resourcePath = this.resourcePath || path;\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setWithCredentials(this.withCredentials);\r\n\t\t\tconst text = await loader.loadAsync(url, onProgress);\r\n\t\t\tconst json = JSON.parse(text);\r\n\t\t\tconst metadata = json.metadata;\r\n\r\n\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\r\n\t\t\t\tthrow new Error('THREE.ObjectLoader: Can\\'t load ' + url);\r\n\t\t\t}\r\n\r\n\t\t\treturn await scope.parseAsync(json);\r\n\t\t}\r\n\r\n\t\tparse(json, onLoad) {\r\n\t\t\tconst animations = this.parseAnimations(json.animations);\r\n\t\t\tconst shapes = this.parseShapes(json.shapes);\r\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\r\n\t\t\tconst images = this.parseImages(json.images, function () {\r\n\t\t\t\tif (onLoad !== undefined) onLoad(object);\r\n\t\t\t});\r\n\t\t\tconst textures = this.parseTextures(json.textures, images);\r\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\r\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\r\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\r\n\t\t\tthis.bindSkeletons(object, skeletons); //\r\n\r\n\t\t\tif (onLoad !== undefined) {\r\n\t\t\t\tlet hasImages = false;\r\n\r\n\t\t\t\tfor (const uuid in images) {\r\n\t\t\t\t\tif (images[uuid] instanceof HTMLImageElement) {\r\n\t\t\t\t\t\thasImages = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (hasImages === false) onLoad(object);\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\t\t}\r\n\r\n\t\tasync parseAsync(json) {\r\n\t\t\tconst animations = this.parseAnimations(json.animations);\r\n\t\t\tconst shapes = this.parseShapes(json.shapes);\r\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\r\n\t\t\tconst images = await this.parseImagesAsync(json.images);\r\n\t\t\tconst textures = this.parseTextures(json.textures, images);\r\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\r\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\r\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\r\n\t\t\tthis.bindSkeletons(object, skeletons);\r\n\t\t\treturn object;\r\n\t\t}\r\n\r\n\t\tparseShapes(json) {\r\n\t\t\tconst shapes = {};\r\n\r\n\t\t\tif (json !== undefined) {\r\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\r\n\t\t\t\t\tconst shape = new Shape().fromJSON(json[i]);\r\n\t\t\t\t\tshapes[shape.uuid] = shape;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn shapes;\r\n\t\t}\r\n\r\n\t\tparseSkeletons(json, object) {\r\n\t\t\tconst skeletons = {};\r\n\t\t\tconst bones = {}; // generate bone lookup table\r\n\r\n\t\t\tobject.traverse(function (child) {\r\n\t\t\t\tif (child.isBone) bones[child.uuid] = child;\r\n\t\t\t}); // create skeletons\r\n\r\n\t\t\tif (json !== undefined) {\r\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\r\n\t\t\t\t\tconst skeleton = new Skeleton().fromJSON(json[i], bones);\r\n\t\t\t\t\tskeletons[skeleton.uuid] = skeleton;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn skeletons;\r\n\t\t}\r\n\r\n\t\tparseGeometries(json, shapes) {\r\n\t\t\tconst geometries = {};\r\n\r\n\t\t\tif (json !== undefined) {\r\n\t\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\r\n\r\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\r\n\t\t\t\t\tlet geometry;\r\n\t\t\t\t\tconst data = json[i];\r\n\r\n\t\t\t\t\tswitch (data.type) {\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse(data);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\t\t\t\t\t\t\tconsole.error('THREE.ObjectLoader: The legacy Geometry type is no longer supported.');\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tif (data.type in Geometries) {\r\n\t\t\t\t\t\t\t\tgeometry = Geometries[data.type].fromJSON(data, shapes);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.warn(`THREE.ObjectLoader: Unsupported geometry type \"${data.type}\"`);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\t\t\t\t\tif (data.name !== undefined) geometry.name = data.name;\r\n\t\t\t\t\tif (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\r\n\t\t\t\t\tgeometries[data.uuid] = geometry;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn geometries;\r\n\t\t}\r\n\r\n\t\tparseMaterials(json, textures) {\r\n\t\t\tconst cache = {}; // MultiMaterial\r\n\r\n\t\t\tconst materials = {};\r\n\r\n\t\t\tif (json !== undefined) {\r\n\t\t\t\tconst loader = new MaterialLoader();\r\n\t\t\t\tloader.setTextures(textures);\r\n\r\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\r\n\t\t\t\t\tconst data = json[i];\r\n\r\n\t\t\t\t\tif (data.type === 'MultiMaterial') {\r\n\t\t\t\t\t\t// Deprecated\r\n\t\t\t\t\t\tconst array = [];\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j < data.materials.length; j++) {\r\n\t\t\t\t\t\t\tconst material = data.materials[j];\r\n\r\n\t\t\t\t\t\t\tif (cache[material.uuid] === undefined) {\r\n\t\t\t\t\t\t\t\tcache[material.uuid] = loader.parse(material);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tarray.push(cache[material.uuid]);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterials[data.uuid] = array;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (cache[data.uuid] === undefined) {\r\n\t\t\t\t\t\t\tcache[data.uuid] = loader.parse(data);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterials[data.uuid] = cache[data.uuid];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn materials;\r\n\t\t}\r\n\r\n\t\tparseAnimations(json) {\r\n\t\t\tconst animations = {};\r\n\r\n\t\t\tif (json !== undefined) {\r\n\t\t\t\tfor (let i = 0; i < json.length; i++) {\r\n\t\t\t\t\tconst data = json[i];\r\n\t\t\t\t\tconst clip = AnimationClip.parse(data);\r\n\t\t\t\t\tanimations[clip.uuid] = clip;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn animations;\r\n\t\t}\r\n\r\n\t\tparseImages(json, onLoad) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst images = {};\r\n\t\t\tlet loader;\r\n\r\n\t\t\tfunction loadImage(url) {\r\n\t\t\t\tscope.manager.itemStart(url);\r\n\t\t\t\treturn loader.load(url, function () {\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t}, undefined, function () {\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction deserializeImage(image) {\r\n\t\t\t\tif (typeof image === 'string') {\r\n\t\t\t\t\tconst url = image;\r\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\r\n\t\t\t\t\treturn loadImage(path);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (image.data) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\r\n\t\t\t\t\t\t\twidth: image.width,\r\n\t\t\t\t\t\t\theight: image.height\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (json !== undefined && json.length > 0) {\r\n\t\t\t\tconst manager = new LoadingManager(onLoad);\r\n\t\t\t\tloader = new ImageLoader(manager);\r\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\r\n\r\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\r\n\t\t\t\t\tconst image = json[i];\r\n\t\t\t\t\tconst url = image.url;\r\n\r\n\t\t\t\t\tif (Array.isArray(url)) {\r\n\t\t\t\t\t\t// load array of images e.g CubeTexture\r\n\t\t\t\t\t\timages[image.uuid] = [];\r\n\r\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\r\n\t\t\t\t\t\t\tconst currentUrl = url[j];\r\n\t\t\t\t\t\t\tconst deserializedImage = deserializeImage(currentUrl);\r\n\r\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\r\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\r\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\r\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// load single image\r\n\t\t\t\t\t\tconst deserializedImage = deserializeImage(image.url);\r\n\r\n\t\t\t\t\t\tif (deserializedImage !== null) {\r\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn images;\r\n\t\t}\r\n\r\n\t\tasync parseImagesAsync(json) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst images = {};\r\n\t\t\tlet loader;\r\n\r\n\t\t\tasync function deserializeImage(image) {\r\n\t\t\t\tif (typeof image === 'string') {\r\n\t\t\t\t\tconst url = image;\r\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\r\n\t\t\t\t\treturn await loader.loadAsync(path);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (image.data) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\r\n\t\t\t\t\t\t\twidth: image.width,\r\n\t\t\t\t\t\t\theight: image.height\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (json !== undefined && json.length > 0) {\r\n\t\t\t\tloader = new ImageLoader(this.manager);\r\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\r\n\r\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\r\n\t\t\t\t\tconst image = json[i];\r\n\t\t\t\t\tconst url = image.url;\r\n\r\n\t\t\t\t\tif (Array.isArray(url)) {\r\n\t\t\t\t\t\t// load array of images e.g CubeTexture\r\n\t\t\t\t\t\timages[image.uuid] = [];\r\n\r\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\r\n\t\t\t\t\t\t\tconst currentUrl = url[j];\r\n\t\t\t\t\t\t\tconst deserializedImage = await deserializeImage(currentUrl);\r\n\r\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\r\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\r\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\r\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// load single image\r\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage(image.url);\r\n\r\n\t\t\t\t\t\tif (deserializedImage !== null) {\r\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn images;\r\n\t\t}\r\n\r\n\t\tparseTextures(json, images) {\r\n\t\t\tfunction parseConstant(value, type) {\r\n\t\t\t\tif (typeof value === 'number') return value;\r\n\t\t\t\tconsole.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\r\n\t\t\t\treturn type[value];\r\n\t\t\t}\r\n\r\n\t\t\tconst textures = {};\r\n\r\n\t\t\tif (json !== undefined) {\r\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\r\n\t\t\t\t\tconst data = json[i];\r\n\r\n\t\t\t\t\tif (data.image === undefined) {\r\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (images[data.image] === undefined) {\r\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined image', data.image);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet texture;\r\n\t\t\t\t\tconst image = images[data.image];\r\n\r\n\t\t\t\t\tif (Array.isArray(image)) {\r\n\t\t\t\t\t\ttexture = new CubeTexture(image);\r\n\t\t\t\t\t\tif (image.length === 6) texture.needsUpdate = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (image && image.data) {\r\n\t\t\t\t\t\t\ttexture = new DataTexture(image.data, image.width, image.height);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttexture = new Texture(image);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (image) texture.needsUpdate = true; // textures can have undefined image data\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\t\t\t\t\tif (data.name !== undefined) texture.name = data.name;\r\n\t\t\t\t\tif (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\r\n\t\t\t\t\tif (data.offset !== undefined) texture.offset.fromArray(data.offset);\r\n\t\t\t\t\tif (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\r\n\t\t\t\t\tif (data.center !== undefined) texture.center.fromArray(data.center);\r\n\t\t\t\t\tif (data.rotation !== undefined) texture.rotation = data.rotation;\r\n\r\n\t\t\t\t\tif (data.wrap !== undefined) {\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (data.format !== undefined) texture.format = data.format;\r\n\t\t\t\t\tif (data.type !== undefined) texture.type = data.type;\r\n\t\t\t\t\tif (data.encoding !== undefined) texture.encoding = data.encoding;\r\n\t\t\t\t\tif (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\r\n\t\t\t\t\tif (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\r\n\t\t\t\t\tif (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\r\n\t\t\t\t\tif (data.flipY !== undefined) texture.flipY = data.flipY;\r\n\t\t\t\t\tif (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\r\n\t\t\t\t\tif (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\r\n\t\t\t\t\ttextures[data.uuid] = texture;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn textures;\r\n\t\t}\r\n\r\n\t\tparseObject(data, geometries, materials, textures, animations) {\r\n\t\t\tlet object;\r\n\r\n\t\t\tfunction getGeometry(name) {\r\n\t\t\t\tif (geometries[name] === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined geometry', name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[name];\r\n\t\t\t}\r\n\r\n\t\t\tfunction getMaterial(name) {\r\n\t\t\t\tif (name === undefined) return undefined;\r\n\r\n\t\t\t\tif (Array.isArray(name)) {\r\n\t\t\t\t\tconst array = [];\r\n\r\n\t\t\t\t\tfor (let i = 0, l = name.length; i < l; i++) {\r\n\t\t\t\t\t\tconst uuid = name[i];\r\n\r\n\t\t\t\t\t\tif (materials[uuid] === undefined) {\r\n\t\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', uuid);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tarray.push(materials[uuid]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn array;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (materials[name] === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[name];\r\n\t\t\t}\r\n\r\n\t\t\tfunction getTexture(uuid) {\r\n\t\t\t\tif (textures[uuid] === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined texture', uuid);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn textures[uuid];\r\n\t\t\t}\r\n\r\n\t\t\tlet geometry, material;\r\n\r\n\t\t\tswitch (data.type) {\r\n\t\t\t\tcase 'Scene':\r\n\t\t\t\t\tobject = new Scene();\r\n\r\n\t\t\t\t\tif (data.background !== undefined) {\r\n\t\t\t\t\t\tif (Number.isInteger(data.background)) {\r\n\t\t\t\t\t\t\tobject.background = new Color(data.background);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobject.background = getTexture(data.background);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (data.environment !== undefined) {\r\n\t\t\t\t\t\tobject.environment = getTexture(data.environment);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (data.fog !== undefined) {\r\n\t\t\t\t\t\tif (data.fog.type === 'Fog') {\r\n\t\t\t\t\t\t\tobject.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\r\n\t\t\t\t\t\t} else if (data.fog.type === 'FogExp2') {\r\n\t\t\t\t\t\t\tobject.fog = new FogExp2(data.fog.color, data.fog.density);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\t\t\t\t\tobject = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\r\n\t\t\t\t\tif (data.focus !== undefined) object.focus = data.focus;\r\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\r\n\t\t\t\t\tif (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\r\n\t\t\t\t\tif (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\r\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\t\t\t\t\tobject = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\r\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\r\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\t\t\t\t\tobject = new AmbientLight(data.color, data.intensity);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\tobject = new DirectionalLight(data.color, data.intensity);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\tobject = new PointLight(data.color, data.intensity, data.distance, data.decay);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'RectAreaLight':\r\n\t\t\t\t\tobject = new RectAreaLight(data.color, data.intensity, data.width, data.height);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\tobject = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\t\t\t\t\tobject = new HemisphereLight(data.color, data.groundColor, data.intensity);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LightProbe':\r\n\t\t\t\t\tobject = new LightProbe().fromJSON(data);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SkinnedMesh':\r\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\r\n\t\t\t\t\tmaterial = getMaterial(data.material);\r\n\t\t\t\t\tobject = new SkinnedMesh(geometry, material);\r\n\t\t\t\t\tif (data.bindMode !== undefined) object.bindMode = data.bindMode;\r\n\t\t\t\t\tif (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\r\n\t\t\t\t\tif (data.skeleton !== undefined) object.skeleton = data.skeleton;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\r\n\t\t\t\t\tmaterial = getMaterial(data.material);\r\n\t\t\t\t\tobject = new Mesh(geometry, material);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'InstancedMesh':\r\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\r\n\t\t\t\t\tmaterial = getMaterial(data.material);\r\n\t\t\t\t\tconst count = data.count;\r\n\t\t\t\t\tconst instanceMatrix = data.instanceMatrix;\r\n\t\t\t\t\tconst instanceColor = data.instanceColor;\r\n\t\t\t\t\tobject = new InstancedMesh(geometry, material, count);\r\n\t\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute(new Float32Array(instanceMatrix.array), 16);\r\n\t\t\t\t\tif (instanceColor !== undefined) object.instanceColor = new InstancedBufferAttribute(new Float32Array(instanceColor.array), instanceColor.itemSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\t\t\t\t\tobject = new LOD();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\t\t\t\t\tobject = new Line(getGeometry(data.geometry), getMaterial(data.material));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LineLoop':\r\n\t\t\t\t\tobject = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LineSegments':\r\n\t\t\t\t\tobject = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\t\t\t\t\tobject = new Points(getGeometry(data.geometry), getMaterial(data.material));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\t\t\t\t\tobject = new Sprite(getMaterial(data.material));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\t\t\t\t\tobject = new Group();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Bone':\r\n\t\t\t\t\tobject = new Bone();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobject = new Object3D();\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\t\t\tif (data.name !== undefined) object.name = data.name;\r\n\r\n\t\t\tif (data.matrix !== undefined) {\r\n\t\t\t\tobject.matrix.fromArray(data.matrix);\r\n\t\t\t\tif (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\r\n\t\t\t\tif (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\r\n\t\t\t} else {\r\n\t\t\t\tif (data.position !== undefined) object.position.fromArray(data.position);\r\n\t\t\t\tif (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\r\n\t\t\t\tif (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\r\n\t\t\t\tif (data.scale !== undefined) object.scale.fromArray(data.scale);\r\n\t\t\t}\r\n\r\n\t\t\tif (data.castShadow !== undefined) object.castShadow = data.castShadow;\r\n\t\t\tif (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif (data.shadow) {\r\n\t\t\t\tif (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\r\n\t\t\t\tif (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\r\n\t\t\t\tif (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\r\n\t\t\t\tif (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\r\n\t\t\t\tif (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\r\n\t\t\t}\r\n\r\n\t\t\tif (data.visible !== undefined) object.visible = data.visible;\r\n\t\t\tif (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\r\n\t\t\tif (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\r\n\t\t\tif (data.userData !== undefined) object.userData = data.userData;\r\n\t\t\tif (data.layers !== undefined) object.layers.mask = data.layers;\r\n\r\n\t\t\tif (data.children !== undefined) {\r\n\t\t\t\tconst children = data.children;\r\n\r\n\t\t\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\t\t\tobject.add(this.parseObject(children[i], geometries, materials, textures, animations));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (data.animations !== undefined) {\r\n\t\t\t\tconst objectAnimations = data.animations;\r\n\r\n\t\t\t\tfor (let i = 0; i < objectAnimations.length; i++) {\r\n\t\t\t\t\tconst uuid = objectAnimations[i];\r\n\t\t\t\t\tobject.animations.push(animations[uuid]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (data.type === 'LOD') {\r\n\t\t\t\tif (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\r\n\t\t\t\tconst levels = data.levels;\r\n\r\n\t\t\t\tfor (let l = 0; l < levels.length; l++) {\r\n\t\t\t\t\tconst level = levels[l];\r\n\t\t\t\t\tconst child = object.getObjectByProperty('uuid', level.object);\r\n\r\n\t\t\t\t\tif (child !== undefined) {\r\n\t\t\t\t\t\tobject.addLevel(child, level.distance);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\t\t}\r\n\r\n\t\tbindSkeletons(object, skeletons) {\r\n\t\t\tif (Object.keys(skeletons).length === 0) return;\r\n\t\t\tobject.traverse(function (child) {\r\n\t\t\t\tif (child.isSkinnedMesh === true && child.skeleton !== undefined) {\r\n\t\t\t\t\tconst skeleton = skeletons[child.skeleton];\r\n\r\n\t\t\t\t\tif (skeleton === undefined) {\r\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchild.bind(skeleton, child.bindMatrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t/* DEPRECATED */\r\n\r\n\r\n\t\tsetTexturePath(value) {\r\n\t\t\tconsole.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\r\n\t\t\treturn this.setResourcePath(value);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst TEXTURE_MAPPING = {\r\n\t\tUVMapping: UVMapping,\r\n\t\tCubeReflectionMapping: CubeReflectionMapping,\r\n\t\tCubeRefractionMapping: CubeRefractionMapping,\r\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\r\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\r\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\r\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\r\n\t};\r\n\tconst TEXTURE_WRAPPING = {\r\n\t\tRepeatWrapping: RepeatWrapping,\r\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\r\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\r\n\t};\r\n\tconst TEXTURE_FILTER = {\r\n\t\tNearestFilter: NearestFilter,\r\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\r\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\r\n\t\tLinearFilter: LinearFilter,\r\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\r\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\r\n\t};\r\n\r\n\tclass ImageBitmapLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\r\n\t\t\tif (typeof createImageBitmap === 'undefined') {\r\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof fetch === 'undefined') {\r\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: fetch() not supported.');\r\n\t\t\t}\r\n\r\n\t\t\tthis.options = {\r\n\t\t\t\tpremultiplyAlpha: 'none'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tsetOptions(options) {\r\n\t\t\tthis.options = options;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tif (url === undefined) url = '';\r\n\t\t\tif (this.path !== undefined) url = this.path + url;\r\n\t\t\turl = this.manager.resolveURL(url);\r\n\t\t\tconst scope = this;\r\n\t\t\tconst cached = Cache.get(url);\r\n\r\n\t\t\tif (cached !== undefined) {\r\n\t\t\t\tscope.manager.itemStart(url);\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tif (onLoad) onLoad(cached);\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t}, 0);\r\n\t\t\t\treturn cached;\r\n\t\t\t}\r\n\r\n\t\t\tconst fetchOptions = {};\r\n\t\t\tfetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\r\n\t\t\tfetchOptions.headers = this.requestHeader;\r\n\t\t\tfetch(url, fetchOptions).then(function (res) {\r\n\t\t\t\treturn res.blob();\r\n\t\t\t}).then(function (blob) {\r\n\t\t\t\treturn createImageBitmap(blob, Object.assign(scope.options, {\r\n\t\t\t\t\tcolorSpaceConversion: 'none'\r\n\t\t\t\t}));\r\n\t\t\t}).then(function (imageBitmap) {\r\n\t\t\t\tCache.add(url, imageBitmap);\r\n\t\t\t\tif (onLoad) onLoad(imageBitmap);\r\n\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t}).catch(function (e) {\r\n\t\t\t\tif (onError) onError(e);\r\n\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t});\r\n\t\t\tscope.manager.itemStart(url);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tImageBitmapLoader.prototype.isImageBitmapLoader = true;\r\n\r\n\tlet _context;\r\n\r\n\tconst AudioContext = {\r\n\t\tgetContext: function () {\r\n\t\t\tif (_context === undefined) {\r\n\t\t\t\t_context = new (window.AudioContext || window.webkitAudioContext)();\r\n\t\t\t}\r\n\r\n\t\t\treturn _context;\r\n\t\t},\r\n\t\tsetContext: function (value) {\r\n\t\t\t_context = value;\r\n\t\t}\r\n\t};\r\n\r\n\tclass AudioLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setResponseType('arraybuffer');\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setWithCredentials(this.withCredentials);\r\n\t\t\tloader.load(url, function (buffer) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\r\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\r\n\t\t\t\t\tconst bufferCopy = buffer.slice(0);\r\n\t\t\t\t\tconst context = AudioContext.getContext();\r\n\t\t\t\t\tcontext.decodeAudioData(bufferCopy, function (audioBuffer) {\r\n\t\t\t\t\t\tonLoad(audioBuffer);\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (onError) {\r\n\t\t\t\t\t\tonError(e);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t}\r\n\t\t\t}, onProgress, onError);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass HemisphereLightProbe extends LightProbe {\r\n\t\tconstructor(skyColor, groundColor, intensity = 1) {\r\n\t\t\tsuper(undefined, intensity);\r\n\t\t\tconst color1 = new Color().set(skyColor);\r\n\t\t\tconst color2 = new Color().set(groundColor);\r\n\t\t\tconst sky = new Vector3(color1.r, color1.g, color1.b);\r\n\t\t\tconst ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\r\n\r\n\t\t\tconst c0 = Math.sqrt(Math.PI);\r\n\t\t\tconst c1 = c0 * Math.sqrt(0.75);\r\n\t\t\tthis.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\r\n\t\t\tthis.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\r\n\r\n\tclass AmbientLightProbe extends LightProbe {\r\n\t\tconstructor(color, intensity = 1) {\r\n\t\t\tsuper(undefined, intensity);\r\n\t\t\tconst color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\r\n\r\n\t\t\tthis.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tAmbientLightProbe.prototype.isAmbientLightProbe = true;\r\n\r\n\tconst _eyeRight = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _eyeLeft = /*@__PURE__*/new Matrix4();\r\n\r\n\tclass StereoCamera {\r\n\t\tconstructor() {\r\n\t\t\tthis.type = 'StereoCamera';\r\n\t\t\tthis.aspect = 1;\r\n\t\t\tthis.eyeSep = 0.064;\r\n\t\t\tthis.cameraL = new PerspectiveCamera();\r\n\t\t\tthis.cameraL.layers.enable(1);\r\n\t\t\tthis.cameraL.matrixAutoUpdate = false;\r\n\t\t\tthis.cameraR = new PerspectiveCamera();\r\n\t\t\tthis.cameraR.layers.enable(2);\r\n\t\t\tthis.cameraR.matrixAutoUpdate = false;\r\n\t\t\tthis._cache = {\r\n\t\t\t\tfocus: null,\r\n\t\t\t\tfov: null,\r\n\t\t\t\taspect: null,\r\n\t\t\t\tnear: null,\r\n\t\t\t\tfar: null,\r\n\t\t\t\tzoom: null,\r\n\t\t\t\teyeSep: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tupdate(camera) {\r\n\t\t\tconst cache = this._cache;\r\n\t\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\r\n\r\n\t\t\tif (needsUpdate) {\r\n\t\t\t\tcache.focus = camera.focus;\r\n\t\t\t\tcache.fov = camera.fov;\r\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\r\n\t\t\t\tcache.near = camera.near;\r\n\t\t\t\tcache.far = camera.far;\r\n\t\t\t\tcache.zoom = camera.zoom;\r\n\t\t\t\tcache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\r\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\r\n\t\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\r\n\t\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\r\n\t\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\r\n\t\t\t\tconst ymax = cache.near * Math.tan(DEG2RAD * cache.fov * 0.5) / cache.zoom;\r\n\t\t\t\tlet xmin, xmax; // translate xOffset\r\n\r\n\t\t\t\t_eyeLeft.elements[12] = -eyeSepHalf;\r\n\t\t\t\t_eyeRight.elements[12] = eyeSepHalf; // for left eye\r\n\r\n\t\t\t\txmin = -ymax * cache.aspect + eyeSepOnProjection;\r\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\r\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\r\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\r\n\t\t\t\tthis.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\r\n\r\n\t\t\t\txmin = -ymax * cache.aspect - eyeSepOnProjection;\r\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\r\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\r\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\r\n\t\t\t\tthis.cameraR.projectionMatrix.copy(projectionMatrix);\r\n\t\t\t}\r\n\r\n\t\t\tthis.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\r\n\t\t\tthis.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Clock {\r\n\t\tconstructor(autoStart = true) {\r\n\t\t\tthis.autoStart = autoStart;\r\n\t\t\tthis.startTime = 0;\r\n\t\t\tthis.oldTime = 0;\r\n\t\t\tthis.elapsedTime = 0;\r\n\t\t\tthis.running = false;\r\n\t\t}\r\n\r\n\t\tstart() {\r\n\t\t\tthis.startTime = now();\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.elapsedTime = 0;\r\n\t\t\tthis.running = true;\r\n\t\t}\r\n\r\n\t\tstop() {\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\t\tthis.autoStart = false;\r\n\t\t}\r\n\r\n\t\tgetElapsedTime() {\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\t\t}\r\n\r\n\t\tgetDelta() {\r\n\t\t\tlet diff = 0;\r\n\r\n\t\t\tif (this.autoStart && !this.running) {\r\n\t\t\t\tthis.start();\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.running) {\r\n\t\t\t\tconst newTime = now();\r\n\t\t\t\tdiff = (newTime - this.oldTime) / 1000;\r\n\t\t\t\tthis.oldTime = newTime;\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\t\t\t}\r\n\r\n\t\t\treturn diff;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction now() {\r\n\t\treturn (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\r\n\t}\r\n\r\n\tconst _position$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _quaternion$1 = /*@__PURE__*/new Quaternion();\r\n\r\n\tconst _scale$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _orientation$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass AudioListener extends Object3D {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'AudioListener';\r\n\t\t\tthis.context = AudioContext.getContext();\r\n\t\t\tthis.gain = this.context.createGain();\r\n\t\t\tthis.gain.connect(this.context.destination);\r\n\t\t\tthis.filter = null;\r\n\t\t\tthis.timeDelta = 0; // private\r\n\r\n\t\t\tthis._clock = new Clock();\r\n\t\t}\r\n\r\n\t\tgetInput() {\r\n\t\t\treturn this.gain;\r\n\t\t}\r\n\r\n\t\tremoveFilter() {\r\n\t\t\tif (this.filter !== null) {\r\n\t\t\t\tthis.gain.disconnect(this.filter);\r\n\t\t\t\tthis.filter.disconnect(this.context.destination);\r\n\t\t\t\tthis.gain.connect(this.context.destination);\r\n\t\t\t\tthis.filter = null;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetFilter() {\r\n\t\t\treturn this.filter;\r\n\t\t}\r\n\r\n\t\tsetFilter(value) {\r\n\t\t\tif (this.filter !== null) {\r\n\t\t\t\tthis.gain.disconnect(this.filter);\r\n\t\t\t\tthis.filter.disconnect(this.context.destination);\r\n\t\t\t} else {\r\n\t\t\t\tthis.gain.disconnect(this.context.destination);\r\n\t\t\t}\r\n\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.gain.connect(this.filter);\r\n\t\t\tthis.filter.connect(this.context.destination);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetMasterVolume() {\r\n\t\t\treturn this.gain.gain.value;\r\n\t\t}\r\n\r\n\t\tsetMasterVolume(value) {\r\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\t\t\tconst listener = this.context.listener;\r\n\t\t\tconst up = this.up;\r\n\t\t\tthis.timeDelta = this._clock.getDelta();\r\n\t\t\tthis.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\r\n\r\n\t\t\t_orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\r\n\r\n\t\t\tif (listener.positionX) {\r\n\t\t\t\t// code path for Chrome (see #14393)\r\n\t\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\r\n\t\t\t\tlistener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\r\n\t\t\t\tlistener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\r\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\r\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\r\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\r\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\r\n\t\t\t\tlistener.upX.linearRampToValueAtTime(up.x, endTime);\r\n\t\t\t\tlistener.upY.linearRampToValueAtTime(up.y, endTime);\r\n\t\t\t\tlistener.upZ.linearRampToValueAtTime(up.z, endTime);\r\n\t\t\t} else {\r\n\t\t\t\tlistener.setPosition(_position$1.x, _position$1.y, _position$1.z);\r\n\t\t\t\tlistener.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Audio extends Object3D {\r\n\t\tconstructor(listener) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Audio';\r\n\t\t\tthis.listener = listener;\r\n\t\t\tthis.context = listener.context;\r\n\t\t\tthis.gain = this.context.createGain();\r\n\t\t\tthis.gain.connect(listener.getInput());\r\n\t\t\tthis.autoplay = false;\r\n\t\t\tthis.buffer = null;\r\n\t\t\tthis.detune = 0;\r\n\t\t\tthis.loop = false;\r\n\t\t\tthis.loopStart = 0;\r\n\t\t\tthis.loopEnd = 0;\r\n\t\t\tthis.offset = 0;\r\n\t\t\tthis.duration = undefined;\r\n\t\t\tthis.playbackRate = 1;\r\n\t\t\tthis.isPlaying = false;\r\n\t\t\tthis.hasPlaybackControl = true;\r\n\t\t\tthis.source = null;\r\n\t\t\tthis.sourceType = 'empty';\r\n\t\t\tthis._startedAt = 0;\r\n\t\t\tthis._progress = 0;\r\n\t\t\tthis._connected = false;\r\n\t\t\tthis.filters = [];\r\n\t\t}\r\n\r\n\t\tgetOutput() {\r\n\t\t\treturn this.gain;\r\n\t\t}\r\n\r\n\t\tsetNodeSource(audioNode) {\r\n\t\t\tthis.hasPlaybackControl = false;\r\n\t\t\tthis.sourceType = 'audioNode';\r\n\t\t\tthis.source = audioNode;\r\n\t\t\tthis.connect();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetMediaElementSource(mediaElement) {\r\n\t\t\tthis.hasPlaybackControl = false;\r\n\t\t\tthis.sourceType = 'mediaNode';\r\n\t\t\tthis.source = this.context.createMediaElementSource(mediaElement);\r\n\t\t\tthis.connect();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetMediaStreamSource(mediaStream) {\r\n\t\t\tthis.hasPlaybackControl = false;\r\n\t\t\tthis.sourceType = 'mediaStreamNode';\r\n\t\t\tthis.source = this.context.createMediaStreamSource(mediaStream);\r\n\t\t\tthis.connect();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetBuffer(audioBuffer) {\r\n\t\t\tthis.buffer = audioBuffer;\r\n\t\t\tthis.sourceType = 'buffer';\r\n\t\t\tif (this.autoplay) this.play();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tplay(delay = 0) {\r\n\t\t\tif (this.isPlaying === true) {\r\n\t\t\t\tconsole.warn('THREE.Audio: Audio is already playing.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.hasPlaybackControl === false) {\r\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._startedAt = this.context.currentTime + delay;\r\n\t\t\tconst source = this.context.createBufferSource();\r\n\t\t\tsource.buffer = this.buffer;\r\n\t\t\tsource.loop = this.loop;\r\n\t\t\tsource.loopStart = this.loopStart;\r\n\t\t\tsource.loopEnd = this.loopEnd;\r\n\t\t\tsource.onended = this.onEnded.bind(this);\r\n\t\t\tsource.start(this._startedAt, this._progress + this.offset, this.duration);\r\n\t\t\tthis.isPlaying = true;\r\n\t\t\tthis.source = source;\r\n\t\t\tthis.setDetune(this.detune);\r\n\t\t\tthis.setPlaybackRate(this.playbackRate);\r\n\t\t\treturn this.connect();\r\n\t\t}\r\n\r\n\t\tpause() {\r\n\t\t\tif (this.hasPlaybackControl === false) {\r\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isPlaying === true) {\r\n\t\t\t\t// update current progress\r\n\t\t\t\tthis._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\r\n\r\n\t\t\t\tif (this.loop === true) {\r\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\r\n\t\t\t\t\tthis._progress = this._progress % (this.duration || this.buffer.duration);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.source.stop();\r\n\t\t\t\tthis.source.onended = null;\r\n\t\t\t\tthis.isPlaying = false;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tstop() {\r\n\t\t\tif (this.hasPlaybackControl === false) {\r\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._progress = 0;\r\n\t\t\tthis.source.stop();\r\n\t\t\tthis.source.onended = null;\r\n\t\t\tthis.isPlaying = false;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconnect() {\r\n\t\t\tif (this.filters.length > 0) {\r\n\t\t\t\tthis.source.connect(this.filters[0]);\r\n\r\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\r\n\t\t\t\t\tthis.filters[i - 1].connect(this.filters[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.filters[this.filters.length - 1].connect(this.getOutput());\r\n\t\t\t} else {\r\n\t\t\t\tthis.source.connect(this.getOutput());\r\n\t\t\t}\r\n\r\n\t\t\tthis._connected = true;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdisconnect() {\r\n\t\t\tif (this.filters.length > 0) {\r\n\t\t\t\tthis.source.disconnect(this.filters[0]);\r\n\r\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\r\n\t\t\t\t\tthis.filters[i - 1].disconnect(this.filters[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.filters[this.filters.length - 1].disconnect(this.getOutput());\r\n\t\t\t} else {\r\n\t\t\t\tthis.source.disconnect(this.getOutput());\r\n\t\t\t}\r\n\r\n\t\t\tthis._connected = false;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetFilters() {\r\n\t\t\treturn this.filters;\r\n\t\t}\r\n\r\n\t\tsetFilters(value) {\r\n\t\t\tif (!value) value = [];\r\n\r\n\t\t\tif (this._connected === true) {\r\n\t\t\t\tthis.disconnect();\r\n\t\t\t\tthis.filters = value.slice();\r\n\t\t\t\tthis.connect();\r\n\t\t\t} else {\r\n\t\t\t\tthis.filters = value.slice();\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetDetune(value) {\r\n\t\t\tthis.detune = value;\r\n\t\t\tif (this.source.detune === undefined) return; // only set detune when available\r\n\r\n\t\t\tif (this.isPlaying === true) {\r\n\t\t\t\tthis.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetDetune() {\r\n\t\t\treturn this.detune;\r\n\t\t}\r\n\r\n\t\tgetFilter() {\r\n\t\t\treturn this.getFilters()[0];\r\n\t\t}\r\n\r\n\t\tsetFilter(filter) {\r\n\t\t\treturn this.setFilters(filter ? [filter] : []);\r\n\t\t}\r\n\r\n\t\tsetPlaybackRate(value) {\r\n\t\t\tif (this.hasPlaybackControl === false) {\r\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.playbackRate = value;\r\n\r\n\t\t\tif (this.isPlaying === true) {\r\n\t\t\t\tthis.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetPlaybackRate() {\r\n\t\t\treturn this.playbackRate;\r\n\t\t}\r\n\r\n\t\tonEnded() {\r\n\t\t\tthis.isPlaying = false;\r\n\t\t}\r\n\r\n\t\tgetLoop() {\r\n\t\t\tif (this.hasPlaybackControl === false) {\r\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.loop;\r\n\t\t}\r\n\r\n\t\tsetLoop(value) {\r\n\t\t\tif (this.hasPlaybackControl === false) {\r\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.loop = value;\r\n\r\n\t\t\tif (this.isPlaying === true) {\r\n\t\t\t\tthis.source.loop = this.loop;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetLoopStart(value) {\r\n\t\t\tthis.loopStart = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetLoopEnd(value) {\r\n\t\t\tthis.loopEnd = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetVolume() {\r\n\t\t\treturn this.gain.gain.value;\r\n\t\t}\r\n\r\n\t\tsetVolume(value) {\r\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _position = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _quaternion = /*@__PURE__*/new Quaternion();\r\n\r\n\tconst _scale = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _orientation = /*@__PURE__*/new Vector3();\r\n\r\n\tclass PositionalAudio extends Audio {\r\n\t\tconstructor(listener) {\r\n\t\t\tsuper(listener);\r\n\t\t\tthis.panner = this.context.createPanner();\r\n\t\t\tthis.panner.panningModel = 'HRTF';\r\n\t\t\tthis.panner.connect(this.gain);\r\n\t\t}\r\n\r\n\t\tgetOutput() {\r\n\t\t\treturn this.panner;\r\n\t\t}\r\n\r\n\t\tgetRefDistance() {\r\n\t\t\treturn this.panner.refDistance;\r\n\t\t}\r\n\r\n\t\tsetRefDistance(value) {\r\n\t\t\tthis.panner.refDistance = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetRolloffFactor() {\r\n\t\t\treturn this.panner.rolloffFactor;\r\n\t\t}\r\n\r\n\t\tsetRolloffFactor(value) {\r\n\t\t\tthis.panner.rolloffFactor = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetDistanceModel() {\r\n\t\t\treturn this.panner.distanceModel;\r\n\t\t}\r\n\r\n\t\tsetDistanceModel(value) {\r\n\t\t\tthis.panner.distanceModel = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetMaxDistance() {\r\n\t\t\treturn this.panner.maxDistance;\r\n\t\t}\r\n\r\n\t\tsetMaxDistance(value) {\r\n\t\t\tthis.panner.maxDistance = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\r\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\r\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\r\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\t\t\tif (this.hasPlaybackControl === true && this.isPlaying === false) return;\r\n\t\t\tthis.matrixWorld.decompose(_position, _quaternion, _scale);\r\n\r\n\t\t\t_orientation.set(0, 0, 1).applyQuaternion(_quaternion);\r\n\r\n\t\t\tconst panner = this.panner;\r\n\r\n\t\t\tif (panner.positionX) {\r\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\r\n\t\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\r\n\t\t\t\tpanner.positionX.linearRampToValueAtTime(_position.x, endTime);\r\n\t\t\t\tpanner.positionY.linearRampToValueAtTime(_position.y, endTime);\r\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime(_position.z, endTime);\r\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\r\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\r\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\r\n\t\t\t} else {\r\n\t\t\t\tpanner.setPosition(_position.x, _position.y, _position.z);\r\n\t\t\t\tpanner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass AudioAnalyser {\r\n\t\tconstructor(audio, fftSize = 2048) {\r\n\t\t\tthis.analyser = audio.context.createAnalyser();\r\n\t\t\tthis.analyser.fftSize = fftSize;\r\n\t\t\tthis.data = new Uint8Array(this.analyser.frequencyBinCount);\r\n\t\t\taudio.getOutput().connect(this.analyser);\r\n\t\t}\r\n\r\n\t\tgetFrequencyData() {\r\n\t\t\tthis.analyser.getByteFrequencyData(this.data);\r\n\t\t\treturn this.data;\r\n\t\t}\r\n\r\n\t\tgetAverageFrequency() {\r\n\t\t\tlet value = 0;\r\n\t\t\tconst data = this.getFrequencyData();\r\n\r\n\t\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\t\tvalue += data[i];\r\n\t\t\t}\r\n\r\n\t\t\treturn value / data.length;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass PropertyMixer {\r\n\t\tconstructor(binding, typeName, valueSize) {\r\n\t\t\tthis.binding = binding;\r\n\t\t\tthis.valueSize = valueSize;\r\n\t\t\tlet mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\r\n\t\t\t//\r\n\t\t\t// interpolators can use .buffer as their .result\r\n\t\t\t// the data then goes to 'incoming'\r\n\t\t\t//\r\n\t\t\t// 'accu0' and 'accu1' are used frame-interleaved for\r\n\t\t\t// the cumulative result and are compared to detect\r\n\t\t\t// changes\r\n\t\t\t//\r\n\t\t\t// 'orig' stores the original state of the property\r\n\t\t\t//\r\n\t\t\t// 'add' is used for additive cumulative results\r\n\t\t\t//\r\n\t\t\t// 'work' is optional and is only present for quaternion types. It is used\r\n\t\t\t// to store intermediate quaternion multiplication results\r\n\r\n\t\t\tswitch (typeName) {\r\n\t\t\t\tcase 'quaternion':\r\n\t\t\t\t\tmixFunction = this._slerp;\r\n\t\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\r\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\r\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 6);\r\n\t\t\t\t\tthis._workIndex = 5;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'string':\r\n\t\t\t\tcase 'bool':\r\n\t\t\t\t\tmixFunction = this._select; // Use the regular mix function and for additive on these types,\r\n\t\t\t\t\t// additive is not relevant for non-numeric types\r\n\r\n\t\t\t\t\tmixFunctionAdditive = this._select;\r\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\r\n\t\t\t\t\tthis.buffer = new Array(valueSize * 5);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tmixFunction = this._lerp;\r\n\t\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\r\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\r\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 5);\r\n\t\t\t}\r\n\r\n\t\t\tthis._mixBufferRegion = mixFunction;\r\n\t\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\r\n\t\t\tthis._setIdentity = setIdentity;\r\n\t\t\tthis._origIndex = 3;\r\n\t\t\tthis._addIndex = 4;\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\t\t\tthis.cumulativeWeightAdditive = 0;\r\n\t\t\tthis.useCount = 0;\r\n\t\t\tthis.referenceCount = 0;\r\n\t\t} // accumulate data in the 'incoming' region into 'accu<i>'\r\n\r\n\r\n\t\taccumulate(accuIndex, weight) {\r\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\r\n\t\t\t// the weight and shouldn't have made the call in the first place\r\n\t\t\tconst buffer = this.buffer,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\toffset = accuIndex * stride + stride;\r\n\t\t\tlet currentWeight = this.cumulativeWeight;\r\n\r\n\t\t\tif (currentWeight === 0) {\r\n\t\t\t\t// accuN := incoming * weight\r\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\t\tbuffer[offset + i] = buffer[i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentWeight = weight;\r\n\t\t\t} else {\r\n\t\t\t\t// accuN := accuN + incoming * weight\r\n\t\t\t\tcurrentWeight += weight;\r\n\t\t\t\tconst mix = weight / currentWeight;\r\n\r\n\t\t\t\tthis._mixBufferRegion(buffer, offset, 0, mix, stride);\r\n\t\t\t}\r\n\r\n\t\t\tthis.cumulativeWeight = currentWeight;\r\n\t\t} // accumulate data in the 'incoming' region into 'add'\r\n\r\n\r\n\t\taccumulateAdditive(weight) {\r\n\t\t\tconst buffer = this.buffer,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\toffset = stride * this._addIndex;\r\n\r\n\t\t\tif (this.cumulativeWeightAdditive === 0) {\r\n\t\t\t\t// add = identity\r\n\t\t\t\tthis._setIdentity();\r\n\t\t\t} // add := add + incoming * weight\r\n\r\n\r\n\t\t\tthis._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\r\n\r\n\t\t\tthis.cumulativeWeightAdditive += weight;\r\n\t\t} // apply the state of 'accu<i>' to the binding when accus differ\r\n\r\n\r\n\t\tapply(accuIndex) {\r\n\t\t\tconst stride = this.valueSize,\r\n\t\t\t\t\t\tbuffer = this.buffer,\r\n\t\t\t\t\t\toffset = accuIndex * stride + stride,\r\n\t\t\t\t\t\tweight = this.cumulativeWeight,\r\n\t\t\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\r\n\t\t\t\t\t\tbinding = this.binding;\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\t\t\tthis.cumulativeWeightAdditive = 0;\r\n\r\n\t\t\tif (weight < 1) {\r\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\r\n\t\t\t\tconst originalValueOffset = stride * this._origIndex;\r\n\r\n\t\t\t\tthis._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\r\n\t\t\t}\r\n\r\n\t\t\tif (weightAdditive > 0) {\r\n\t\t\t\t// accuN := accuN + additive accuN\r\n\t\t\t\tthis._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = stride, e = stride + stride; i !== e; ++i) {\r\n\t\t\t\tif (buffer[i] !== buffer[i + stride]) {\r\n\t\t\t\t\t// value has changed -> update scene graph\r\n\t\t\t\t\tbinding.setValue(buffer, offset);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} // remember the state of the bound property and copy it to both accus\r\n\r\n\r\n\t\tsaveOriginalState() {\r\n\t\t\tconst binding = this.binding;\r\n\t\t\tconst buffer = this.buffer,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\toriginalValueOffset = stride * this._origIndex;\r\n\t\t\tbinding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\r\n\r\n\t\t\tfor (let i = stride, e = originalValueOffset; i !== e; ++i) {\r\n\t\t\t\tbuffer[i] = buffer[originalValueOffset + i % stride];\r\n\t\t\t} // Add to identity for additive\r\n\r\n\r\n\t\t\tthis._setIdentity();\r\n\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\t\t\tthis.cumulativeWeightAdditive = 0;\r\n\t\t} // apply the state previously taken via 'saveOriginalState' to the binding\r\n\r\n\r\n\t\trestoreOriginalState() {\r\n\t\t\tconst originalValueOffset = this.valueSize * 3;\r\n\t\t\tthis.binding.setValue(this.buffer, originalValueOffset);\r\n\t\t}\r\n\r\n\t\t_setAdditiveIdentityNumeric() {\r\n\t\t\tconst startIndex = this._addIndex * this.valueSize;\r\n\t\t\tconst endIndex = startIndex + this.valueSize;\r\n\r\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\tthis.buffer[i] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_setAdditiveIdentityQuaternion() {\r\n\t\t\tthis._setAdditiveIdentityNumeric();\r\n\r\n\t\t\tthis.buffer[this._addIndex * this.valueSize + 3] = 1;\r\n\t\t}\r\n\r\n\t\t_setAdditiveIdentityOther() {\r\n\t\t\tconst startIndex = this._origIndex * this.valueSize;\r\n\t\t\tconst targetIndex = this._addIndex * this.valueSize;\r\n\r\n\t\t\tfor (let i = 0; i < this.valueSize; i++) {\r\n\t\t\t\tthis.buffer[targetIndex + i] = this.buffer[startIndex + i];\r\n\t\t\t}\r\n\t\t} // mix functions\r\n\r\n\r\n\t\t_select(buffer, dstOffset, srcOffset, t, stride) {\r\n\t\t\tif (t >= 0.5) {\r\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\t\tbuffer[dstOffset + i] = buffer[srcOffset + i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_slerp(buffer, dstOffset, srcOffset, t) {\r\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\r\n\t\t}\r\n\r\n\t\t_slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\r\n\t\t\tconst workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\r\n\r\n\t\t\tQuaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\r\n\r\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\r\n\t\t}\r\n\r\n\t\t_lerp(buffer, dstOffset, srcOffset, t, stride) {\r\n\t\t\tconst s = 1 - t;\r\n\r\n\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\tconst j = dstOffset + i;\r\n\t\t\t\tbuffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\r\n\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\tconst j = dstOffset + i;\r\n\t\t\t\tbuffer[j] = buffer[j] + buffer[srcOffset + i] * t;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Characters [].:/ are reserved for track binding syntax.\r\n\tconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\r\n\r\n\tconst _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\r\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\r\n\t// instead, we exclude reserved characters and match everything else.\r\n\r\n\r\n\tconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\r\n\r\n\tconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\r\n\t// be matched to parse the rest of the track name.\r\n\r\n\r\n\tconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\r\n\r\n\r\n\tconst _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\r\n\t// characters. Accessor may contain any character except closing bracket.\r\n\r\n\r\n\tconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\r\n\t// contain any non-bracket characters.\r\n\r\n\r\n\tconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\r\n\r\n\tconst _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\r\n\r\n\tconst _supportedObjectNames = ['material', 'materials', 'bones'];\r\n\r\n\tclass Composite {\r\n\t\tconstructor(targetGroup, path, optionalParsedPath) {\r\n\t\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\r\n\t\t\tthis._targetGroup = targetGroup;\r\n\t\t\tthis._bindings = targetGroup.subscribe_(path, parsedPath);\r\n\t\t}\r\n\r\n\t\tgetValue(array, offset) {\r\n\t\t\tthis.bind(); // bind all binding\r\n\r\n\t\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\r\n\t\t\t\t\t\tbinding = this._bindings[firstValidIndex]; // and only call .getValue on the first\r\n\r\n\t\t\tif (binding !== undefined) binding.getValue(array, offset);\r\n\t\t}\r\n\r\n\t\tsetValue(array, offset) {\r\n\t\t\tconst bindings = this._bindings;\r\n\r\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\r\n\t\t\t\tbindings[i].setValue(array, offset);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbind() {\r\n\t\t\tconst bindings = this._bindings;\r\n\r\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\r\n\t\t\t\tbindings[i].bind();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tunbind() {\r\n\t\t\tconst bindings = this._bindings;\r\n\r\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\r\n\t\t\t\tbindings[i].unbind();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} // Note: This class uses a State pattern on a per-method basis:\r\n\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n\t// prototype version of these methods with one that represents\r\n\t// the bound state. When the property is not found, the methods\r\n\t// become no-ops.\r\n\r\n\r\n\tclass PropertyBinding {\r\n\t\tconstructor(rootNode, path, parsedPath) {\r\n\t\t\tthis.path = path;\r\n\t\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\r\n\t\t\tthis.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\r\n\t\t\tthis.rootNode = rootNode; // initial state of these methods that calls 'bind'\r\n\r\n\t\t\tthis.getValue = this._getValue_unbound;\r\n\t\t\tthis.setValue = this._setValue_unbound;\r\n\t\t}\r\n\r\n\t\tstatic create(root, path, parsedPath) {\r\n\t\t\tif (!(root && root.isAnimationObjectGroup)) {\r\n\t\t\t\treturn new PropertyBinding(root, path, parsedPath);\r\n\t\t\t} else {\r\n\t\t\t\treturn new PropertyBinding.Composite(root, path, parsedPath);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/**\r\n\t\t * Replaces spaces with underscores and removes unsupported characters from\r\n\t\t * node names, to ensure compatibility with parseTrackName().\r\n\t\t *\r\n\t\t * @param {string} name Node name to be sanitized.\r\n\t\t * @return {string}\r\n\t\t */\r\n\r\n\r\n\t\tstatic sanitizeNodeName(name) {\r\n\t\t\treturn name.replace(/\\s/g, '_').replace(_reservedRe, '');\r\n\t\t}\r\n\r\n\t\tstatic parseTrackName(trackName) {\r\n\t\t\tconst matches = _trackRe.exec(trackName);\r\n\r\n\t\t\tif (!matches) {\r\n\t\t\t\tthrow new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\r\n\t\t\t}\r\n\r\n\t\t\tconst results = {\r\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\r\n\t\t\t\tnodeName: matches[2],\r\n\t\t\t\tobjectName: matches[3],\r\n\t\t\t\tobjectIndex: matches[4],\r\n\t\t\t\tpropertyName: matches[5],\r\n\t\t\t\t// required\r\n\t\t\t\tpropertyIndex: matches[6]\r\n\t\t\t};\r\n\t\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\r\n\r\n\t\t\tif (lastDot !== undefined && lastDot !== -1) {\r\n\t\t\t\tconst objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\r\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\r\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\r\n\t\t\t\t// include '.' characters).\r\n\r\n\t\t\t\tif (_supportedObjectNames.indexOf(objectName) !== -1) {\r\n\t\t\t\t\tresults.nodeName = results.nodeName.substring(0, lastDot);\r\n\t\t\t\t\tresults.objectName = objectName;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (results.propertyName === null || results.propertyName.length === 0) {\r\n\t\t\t\tthrow new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\r\n\t\t\t}\r\n\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\tstatic findNode(root, nodeName) {\r\n\t\t\tif (!nodeName || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\r\n\t\t\t\treturn root;\r\n\t\t\t} // search into skeleton bones.\r\n\r\n\r\n\t\t\tif (root.skeleton) {\r\n\t\t\t\tconst bone = root.skeleton.getBoneByName(nodeName);\r\n\r\n\t\t\t\tif (bone !== undefined) {\r\n\t\t\t\t\treturn bone;\r\n\t\t\t\t}\r\n\t\t\t} // search into node subtree.\r\n\r\n\r\n\t\t\tif (root.children) {\r\n\t\t\t\tconst searchNodeSubtree = function (children) {\r\n\t\t\t\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\t\t\t\tconst childNode = children[i];\r\n\r\n\t\t\t\t\t\tif (childNode.name === nodeName || childNode.uuid === nodeName) {\r\n\t\t\t\t\t\t\treturn childNode;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst result = searchNodeSubtree(childNode.children);\r\n\t\t\t\t\t\tif (result) return result;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst subTreeNode = searchNodeSubtree(root.children);\r\n\r\n\t\t\t\tif (subTreeNode) {\r\n\t\t\t\t\treturn subTreeNode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t} // these are used to \"bind\" a nonexistent property\r\n\r\n\r\n\t\t_getValue_unavailable() {}\r\n\r\n\t\t_setValue_unavailable() {} // Getters\r\n\r\n\r\n\t\t_getValue_direct(buffer, offset) {\r\n\t\t\tbuffer[offset] = this.targetObject[this.propertyName];\r\n\t\t}\r\n\r\n\t\t_getValue_array(buffer, offset) {\r\n\t\t\tconst source = this.resolvedProperty;\r\n\r\n\t\t\tfor (let i = 0, n = source.length; i !== n; ++i) {\r\n\t\t\t\tbuffer[offset++] = source[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_getValue_arrayElement(buffer, offset) {\r\n\t\t\tbuffer[offset] = this.resolvedProperty[this.propertyIndex];\r\n\t\t}\r\n\r\n\t\t_getValue_toArray(buffer, offset) {\r\n\t\t\tthis.resolvedProperty.toArray(buffer, offset);\r\n\t\t} // Direct\r\n\r\n\r\n\t\t_setValue_direct(buffer, offset) {\r\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\r\n\t\t}\r\n\r\n\t\t_setValue_direct_setNeedsUpdate(buffer, offset) {\r\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\r\n\t\t\tthis.targetObject.needsUpdate = true;\r\n\t\t}\r\n\r\n\t\t_setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\r\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\r\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\t\t} // EntireArray\r\n\r\n\r\n\t\t_setValue_array(buffer, offset) {\r\n\t\t\tconst dest = this.resolvedProperty;\r\n\r\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\r\n\t\t\t\tdest[i] = buffer[offset++];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_setValue_array_setNeedsUpdate(buffer, offset) {\r\n\t\t\tconst dest = this.resolvedProperty;\r\n\r\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\r\n\t\t\t\tdest[i] = buffer[offset++];\r\n\t\t\t}\r\n\r\n\t\t\tthis.targetObject.needsUpdate = true;\r\n\t\t}\r\n\r\n\t\t_setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\r\n\t\t\tconst dest = this.resolvedProperty;\r\n\r\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\r\n\t\t\t\tdest[i] = buffer[offset++];\r\n\t\t\t}\r\n\r\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\t\t} // ArrayElement\r\n\r\n\r\n\t\t_setValue_arrayElement(buffer, offset) {\r\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\r\n\t\t}\r\n\r\n\t\t_setValue_arrayElement_setNeedsUpdate(buffer, offset) {\r\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\r\n\t\t\tthis.targetObject.needsUpdate = true;\r\n\t\t}\r\n\r\n\t\t_setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\r\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\r\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\t\t} // HasToFromArray\r\n\r\n\r\n\t\t_setValue_fromArray(buffer, offset) {\r\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\r\n\t\t}\r\n\r\n\t\t_setValue_fromArray_setNeedsUpdate(buffer, offset) {\r\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\r\n\t\t\tthis.targetObject.needsUpdate = true;\r\n\t\t}\r\n\r\n\t\t_setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\r\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\r\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\t\t}\r\n\r\n\t\t_getValue_unbound(targetArray, offset) {\r\n\t\t\tthis.bind();\r\n\t\t\tthis.getValue(targetArray, offset);\r\n\t\t}\r\n\r\n\t\t_setValue_unbound(sourceArray, offset) {\r\n\t\t\tthis.bind();\r\n\t\t\tthis.setValue(sourceArray, offset);\r\n\t\t} // create getter / setter pair for a property in the scene graph\r\n\r\n\r\n\t\tbind() {\r\n\t\t\tlet targetObject = this.node;\r\n\t\t\tconst parsedPath = this.parsedPath;\r\n\t\t\tconst objectName = parsedPath.objectName;\r\n\t\t\tconst propertyName = parsedPath.propertyName;\r\n\t\t\tlet propertyIndex = parsedPath.propertyIndex;\r\n\r\n\t\t\tif (!targetObject) {\r\n\t\t\t\ttargetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\r\n\t\t\t\tthis.node = targetObject;\r\n\t\t\t} // set fail state so we can just 'return' on error\r\n\r\n\r\n\t\t\tthis.getValue = this._getValue_unavailable;\r\n\t\t\tthis.setValue = this._setValue_unavailable; // ensure there is a value node\r\n\r\n\t\t\tif (!targetObject) {\r\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (objectName) {\r\n\t\t\t\tlet objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\r\n\t\t\t\tswitch (objectName) {\r\n\t\t\t\t\tcase 'materials':\r\n\t\t\t\t\t\tif (!targetObject.material) {\r\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!targetObject.material.materials) {\r\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'bones':\r\n\t\t\t\t\t\tif (!targetObject.skeleton) {\r\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t} // potential future optimization: skip this if propertyIndex is already an integer\r\n\t\t\t\t\t\t// and convert the integer string to a true integer.\r\n\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < targetObject.length; i++) {\r\n\t\t\t\t\t\t\tif (targetObject[i].name === objectIndex) {\r\n\t\t\t\t\t\t\t\tobjectIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif (targetObject[objectName] === undefined) {\r\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject[objectName];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (objectIndex !== undefined) {\r\n\t\t\t\t\tif (targetObject[objectIndex] === undefined) {\r\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject[objectIndex];\r\n\t\t\t\t}\r\n\t\t\t} // resolve property\r\n\r\n\r\n\t\t\tconst nodeProperty = targetObject[propertyName];\r\n\r\n\t\t\tif (nodeProperty === undefined) {\r\n\t\t\t\tconst nodeName = parsedPath.nodeName;\r\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\r\n\t\t\t\treturn;\r\n\t\t\t} // determine versioning scheme\r\n\r\n\r\n\t\t\tlet versioning = this.Versioning.None;\r\n\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t\tif (targetObject.needsUpdate !== undefined) {\r\n\t\t\t\t// material\r\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\r\n\t\t\t} else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\r\n\t\t\t\t// node transform\r\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n\t\t\t} // determine how the property gets bound\r\n\r\n\r\n\t\t\tlet bindingType = this.BindingType.Direct;\r\n\r\n\t\t\tif (propertyIndex !== undefined) {\r\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\t\t\t\tif (propertyName === 'morphTargetInfluences') {\r\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tif (!targetObject.geometry) {\r\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (targetObject.geometry.isBufferGeometry) {\r\n\t\t\t\t\t\tif (!targetObject.geometry.morphAttributes) {\r\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\r\n\t\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[propertyIndex];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\t\tthis.propertyIndex = propertyIndex;\r\n\t\t\t} else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\r\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\t} else if (Array.isArray(nodeProperty)) {\r\n\t\t\t\tbindingType = this.BindingType.EntireArray;\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\t} else {\r\n\t\t\t\tthis.propertyName = propertyName;\r\n\t\t\t} // select getter / setter\r\n\r\n\r\n\t\t\tthis.getValue = this.GetterByBindingType[bindingType];\r\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\r\n\t\t}\r\n\r\n\t\tunbind() {\r\n\t\t\tthis.node = null; // back to the prototype version of getValue / setValue\r\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\r\n\r\n\t\t\tthis.getValue = this._getValue_unbound;\r\n\t\t\tthis.setValue = this._setValue_unbound;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPropertyBinding.Composite = Composite;\r\n\tPropertyBinding.prototype.BindingType = {\r\n\t\tDirect: 0,\r\n\t\tEntireArray: 1,\r\n\t\tArrayElement: 2,\r\n\t\tHasFromToArray: 3\r\n\t};\r\n\tPropertyBinding.prototype.Versioning = {\r\n\t\tNone: 0,\r\n\t\tNeedsUpdate: 1,\r\n\t\tMatrixWorldNeedsUpdate: 2\r\n\t};\r\n\tPropertyBinding.prototype.GetterByBindingType = [PropertyBinding.prototype._getValue_direct, PropertyBinding.prototype._getValue_array, PropertyBinding.prototype._getValue_arrayElement, PropertyBinding.prototype._getValue_toArray];\r\n\tPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [[// Direct\r\n\tPropertyBinding.prototype._setValue_direct, PropertyBinding.prototype._setValue_direct_setNeedsUpdate, PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate], [// EntireArray\r\n\tPropertyBinding.prototype._setValue_array, PropertyBinding.prototype._setValue_array_setNeedsUpdate, PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate], [// ArrayElement\r\n\tPropertyBinding.prototype._setValue_arrayElement, PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate, PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate], [// HasToFromArray\r\n\tPropertyBinding.prototype._setValue_fromArray, PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate, PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];\r\n\r\n\t/**\r\n\t *\r\n\t * A group of objects that receives a shared animation state.\r\n\t *\r\n\t * Usage:\r\n\t *\r\n\t *\t- Add objects you would otherwise pass as 'root' to the\r\n\t *\t\tconstructor or the .clipAction method of AnimationMixer.\r\n\t *\r\n\t *\t- Instead pass this object as 'root'.\r\n\t *\r\n\t *\t- You can also add and remove objects later when the mixer\r\n\t *\t\tis running.\r\n\t *\r\n\t * Note:\r\n\t *\r\n\t *\t\tObjects of this class appear as one object to the mixer,\r\n\t *\t\tso cache control of the individual objects must be done\r\n\t *\t\ton the group.\r\n\t *\r\n\t * Limitation:\r\n\t *\r\n\t *\t- The animated properties must be compatible among the\r\n\t *\t\tall objects in the group.\r\n\t *\r\n\t *\t- A single property can either be controlled through a\r\n\t *\t\ttarget group or directly, but not both.\r\n\t */\r\n\r\n\tclass AnimationObjectGroup {\r\n\t\tconstructor() {\r\n\t\t\tthis.uuid = generateUUID(); // cached objects followed by the active ones\r\n\r\n\t\t\tthis._objects = Array.prototype.slice.call(arguments);\r\n\t\t\tthis.nCachedObjects_ = 0; // threshold\r\n\t\t\t// note: read by PropertyBinding.Composite\r\n\r\n\t\t\tconst indices = {};\r\n\t\t\tthis._indicesByUUID = indices; // for bookkeeping\r\n\r\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\r\n\t\t\t\tindices[arguments[i].uuid] = i;\r\n\t\t\t}\r\n\r\n\t\t\tthis._paths = []; // inside: string\r\n\r\n\t\t\tthis._parsedPaths = []; // inside: { we don't care, here }\r\n\r\n\t\t\tthis._bindings = []; // inside: Array< PropertyBinding >\r\n\r\n\t\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\r\n\r\n\t\t\tconst scope = this;\r\n\t\t\tthis.stats = {\r\n\t\t\t\tobjects: {\r\n\t\t\t\t\tget total() {\r\n\t\t\t\t\t\treturn scope._objects.length;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tget inUse() {\r\n\t\t\t\t\t\treturn this.total - scope.nCachedObjects_;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tget bindingsPerObject() {\r\n\t\t\t\t\treturn scope._bindings.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tadd() {\r\n\t\t\tconst objects = this._objects,\r\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\t\t\tpaths = this._paths,\r\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\t\t\tbindings = this._bindings,\r\n\t\t\t\t\t\tnBindings = bindings.length;\r\n\t\t\tlet knownObject = undefined,\r\n\t\t\t\t\tnObjects = objects.length,\r\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_;\r\n\r\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\r\n\t\t\t\tconst object = arguments[i],\r\n\t\t\t\t\t\t\tuuid = object.uuid;\r\n\t\t\t\tlet index = indicesByUUID[uuid];\r\n\r\n\t\t\t\tif (index === undefined) {\r\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\r\n\t\t\t\t\tindex = nObjects++;\r\n\t\t\t\t\tindicesByUUID[uuid] = index;\r\n\t\t\t\t\tobjects.push(object); // accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\r\n\t\t\t\t\t\tbindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (index < nCachedObjects) {\r\n\t\t\t\t\tknownObject = objects[index]; // move existing object to the ACTIVE region\r\n\r\n\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\r\n\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex];\r\n\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\r\n\t\t\t\t\tobjects[index] = lastCachedObject;\r\n\t\t\t\t\tindicesByUUID[uuid] = firstActiveIndex;\r\n\t\t\t\t\tobjects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\r\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\r\n\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex];\r\n\t\t\t\t\t\tlet binding = bindingsForPath[index];\r\n\t\t\t\t\t\tbindingsForPath[index] = lastCached;\r\n\r\n\t\t\t\t\t\tif (binding === undefined) {\r\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\r\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\r\n\t\t\t\t\t\t\t// or may not exist\r\n\t\t\t\t\t\t\tbinding = new PropertyBinding(object, paths[j], parsedPaths[j]);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = binding;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (objects[index] !== knownObject) {\r\n\t\t\t\t\tconsole.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\r\n\t\t\t\t} // else the object is already where we want it to be\r\n\r\n\t\t\t} // for arguments\r\n\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\t\t}\r\n\r\n\t\tremove() {\r\n\t\t\tconst objects = this._objects,\r\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\t\t\tbindings = this._bindings,\r\n\t\t\t\t\t\tnBindings = bindings.length;\r\n\t\t\tlet nCachedObjects = this.nCachedObjects_;\r\n\r\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\r\n\t\t\t\tconst object = arguments[i],\r\n\t\t\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\r\n\r\n\t\t\t\tif (index !== undefined && index >= nCachedObjects) {\r\n\t\t\t\t\t// move existing object into the CACHED region\r\n\t\t\t\t\tconst lastCachedIndex = nCachedObjects++,\r\n\t\t\t\t\t\t\t\tfirstActiveObject = objects[lastCachedIndex];\r\n\t\t\t\t\tindicesByUUID[firstActiveObject.uuid] = index;\r\n\t\t\t\t\tobjects[index] = firstActiveObject;\r\n\t\t\t\t\tindicesByUUID[uuid] = lastCachedIndex;\r\n\t\t\t\t\tobjects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\r\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\r\n\t\t\t\t\t\t\t\t\tfirstActive = bindingsForPath[lastCachedIndex],\r\n\t\t\t\t\t\t\t\t\tbinding = bindingsForPath[index];\r\n\t\t\t\t\t\tbindingsForPath[index] = firstActive;\r\n\t\t\t\t\t\tbindingsForPath[lastCachedIndex] = binding;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} // for arguments\r\n\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\t\t} // remove & forget\r\n\r\n\r\n\t\tuncache() {\r\n\t\t\tconst objects = this._objects,\r\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\t\t\tbindings = this._bindings,\r\n\t\t\t\t\t\tnBindings = bindings.length;\r\n\t\t\tlet nCachedObjects = this.nCachedObjects_,\r\n\t\t\t\t\tnObjects = objects.length;\r\n\r\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\r\n\t\t\t\tconst object = arguments[i],\r\n\t\t\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\r\n\r\n\t\t\t\tif (index !== undefined) {\r\n\t\t\t\t\tdelete indicesByUUID[uuid];\r\n\r\n\t\t\t\t\tif (index < nCachedObjects) {\r\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\r\n\t\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\r\n\t\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex],\r\n\t\t\t\t\t\t\t\t\tlastIndex = --nObjects,\r\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex]; // last cached object takes this object's place\r\n\r\n\t\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\r\n\t\t\t\t\t\tobjects[index] = lastCachedObject; // last object goes to the activated slot and pop\r\n\r\n\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = firstActiveIndex;\r\n\t\t\t\t\t\tobjects[firstActiveIndex] = lastObject;\r\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\r\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j],\r\n\t\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex],\r\n\t\t\t\t\t\t\t\t\t\tlast = bindingsForPath[lastIndex];\r\n\t\t\t\t\t\t\tbindingsForPath[index] = lastCached;\r\n\t\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = last;\r\n\t\t\t\t\t\t\tbindingsForPath.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// object is active, just swap with the last and pop\r\n\t\t\t\t\t\tconst lastIndex = --nObjects,\r\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex];\r\n\r\n\t\t\t\t\t\tif (lastIndex > 0) {\r\n\t\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = index;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tobjects[index] = lastObject;\r\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\r\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j];\r\n\t\t\t\t\t\t\tbindingsForPath[index] = bindingsForPath[lastIndex];\r\n\t\t\t\t\t\t\tbindingsForPath.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} // cached or active\r\n\r\n\t\t\t\t} // if object is known\r\n\r\n\t\t\t} // for arguments\r\n\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\t\t} // Internal interface used by befriended PropertyBinding.Composite:\r\n\r\n\r\n\t\tsubscribe_(path, parsedPath) {\r\n\t\t\t// returns an array of bindings for the given path that is changed\r\n\t\t\t// according to the contained objects in the group\r\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath;\r\n\t\t\tlet index = indicesByPath[path];\r\n\t\t\tconst bindings = this._bindings;\r\n\t\t\tif (index !== undefined) return bindings[index];\r\n\t\t\tconst paths = this._paths,\r\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\t\t\tobjects = this._objects,\r\n\t\t\t\t\t\tnObjects = objects.length,\r\n\t\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\t\t\tbindingsForPath = new Array(nObjects);\r\n\t\t\tindex = bindings.length;\r\n\t\t\tindicesByPath[path] = index;\r\n\t\t\tpaths.push(path);\r\n\t\t\tparsedPaths.push(parsedPath);\r\n\t\t\tbindings.push(bindingsForPath);\r\n\r\n\t\t\tfor (let i = nCachedObjects, n = objects.length; i !== n; ++i) {\r\n\t\t\t\tconst object = objects[i];\r\n\t\t\t\tbindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\r\n\t\t\t}\r\n\r\n\t\t\treturn bindingsForPath;\r\n\t\t}\r\n\r\n\t\tunsubscribe_(path) {\r\n\t\t\t// tells the group to forget about a property path and no longer\r\n\t\t\t// update the array previously obtained with 'subscribe_'\r\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\t\t\t\tindex = indicesByPath[path];\r\n\r\n\t\t\tif (index !== undefined) {\r\n\t\t\t\tconst paths = this._paths,\r\n\t\t\t\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\t\t\t\tbindings = this._bindings,\r\n\t\t\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\r\n\t\t\t\t\t\t\tlastBindings = bindings[lastBindingsIndex],\r\n\t\t\t\t\t\t\tlastBindingsPath = path[lastBindingsIndex];\r\n\t\t\t\tindicesByPath[lastBindingsPath] = index;\r\n\t\t\t\tbindings[index] = lastBindings;\r\n\t\t\t\tbindings.pop();\r\n\t\t\t\tparsedPaths[index] = parsedPaths[lastBindingsIndex];\r\n\t\t\t\tparsedPaths.pop();\r\n\t\t\t\tpaths[index] = paths[lastBindingsIndex];\r\n\t\t\t\tpaths.pop();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\r\n\r\n\tclass AnimationAction {\r\n\t\tconstructor(mixer, clip, localRoot = null, blendMode = clip.blendMode) {\r\n\t\t\tthis._mixer = mixer;\r\n\t\t\tthis._clip = clip;\r\n\t\t\tthis._localRoot = localRoot;\r\n\t\t\tthis.blendMode = blendMode;\r\n\t\t\tconst tracks = clip.tracks,\r\n\t\t\t\t\t\tnTracks = tracks.length,\r\n\t\t\t\t\t\tinterpolants = new Array(nTracks);\r\n\t\t\tconst interpolantSettings = {\r\n\t\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\t\tendingEnd: ZeroCurvatureEnding\r\n\t\t\t};\r\n\r\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\r\n\t\t\t\tconst interpolant = tracks[i].createInterpolant(null);\r\n\t\t\t\tinterpolants[i] = interpolant;\r\n\t\t\t\tinterpolant.settings = interpolantSettings;\r\n\t\t\t}\r\n\r\n\t\t\tthis._interpolantSettings = interpolantSettings;\r\n\t\t\tthis._interpolants = interpolants; // bound by the mixer\r\n\t\t\t// inside: PropertyMixer (managed by the mixer)\r\n\r\n\t\t\tthis._propertyBindings = new Array(nTracks);\r\n\t\t\tthis._cacheIndex = null; // for the memory manager\r\n\r\n\t\t\tthis._byClipCacheIndex = null; // for the memory manager\r\n\r\n\t\t\tthis._timeScaleInterpolant = null;\r\n\t\t\tthis._weightInterpolant = null;\r\n\t\t\tthis.loop = LoopRepeat;\r\n\t\t\tthis._loopCount = -1; // global mixer time when the action is to be started\r\n\t\t\t// it's set back to 'null' upon start of the action\r\n\r\n\t\t\tthis._startTime = null; // scaled local time of the action\r\n\t\t\t// gets clamped or wrapped to 0..clip.duration according to loop\r\n\r\n\t\t\tthis.time = 0;\r\n\t\t\tthis.timeScale = 1;\r\n\t\t\tthis._effectiveTimeScale = 1;\r\n\t\t\tthis.weight = 1;\r\n\t\t\tthis._effectiveWeight = 1;\r\n\t\t\tthis.repetitions = Infinity; // no. of repetitions when looping\r\n\r\n\t\t\tthis.paused = false; // true -> zero effective time scale\r\n\r\n\t\t\tthis.enabled = true; // false -> zero effective weight\r\n\r\n\t\t\tthis.clampWhenFinished = false; // keep feeding the last frame?\r\n\r\n\t\t\tthis.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\r\n\r\n\t\t\tthis.zeroSlopeAtEnd = true; // clips for start, loop and end\r\n\t\t} // State & Scheduling\r\n\r\n\r\n\t\tplay() {\r\n\t\t\tthis._mixer._activateAction(this);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tstop() {\r\n\t\t\tthis._mixer._deactivateAction(this);\r\n\r\n\t\t\treturn this.reset();\r\n\t\t}\r\n\r\n\t\treset() {\r\n\t\t\tthis.paused = false;\r\n\t\t\tthis.enabled = true;\r\n\t\t\tthis.time = 0; // restart clip\r\n\r\n\t\t\tthis._loopCount = -1; // forget previous loops\r\n\r\n\t\t\tthis._startTime = null; // forget scheduling\r\n\r\n\t\t\treturn this.stopFading().stopWarping();\r\n\t\t}\r\n\r\n\t\tisRunning() {\r\n\t\t\treturn this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\r\n\t\t} // return true when play has been called\r\n\r\n\r\n\t\tisScheduled() {\r\n\t\t\treturn this._mixer._isActiveAction(this);\r\n\t\t}\r\n\r\n\t\tstartAt(time) {\r\n\t\t\tthis._startTime = time;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetLoop(mode, repetitions) {\r\n\t\t\tthis.loop = mode;\r\n\t\t\tthis.repetitions = repetitions;\r\n\t\t\treturn this;\r\n\t\t} // Weight\r\n\t\t// set the weight stopping any scheduled fading\r\n\t\t// although .enabled = false yields an effective weight of zero, this\r\n\t\t// method does *not* change .enabled, because it would be confusing\r\n\r\n\r\n\t\tsetEffectiveWeight(weight) {\r\n\t\t\tthis.weight = weight; // note: same logic as when updated at runtime\r\n\r\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\r\n\t\t\treturn this.stopFading();\r\n\t\t} // return the weight considering fading and .enabled\r\n\r\n\r\n\t\tgetEffectiveWeight() {\r\n\t\t\treturn this._effectiveWeight;\r\n\t\t}\r\n\r\n\t\tfadeIn(duration) {\r\n\t\t\treturn this._scheduleFading(duration, 0, 1);\r\n\t\t}\r\n\r\n\t\tfadeOut(duration) {\r\n\t\t\treturn this._scheduleFading(duration, 1, 0);\r\n\t\t}\r\n\r\n\t\tcrossFadeFrom(fadeOutAction, duration, warp) {\r\n\t\t\tfadeOutAction.fadeOut(duration);\r\n\t\t\tthis.fadeIn(duration);\r\n\r\n\t\t\tif (warp) {\r\n\t\t\t\tconst fadeInDuration = this._clip.duration,\r\n\t\t\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\r\n\t\t\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\r\n\t\t\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\r\n\t\t\t\tfadeOutAction.warp(1.0, startEndRatio, duration);\r\n\t\t\t\tthis.warp(endStartRatio, 1.0, duration);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcrossFadeTo(fadeInAction, duration, warp) {\r\n\t\t\treturn fadeInAction.crossFadeFrom(this, duration, warp);\r\n\t\t}\r\n\r\n\t\tstopFading() {\r\n\t\t\tconst weightInterpolant = this._weightInterpolant;\r\n\r\n\t\t\tif (weightInterpolant !== null) {\r\n\t\t\t\tthis._weightInterpolant = null;\r\n\r\n\t\t\t\tthis._mixer._takeBackControlInterpolant(weightInterpolant);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // Time Scale Control\r\n\t\t// set the time scale stopping any scheduled warping\r\n\t\t// although .paused = true yields an effective time scale of zero, this\r\n\t\t// method does *not* change .paused, because it would be confusing\r\n\r\n\r\n\t\tsetEffectiveTimeScale(timeScale) {\r\n\t\t\tthis.timeScale = timeScale;\r\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\r\n\t\t\treturn this.stopWarping();\r\n\t\t} // return the time scale considering warping and .paused\r\n\r\n\r\n\t\tgetEffectiveTimeScale() {\r\n\t\t\treturn this._effectiveTimeScale;\r\n\t\t}\r\n\r\n\t\tsetDuration(duration) {\r\n\t\t\tthis.timeScale = this._clip.duration / duration;\r\n\t\t\treturn this.stopWarping();\r\n\t\t}\r\n\r\n\t\tsyncWith(action) {\r\n\t\t\tthis.time = action.time;\r\n\t\t\tthis.timeScale = action.timeScale;\r\n\t\t\treturn this.stopWarping();\r\n\t\t}\r\n\r\n\t\thalt(duration) {\r\n\t\t\treturn this.warp(this._effectiveTimeScale, 0, duration);\r\n\t\t}\r\n\r\n\t\twarp(startTimeScale, endTimeScale, duration) {\r\n\t\t\tconst mixer = this._mixer,\r\n\t\t\t\t\t\tnow = mixer.time,\r\n\t\t\t\t\t\ttimeScale = this.timeScale;\r\n\t\t\tlet interpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\tif (interpolant === null) {\r\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\r\n\t\t\t}\r\n\r\n\t\t\tconst times = interpolant.parameterPositions,\r\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\r\n\t\t\ttimes[0] = now;\r\n\t\t\ttimes[1] = now + duration;\r\n\t\t\tvalues[0] = startTimeScale / timeScale;\r\n\t\t\tvalues[1] = endTimeScale / timeScale;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tstopWarping() {\r\n\t\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\tif (timeScaleInterpolant !== null) {\r\n\t\t\t\tthis._timeScaleInterpolant = null;\r\n\r\n\t\t\t\tthis._mixer._takeBackControlInterpolant(timeScaleInterpolant);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // Object Accessors\r\n\r\n\r\n\t\tgetMixer() {\r\n\t\t\treturn this._mixer;\r\n\t\t}\r\n\r\n\t\tgetClip() {\r\n\t\t\treturn this._clip;\r\n\t\t}\r\n\r\n\t\tgetRoot() {\r\n\t\t\treturn this._localRoot || this._mixer._root;\r\n\t\t} // Interna\r\n\r\n\r\n\t\t_update(time, deltaTime, timeDirection, accuIndex) {\r\n\t\t\t// called by the mixer\r\n\t\t\tif (!this.enabled) {\r\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\r\n\t\t\t\tthis._updateWeight(time);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst startTime = this._startTime;\r\n\r\n\t\t\tif (startTime !== null) {\r\n\t\t\t\t// check for scheduled start of action\r\n\t\t\t\tconst timeRunning = (time - startTime) * timeDirection;\r\n\r\n\t\t\t\tif (timeRunning < 0 || timeDirection === 0) {\r\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\r\n\t\t\t\t} // start\r\n\r\n\r\n\t\t\t\tthis._startTime = null; // unschedule\r\n\r\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\r\n\t\t\t} // apply time scale and advance time\r\n\r\n\r\n\t\t\tdeltaTime *= this._updateTimeScale(time);\r\n\r\n\t\t\tconst clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\r\n\t\t\t// an effective weight of 0\r\n\r\n\r\n\t\t\tconst weight = this._updateWeight(time);\r\n\r\n\t\t\tif (weight > 0) {\r\n\t\t\t\tconst interpolants = this._interpolants;\r\n\t\t\t\tconst propertyMixers = this._propertyBindings;\r\n\r\n\t\t\t\tswitch (this.blendMode) {\r\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\r\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\r\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\r\n\t\t\t\t\t\t\tpropertyMixers[j].accumulateAdditive(weight);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase NormalAnimationBlendMode:\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\r\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\r\n\t\t\t\t\t\t\tpropertyMixers[j].accumulate(accuIndex, weight);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_updateWeight(time) {\r\n\t\t\tlet weight = 0;\r\n\r\n\t\t\tif (this.enabled) {\r\n\t\t\t\tweight = this.weight;\r\n\t\t\t\tconst interpolant = this._weightInterpolant;\r\n\r\n\t\t\t\tif (interpolant !== null) {\r\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\r\n\t\t\t\t\tweight *= interpolantValue;\r\n\r\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\r\n\t\t\t\t\t\tthis.stopFading();\r\n\r\n\t\t\t\t\t\tif (interpolantValue === 0) {\r\n\t\t\t\t\t\t\t// faded out, disable\r\n\t\t\t\t\t\t\tthis.enabled = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._effectiveWeight = weight;\r\n\t\t\treturn weight;\r\n\t\t}\r\n\r\n\t\t_updateTimeScale(time) {\r\n\t\t\tlet timeScale = 0;\r\n\r\n\t\t\tif (!this.paused) {\r\n\t\t\t\ttimeScale = this.timeScale;\r\n\t\t\t\tconst interpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\t\tif (interpolant !== null) {\r\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\r\n\t\t\t\t\ttimeScale *= interpolantValue;\r\n\r\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\r\n\t\t\t\t\t\tthis.stopWarping();\r\n\r\n\t\t\t\t\t\tif (timeScale === 0) {\r\n\t\t\t\t\t\t\t// motion has halted, pause\r\n\t\t\t\t\t\t\tthis.paused = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// warp done - apply final time scale\r\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._effectiveTimeScale = timeScale;\r\n\t\t\treturn timeScale;\r\n\t\t}\r\n\r\n\t\t_updateTime(deltaTime) {\r\n\t\t\tconst duration = this._clip.duration;\r\n\t\t\tconst loop = this.loop;\r\n\t\t\tlet time = this.time + deltaTime;\r\n\t\t\tlet loopCount = this._loopCount;\r\n\t\t\tconst pingPong = loop === LoopPingPong;\r\n\r\n\t\t\tif (deltaTime === 0) {\r\n\t\t\t\tif (loopCount === -1) return time;\r\n\t\t\t\treturn pingPong && (loopCount & 1) === 1 ? duration - time : time;\r\n\t\t\t}\r\n\r\n\t\t\tif (loop === LoopOnce) {\r\n\t\t\t\tif (loopCount === -1) {\r\n\t\t\t\t\t// just started\r\n\t\t\t\t\tthis._loopCount = 0;\r\n\r\n\t\t\t\t\tthis._setEndings(true, true, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\thandle_stop: {\r\n\t\t\t\t\tif (time >= duration) {\r\n\t\t\t\t\t\ttime = duration;\r\n\t\t\t\t\t} else if (time < 0) {\r\n\t\t\t\t\t\ttime = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.time = time;\r\n\t\t\t\t\t\tbreak handle_stop;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\r\n\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'finished',\r\n\t\t\t\t\t\taction: this,\r\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// repetitive Repeat or PingPong\r\n\t\t\t\tif (loopCount === -1) {\r\n\t\t\t\t\t// just started\r\n\t\t\t\t\tif (deltaTime >= 0) {\r\n\t\t\t\t\t\tloopCount = 0;\r\n\r\n\t\t\t\t\t\tthis._setEndings(true, this.repetitions === 0, pingPong);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// when looping in reverse direction, the initial\r\n\t\t\t\t\t\t// transition through zero counts as a repetition,\r\n\t\t\t\t\t\t// so leave loopCount at -1\r\n\t\t\t\t\t\tthis._setEndings(this.repetitions === 0, true, pingPong);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (time >= duration || time < 0) {\r\n\t\t\t\t\t// wrap around\r\n\t\t\t\t\tconst loopDelta = Math.floor(time / duration); // signed\r\n\r\n\t\t\t\t\ttime -= duration * loopDelta;\r\n\t\t\t\t\tloopCount += Math.abs(loopDelta);\r\n\t\t\t\t\tconst pending = this.repetitions - loopCount;\r\n\r\n\t\t\t\t\tif (pending <= 0) {\r\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\r\n\t\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\r\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\r\n\t\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\r\n\t\t\t\t\t\t\ttype: 'finished',\r\n\t\t\t\t\t\t\taction: this,\r\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// keep running\r\n\t\t\t\t\t\tif (pending === 1) {\r\n\t\t\t\t\t\t\t// entering the last round\r\n\t\t\t\t\t\t\tconst atStart = deltaTime < 0;\r\n\r\n\t\t\t\t\t\t\tthis._setEndings(atStart, !atStart, pingPong);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._setEndings(false, false, pingPong);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._loopCount = loopCount;\r\n\t\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\r\n\t\t\t\t\t\t\ttype: 'loop',\r\n\t\t\t\t\t\t\taction: this,\r\n\t\t\t\t\t\t\tloopDelta: loopDelta\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.time = time;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (pingPong && (loopCount & 1) === 1) {\r\n\t\t\t\t\t// invert time for the \"pong round\"\r\n\t\t\t\t\treturn duration - time;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn time;\r\n\t\t}\r\n\r\n\t\t_setEndings(atStart, atEnd, pingPong) {\r\n\t\t\tconst settings = this._interpolantSettings;\r\n\r\n\t\t\tif (pingPong) {\r\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\r\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\r\n\t\t\t} else {\r\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\r\n\t\t\t\tif (atStart) {\r\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (atEnd) {\r\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsettings.endingEnd = WrapAroundEnding;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_scheduleFading(duration, weightNow, weightThen) {\r\n\t\t\tconst mixer = this._mixer,\r\n\t\t\t\t\t\tnow = mixer.time;\r\n\t\t\tlet interpolant = this._weightInterpolant;\r\n\r\n\t\t\tif (interpolant === null) {\r\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\t\tthis._weightInterpolant = interpolant;\r\n\t\t\t}\r\n\r\n\t\t\tconst times = interpolant.parameterPositions,\r\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\r\n\t\t\ttimes[0] = now;\r\n\t\t\tvalues[0] = weightNow;\r\n\t\t\ttimes[1] = now + duration;\r\n\t\t\tvalues[1] = weightThen;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass AnimationMixer extends EventDispatcher {\r\n\t\tconstructor(root) {\r\n\t\t\tsuper();\r\n\t\t\tthis._root = root;\r\n\r\n\t\t\tthis._initMemoryManager();\r\n\r\n\t\t\tthis._accuIndex = 0;\r\n\t\t\tthis.time = 0;\r\n\t\t\tthis.timeScale = 1.0;\r\n\t\t}\r\n\r\n\t\t_bindAction(action, prototypeAction) {\r\n\t\t\tconst root = action._localRoot || this._root,\r\n\t\t\t\t\t\ttracks = action._clip.tracks,\r\n\t\t\t\t\t\tnTracks = tracks.length,\r\n\t\t\t\t\t\tbindings = action._propertyBindings,\r\n\t\t\t\t\t\tinterpolants = action._interpolants,\r\n\t\t\t\t\t\trootUuid = root.uuid,\r\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\r\n\t\t\tlet bindingsByName = bindingsByRoot[rootUuid];\r\n\r\n\t\t\tif (bindingsByName === undefined) {\r\n\t\t\t\tbindingsByName = {};\r\n\t\t\t\tbindingsByRoot[rootUuid] = bindingsByName;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\r\n\t\t\t\tconst track = tracks[i],\r\n\t\t\t\t\t\t\ttrackName = track.name;\r\n\t\t\t\tlet binding = bindingsByName[trackName];\r\n\r\n\t\t\t\tif (binding !== undefined) {\r\n\t\t\t\t\tbindings[i] = binding;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbinding = bindings[i];\r\n\r\n\t\t\t\t\tif (binding !== undefined) {\r\n\t\t\t\t\t\t// existing binding, make sure the cache knows\r\n\t\t\t\t\t\tif (binding._cacheIndex === null) {\r\n\t\t\t\t\t\t\t++binding.referenceCount;\r\n\r\n\t\t\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\r\n\t\t\t\t\tbinding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\r\n\t\t\t\t\t++binding.referenceCount;\r\n\r\n\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\r\n\r\n\t\t\t\t\tbindings[i] = binding;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinterpolants[i].resultBuffer = binding.buffer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_activateAction(action) {\r\n\t\t\tif (!this._isActiveAction(action)) {\r\n\t\t\t\tif (action._cacheIndex === null) {\r\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\r\n\t\t\t\t\t// appears to be still using it -> rebind\r\n\t\t\t\t\tconst rootUuid = (action._localRoot || this._root).uuid,\r\n\t\t\t\t\t\t\t\tclipUuid = action._clip.uuid,\r\n\t\t\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\r\n\r\n\t\t\t\t\tthis._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\r\n\r\n\t\t\t\t\tthis._addInactiveAction(action, clipUuid, rootUuid);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst bindings = action._propertyBindings; // increment reference counts / sort out state\r\n\r\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\r\n\t\t\t\t\tconst binding = bindings[i];\r\n\r\n\t\t\t\t\tif (binding.useCount++ === 0) {\r\n\t\t\t\t\t\tthis._lendBinding(binding);\r\n\r\n\t\t\t\t\t\tbinding.saveOriginalState();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lendAction(action);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_deactivateAction(action) {\r\n\t\t\tif (this._isActiveAction(action)) {\r\n\t\t\t\tconst bindings = action._propertyBindings; // decrement reference counts / sort out state\r\n\r\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\r\n\t\t\t\t\tconst binding = bindings[i];\r\n\r\n\t\t\t\t\tif (--binding.useCount === 0) {\r\n\t\t\t\t\t\tbinding.restoreOriginalState();\r\n\r\n\t\t\t\t\t\tthis._takeBackBinding(binding);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._takeBackAction(action);\r\n\t\t\t}\r\n\t\t} // Memory manager\r\n\r\n\r\n\t\t_initMemoryManager() {\r\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\r\n\r\n\t\t\tthis._nActiveActions = 0;\r\n\t\t\tthis._actionsByClip = {}; // inside:\r\n\t\t\t// {\r\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\r\n\t\t\t// \tactionByRoot: AnimationAction - lookup\r\n\t\t\t// }\r\n\r\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\r\n\t\t\tthis._nActiveBindings = 0;\r\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\r\n\t\t\tthis._controlInterpolants = []; // same game as above\r\n\r\n\t\t\tthis._nActiveControlInterpolants = 0;\r\n\t\t\tconst scope = this;\r\n\t\t\tthis.stats = {\r\n\t\t\t\tactions: {\r\n\t\t\t\t\tget total() {\r\n\t\t\t\t\t\treturn scope._actions.length;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tget inUse() {\r\n\t\t\t\t\t\treturn scope._nActiveActions;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\t\t\t\tbindings: {\r\n\t\t\t\t\tget total() {\r\n\t\t\t\t\t\treturn scope._bindings.length;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tget inUse() {\r\n\t\t\t\t\t\treturn scope._nActiveBindings;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\t\t\t\tcontrolInterpolants: {\r\n\t\t\t\t\tget total() {\r\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tget inUse() {\r\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} // Memory management for AnimationAction objects\r\n\r\n\r\n\t\t_isActiveAction(action) {\r\n\t\t\tconst index = action._cacheIndex;\r\n\t\t\treturn index !== null && index < this._nActiveActions;\r\n\t\t}\r\n\r\n\t\t_addInactiveAction(action, clipUuid, rootUuid) {\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\r\n\t\t\tlet actionsForClip = actionsByClip[clipUuid];\r\n\r\n\t\t\tif (actionsForClip === undefined) {\r\n\t\t\t\tactionsForClip = {\r\n\t\t\t\t\tknownActions: [action],\r\n\t\t\t\t\tactionByRoot: {}\r\n\t\t\t\t};\r\n\t\t\t\taction._byClipCacheIndex = 0;\r\n\t\t\t\tactionsByClip[clipUuid] = actionsForClip;\r\n\t\t\t} else {\r\n\t\t\t\tconst knownActions = actionsForClip.knownActions;\r\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\r\n\t\t\t\tknownActions.push(action);\r\n\t\t\t}\r\n\r\n\t\t\taction._cacheIndex = actions.length;\r\n\t\t\tactions.push(action);\r\n\t\t\tactionsForClip.actionByRoot[rootUuid] = action;\r\n\t\t}\r\n\r\n\t\t_removeInactiveAction(action) {\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1],\r\n\t\t\t\t\t\tcacheIndex = action._cacheIndex;\r\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\tactions[cacheIndex] = lastInactiveAction;\r\n\t\t\tactions.pop();\r\n\t\t\taction._cacheIndex = null;\r\n\t\t\tconst clipUuid = action._clip.uuid,\r\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid],\r\n\t\t\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\r\n\t\t\t\t\t\tlastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\r\n\t\t\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\r\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n\t\t\tknownActionsForClip[byClipCacheIndex] = lastKnownAction;\r\n\t\t\tknownActionsForClip.pop();\r\n\t\t\taction._byClipCacheIndex = null;\r\n\t\t\tconst actionByRoot = actionsForClip.actionByRoot,\r\n\t\t\t\t\t\trootUuid = (action._localRoot || this._root).uuid;\r\n\t\t\tdelete actionByRoot[rootUuid];\r\n\r\n\t\t\tif (knownActionsForClip.length === 0) {\r\n\t\t\t\tdelete actionsByClip[clipUuid];\r\n\t\t\t}\r\n\r\n\t\t\tthis._removeInactiveBindingsForAction(action);\r\n\t\t}\r\n\r\n\t\t_removeInactiveBindingsForAction(action) {\r\n\t\t\tconst bindings = action._propertyBindings;\r\n\r\n\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\r\n\t\t\t\tconst binding = bindings[i];\r\n\r\n\t\t\t\tif (--binding.referenceCount === 0) {\r\n\t\t\t\t\tthis._removeInactiveBinding(binding);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_lendAction(action) {\r\n\t\t\t// [ active actions |\tinactive actions\t]\r\n\t\t\t// [\tactive actions >| inactive actions ]\r\n\t\t\t//\t\t\t\t\t\t\t\t s\t\t\t\ta\r\n\t\t\t//\t\t\t\t\t\t\t\t\t<-swap->\r\n\t\t\t//\t\t\t\t\t\t\t\t a\t\t\t\ts\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\r\n\t\t\t\t\t\tlastActiveIndex = this._nActiveActions++,\r\n\t\t\t\t\t\tfirstInactiveAction = actions[lastActiveIndex];\r\n\t\t\taction._cacheIndex = lastActiveIndex;\r\n\t\t\tactions[lastActiveIndex] = action;\r\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\r\n\t\t\tactions[prevIndex] = firstInactiveAction;\r\n\t\t}\r\n\r\n\t\t_takeBackAction(action) {\r\n\t\t\t// [\tactive actions\t| inactive actions ]\r\n\t\t\t// [ active actions |< inactive actions\t]\r\n\t\t\t//\t\t\t\ta\t\t\t\ts\r\n\t\t\t//\t\t\t\t <-swap->\r\n\t\t\t//\t\t\t\ts\t\t\t\ta\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\r\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveActions,\r\n\t\t\t\t\t\tlastActiveAction = actions[firstInactiveIndex];\r\n\t\t\taction._cacheIndex = firstInactiveIndex;\r\n\t\t\tactions[firstInactiveIndex] = action;\r\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\r\n\t\t\tactions[prevIndex] = lastActiveAction;\r\n\t\t} // Memory management for PropertyMixer objects\r\n\r\n\r\n\t\t_addInactiveBinding(binding, rootUuid, trackName) {\r\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\t\t\tbindings = this._bindings;\r\n\t\t\tlet bindingByName = bindingsByRoot[rootUuid];\r\n\r\n\t\t\tif (bindingByName === undefined) {\r\n\t\t\t\tbindingByName = {};\r\n\t\t\t\tbindingsByRoot[rootUuid] = bindingByName;\r\n\t\t\t}\r\n\r\n\t\t\tbindingByName[trackName] = binding;\r\n\t\t\tbinding._cacheIndex = bindings.length;\r\n\t\t\tbindings.push(binding);\r\n\t\t}\r\n\r\n\t\t_removeInactiveBinding(binding) {\r\n\t\t\tconst bindings = this._bindings,\r\n\t\t\t\t\t\tpropBinding = binding.binding,\r\n\t\t\t\t\t\trootUuid = propBinding.rootNode.uuid,\r\n\t\t\t\t\t\ttrackName = propBinding.path,\r\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid],\r\n\t\t\t\t\t\tlastInactiveBinding = bindings[bindings.length - 1],\r\n\t\t\t\t\t\tcacheIndex = binding._cacheIndex;\r\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\r\n\t\t\tbindings[cacheIndex] = lastInactiveBinding;\r\n\t\t\tbindings.pop();\r\n\t\t\tdelete bindingByName[trackName];\r\n\r\n\t\t\tif (Object.keys(bindingByName).length === 0) {\r\n\t\t\t\tdelete bindingsByRoot[rootUuid];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_lendBinding(binding) {\r\n\t\t\tconst bindings = this._bindings,\r\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\r\n\t\t\t\t\t\tlastActiveIndex = this._nActiveBindings++,\r\n\t\t\t\t\t\tfirstInactiveBinding = bindings[lastActiveIndex];\r\n\t\t\tbinding._cacheIndex = lastActiveIndex;\r\n\t\t\tbindings[lastActiveIndex] = binding;\r\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\r\n\t\t\tbindings[prevIndex] = firstInactiveBinding;\r\n\t\t}\r\n\r\n\t\t_takeBackBinding(binding) {\r\n\t\t\tconst bindings = this._bindings,\r\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\r\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveBindings,\r\n\t\t\t\t\t\tlastActiveBinding = bindings[firstInactiveIndex];\r\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\r\n\t\t\tbindings[firstInactiveIndex] = binding;\r\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\r\n\t\t\tbindings[prevIndex] = lastActiveBinding;\r\n\t\t} // Memory management of Interpolants for weight and time scale\r\n\r\n\r\n\t\t_lendControlInterpolant() {\r\n\t\t\tconst interpolants = this._controlInterpolants,\r\n\t\t\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants++;\r\n\t\t\tlet interpolant = interpolants[lastActiveIndex];\r\n\r\n\t\t\tif (interpolant === undefined) {\r\n\t\t\t\tinterpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\r\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\r\n\t\t\t\tinterpolants[lastActiveIndex] = interpolant;\r\n\t\t\t}\r\n\r\n\t\t\treturn interpolant;\r\n\t\t}\r\n\r\n\t\t_takeBackControlInterpolant(interpolant) {\r\n\t\t\tconst interpolants = this._controlInterpolants,\r\n\t\t\t\t\t\tprevIndex = interpolant.__cacheIndex,\r\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveControlInterpolants,\r\n\t\t\t\t\t\tlastActiveInterpolant = interpolants[firstInactiveIndex];\r\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\r\n\t\t\tinterpolants[firstInactiveIndex] = interpolant;\r\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\r\n\t\t\tinterpolants[prevIndex] = lastActiveInterpolant;\r\n\t\t} // return an action for a clip optionally using a custom root target\r\n\t\t// object (this method allocates a lot of dynamic memory in case a\r\n\t\t// previously unknown clip/root combination is specified)\r\n\r\n\r\n\t\tclipAction(clip, optionalRoot, blendMode) {\r\n\t\t\tconst root = optionalRoot || this._root,\r\n\t\t\t\t\t\trootUuid = root.uuid;\r\n\t\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\r\n\t\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\r\n\t\t\tconst actionsForClip = this._actionsByClip[clipUuid];\r\n\t\t\tlet prototypeAction = null;\r\n\r\n\t\t\tif (blendMode === undefined) {\r\n\t\t\t\tif (clipObject !== null) {\r\n\t\t\t\t\tblendMode = clipObject.blendMode;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (actionsForClip !== undefined) {\r\n\t\t\t\tconst existingAction = actionsForClip.actionByRoot[rootUuid];\r\n\r\n\t\t\t\tif (existingAction !== undefined && existingAction.blendMode === blendMode) {\r\n\t\t\t\t\treturn existingAction;\r\n\t\t\t\t} // we know the clip, so we don't have to parse all\r\n\t\t\t\t// the bindings again but can just copy\r\n\r\n\r\n\t\t\t\tprototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\r\n\r\n\t\t\t\tif (clipObject === null) clipObject = prototypeAction._clip;\r\n\t\t\t} // clip must be known when specified via string\r\n\r\n\r\n\t\t\tif (clipObject === null) return null; // allocate all resources required to run it\r\n\r\n\t\t\tconst newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\r\n\r\n\t\t\tthis._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\r\n\r\n\r\n\t\t\tthis._addInactiveAction(newAction, clipUuid, rootUuid);\r\n\r\n\t\t\treturn newAction;\r\n\t\t} // get an existing action\r\n\r\n\r\n\t\texistingAction(clip, optionalRoot) {\r\n\t\t\tconst root = optionalRoot || this._root,\r\n\t\t\t\t\t\trootUuid = root.uuid,\r\n\t\t\t\t\t\tclipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\r\n\t\t\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\r\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\r\n\r\n\t\t\tif (actionsForClip !== undefined) {\r\n\t\t\t\treturn actionsForClip.actionByRoot[rootUuid] || null;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t} // deactivates all previously scheduled actions\r\n\r\n\r\n\t\tstopAllAction() {\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tnActions = this._nActiveActions;\r\n\r\n\t\t\tfor (let i = nActions - 1; i >= 0; --i) {\r\n\t\t\t\tactions[i].stop();\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // advance the time and update apply the animation\r\n\r\n\r\n\t\tupdate(deltaTime) {\r\n\t\t\tdeltaTime *= this.timeScale;\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tnActions = this._nActiveActions,\r\n\t\t\t\t\t\ttime = this.time += deltaTime,\r\n\t\t\t\t\t\ttimeDirection = Math.sign(deltaTime),\r\n\t\t\t\t\t\taccuIndex = this._accuIndex ^= 1; // run active actions\r\n\r\n\t\t\tfor (let i = 0; i !== nActions; ++i) {\r\n\t\t\t\tconst action = actions[i];\r\n\r\n\t\t\t\taction._update(time, deltaTime, timeDirection, accuIndex);\r\n\t\t\t} // update scene graph\r\n\r\n\r\n\t\t\tconst bindings = this._bindings,\r\n\t\t\t\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\t\tfor (let i = 0; i !== nBindings; ++i) {\r\n\t\t\t\tbindings[i].apply(accuIndex);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // Allows you to seek to a specific time in an animation.\r\n\r\n\r\n\t\tsetTime(timeInSeconds) {\r\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\r\n\r\n\t\t\tfor (let i = 0; i < this._actions.length; i++) {\r\n\t\t\t\tthis._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\r\n\t\t\t}\r\n\r\n\t\t\treturn this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\r\n\t\t} // return this mixer's root target object\r\n\r\n\r\n\t\tgetRoot() {\r\n\t\t\treturn this._root;\r\n\t\t} // free all resources specific to a particular clip\r\n\r\n\r\n\t\tuncacheClip(clip) {\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tclipUuid = clip.uuid,\r\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid];\r\n\r\n\t\t\tif (actionsForClip !== undefined) {\r\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\r\n\t\t\t\t// iteration state and also require updating the state we can\r\n\t\t\t\t// just throw away\r\n\t\t\t\tconst actionsToRemove = actionsForClip.knownActions;\r\n\r\n\t\t\t\tfor (let i = 0, n = actionsToRemove.length; i !== n; ++i) {\r\n\t\t\t\t\tconst action = actionsToRemove[i];\r\n\r\n\t\t\t\t\tthis._deactivateAction(action);\r\n\r\n\t\t\t\t\tconst cacheIndex = action._cacheIndex,\r\n\t\t\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1];\r\n\t\t\t\t\taction._cacheIndex = null;\r\n\t\t\t\t\taction._byClipCacheIndex = null;\r\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\t\t\tactions[cacheIndex] = lastInactiveAction;\r\n\t\t\t\t\tactions.pop();\r\n\r\n\t\t\t\t\tthis._removeInactiveBindingsForAction(action);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete actionsByClip[clipUuid];\r\n\t\t\t}\r\n\t\t} // free all resources specific to a particular root target object\r\n\r\n\r\n\t\tuncacheRoot(root) {\r\n\t\t\tconst rootUuid = root.uuid,\r\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\r\n\r\n\t\t\tfor (const clipUuid in actionsByClip) {\r\n\t\t\t\tconst actionByRoot = actionsByClip[clipUuid].actionByRoot,\r\n\t\t\t\t\t\t\taction = actionByRoot[rootUuid];\r\n\r\n\t\t\t\tif (action !== undefined) {\r\n\t\t\t\t\tthis._deactivateAction(action);\r\n\r\n\t\t\t\t\tthis._removeInactiveAction(action);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid];\r\n\r\n\t\t\tif (bindingByName !== undefined) {\r\n\t\t\t\tfor (const trackName in bindingByName) {\r\n\t\t\t\t\tconst binding = bindingByName[trackName];\r\n\t\t\t\t\tbinding.restoreOriginalState();\r\n\r\n\t\t\t\t\tthis._removeInactiveBinding(binding);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} // remove a targeted clip from the cache\r\n\r\n\r\n\t\tuncacheAction(clip, optionalRoot) {\r\n\t\t\tconst action = this.existingAction(clip, optionalRoot);\r\n\r\n\t\t\tif (action !== null) {\r\n\t\t\t\tthis._deactivateAction(action);\r\n\r\n\t\t\t\tthis._removeInactiveAction(action);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array(1);\r\n\r\n\tclass Uniform {\r\n\t\tconstructor(value) {\r\n\t\t\tif (typeof value === 'string') {\r\n\t\t\t\tconsole.warn('THREE.Uniform: Type parameter is no longer needed.');\r\n\t\t\t\tvalue = arguments[1];\r\n\t\t\t}\r\n\r\n\t\t\tthis.value = value;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass InstancedInterleavedBuffer extends InterleavedBuffer {\r\n\t\tconstructor(array, stride, meshPerAttribute = 1) {\r\n\t\t\tsuper(array, stride);\r\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone(data) {\r\n\t\t\tconst ib = super.clone(data);\r\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\r\n\t\t\treturn ib;\r\n\t\t}\r\n\r\n\t\ttoJSON(data) {\r\n\t\t\tconst json = super.toJSON(data);\r\n\t\t\tjson.isInstancedInterleavedBuffer = true;\r\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\r\n\t\t\treturn json;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\r\n\r\n\tclass GLBufferAttribute {\r\n\t\tconstructor(buffer, type, itemSize, elementSize, count) {\r\n\t\t\tthis.buffer = buffer;\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.itemSize = itemSize;\r\n\t\t\tthis.elementSize = elementSize;\r\n\t\t\tthis.count = count;\r\n\t\t\tthis.version = 0;\r\n\t\t}\r\n\r\n\t\tset needsUpdate(value) {\r\n\t\t\tif (value === true) this.version++;\r\n\t\t}\r\n\r\n\t\tsetBuffer(buffer) {\r\n\t\t\tthis.buffer = buffer;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetType(type, elementSize) {\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.elementSize = elementSize;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetItemSize(itemSize) {\r\n\t\t\tthis.itemSize = itemSize;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetCount(count) {\r\n\t\t\tthis.count = count;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tGLBufferAttribute.prototype.isGLBufferAttribute = true;\r\n\r\n\tclass Raycaster {\r\n\t\tconstructor(origin, direction, near = 0, far = Infinity) {\r\n\t\t\tthis.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.near = near;\r\n\t\t\tthis.far = far;\r\n\t\t\tthis.camera = null;\r\n\t\t\tthis.layers = new Layers();\r\n\t\t\tthis.params = {\r\n\t\t\t\tMesh: {},\r\n\t\t\t\tLine: {\r\n\t\t\t\t\tthreshold: 1\r\n\t\t\t\t},\r\n\t\t\t\tLOD: {},\r\n\t\t\t\tPoints: {\r\n\t\t\t\t\tthreshold: 1\r\n\t\t\t\t},\r\n\t\t\t\tSprite: {}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tset(origin, direction) {\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\t\tthis.ray.set(origin, direction);\r\n\t\t}\r\n\r\n\t\tsetFromCamera(coords, camera) {\r\n\t\t\tif (camera && camera.isPerspectiveCamera) {\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition(camera.matrixWorld);\r\n\t\t\t\tthis.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\r\n\t\t\t\tthis.camera = camera;\r\n\t\t\t} else if (camera && camera.isOrthographicCamera) {\r\n\t\t\t\tthis.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\r\n\r\n\t\t\t\tthis.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\r\n\t\t\t\tthis.camera = camera;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tintersectObject(object, recursive = true, intersects = []) {\r\n\t\t\tintersectObject(object, this, intersects, recursive);\r\n\t\t\tintersects.sort(ascSort);\r\n\t\t\treturn intersects;\r\n\t\t}\r\n\r\n\t\tintersectObjects(objects, recursive = true, intersects = []) {\r\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\r\n\t\t\t\tintersectObject(objects[i], this, intersects, recursive);\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort(ascSort);\r\n\t\t\treturn intersects;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction ascSort(a, b) {\r\n\t\treturn a.distance - b.distance;\r\n\t}\r\n\r\n\tfunction intersectObject(object, raycaster, intersects, recursive) {\r\n\t\tif (object.layers.test(raycaster.layers)) {\r\n\t\t\tobject.raycast(raycaster, intersects);\r\n\t\t}\r\n\r\n\t\tif (recursive === true) {\r\n\t\t\tconst children = object.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tintersectObject(children[i], raycaster, intersects, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n\t *\r\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\r\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\r\n\t */\r\n\r\n\tclass Spherical {\r\n\t\tconstructor(radius = 1, phi = 0, theta = 0) {\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.phi = phi; // polar angle\r\n\r\n\t\t\tthis.theta = theta; // azimuthal angle\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tset(radius, phi, theta) {\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.phi = phi;\r\n\t\t\tthis.theta = theta;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(other) {\r\n\t\t\tthis.radius = other.radius;\r\n\t\t\tthis.phi = other.phi;\r\n\t\t\tthis.theta = other.theta;\r\n\t\t\treturn this;\r\n\t\t} // restrict phi to be betwee EPS and PI-EPS\r\n\r\n\r\n\t\tmakeSafe() {\r\n\t\t\tconst EPS = 0.000001;\r\n\t\t\tthis.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromVector3(v) {\r\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\r\n\t\t}\r\n\r\n\t\tsetFromCartesianCoords(x, y, z) {\r\n\t\t\tthis.radius = Math.sqrt(x * x + y * y + z * z);\r\n\r\n\t\t\tif (this.radius === 0) {\r\n\t\t\t\tthis.theta = 0;\r\n\t\t\t\tthis.phi = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.theta = Math.atan2(x, z);\r\n\t\t\t\tthis.phi = Math.acos(clamp(y / this.radius, -1, 1));\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\r\n\t */\r\n\tclass Cylindrical {\r\n\t\tconstructor(radius = 1, theta = 0, y = 0) {\r\n\t\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\r\n\r\n\t\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\r\n\r\n\t\t\tthis.y = y; // height above the x-z plane\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tset(radius, theta, y) {\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.theta = theta;\r\n\t\t\tthis.y = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(other) {\r\n\t\t\tthis.radius = other.radius;\r\n\t\t\tthis.theta = other.theta;\r\n\t\t\tthis.y = other.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromVector3(v) {\r\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\r\n\t\t}\r\n\r\n\t\tsetFromCartesianCoords(x, y, z) {\r\n\t\t\tthis.radius = Math.sqrt(x * x + z * z);\r\n\t\t\tthis.theta = Math.atan2(x, z);\r\n\t\t\tthis.y = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _vector$4 = /*@__PURE__*/new Vector2();\r\n\r\n\tclass Box2 {\r\n\t\tconstructor(min = new Vector2(+Infinity, +Infinity), max = new Vector2(-Infinity, -Infinity)) {\r\n\t\t\tthis.min = min;\r\n\t\t\tthis.max = max;\r\n\t\t}\r\n\r\n\t\tset(min, max) {\r\n\t\t\tthis.min.copy(min);\r\n\t\t\tthis.max.copy(max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromPoints(points) {\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\r\n\t\t\t\tthis.expandByPoint(points[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromCenterAndSize(center, size) {\r\n\t\t\tconst halfSize = _vector$4.copy(size).multiplyScalar(0.5);\r\n\r\n\t\t\tthis.min.copy(center).sub(halfSize);\r\n\t\t\tthis.max.copy(center).add(halfSize);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(box) {\r\n\t\t\tthis.min.copy(box.min);\r\n\t\t\tthis.max.copy(box.max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeEmpty() {\r\n\t\t\tthis.min.x = this.min.y = +Infinity;\r\n\t\t\tthis.max.x = this.max.y = -Infinity;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tisEmpty() {\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y;\r\n\t\t}\r\n\r\n\t\tgetCenter(target) {\r\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\r\n\t\t}\r\n\r\n\t\tgetSize(target) {\r\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\r\n\t\t}\r\n\r\n\t\texpandByPoint(point) {\r\n\t\t\tthis.min.min(point);\r\n\t\t\tthis.max.max(point);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\texpandByVector(vector) {\r\n\t\t\tthis.min.sub(vector);\r\n\t\t\tthis.max.add(vector);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\texpandByScalar(scalar) {\r\n\t\t\tthis.min.addScalar(-scalar);\r\n\t\t\tthis.max.addScalar(scalar);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcontainsPoint(point) {\r\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\r\n\t\t}\r\n\r\n\t\tcontainsBox(box) {\r\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\r\n\t\t}\r\n\r\n\t\tgetParameter(point, target) {\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\t// using 4 splitting planes to rule out intersections\r\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\r\n\t\t}\r\n\r\n\t\tclampPoint(point, target) {\r\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\r\n\t\t}\r\n\r\n\t\tdistanceToPoint(point) {\r\n\t\t\tconst clampedPoint = _vector$4.copy(point).clamp(this.min, this.max);\r\n\r\n\t\t\treturn clampedPoint.sub(point).length();\r\n\t\t}\r\n\r\n\t\tintersect(box) {\r\n\t\t\tthis.min.max(box.min);\r\n\t\t\tthis.max.min(box.max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tunion(box) {\r\n\t\t\tthis.min.min(box.min);\r\n\t\t\tthis.max.max(box.max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslate(offset) {\r\n\t\t\tthis.min.add(offset);\r\n\t\t\tthis.max.add(offset);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(box) {\r\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBox2.prototype.isBox2 = true;\r\n\r\n\tconst _startP = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _startEnd = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Line3 {\r\n\t\tconstructor(start = new Vector3(), end = new Vector3()) {\r\n\t\t\tthis.start = start;\r\n\t\t\tthis.end = end;\r\n\t\t}\r\n\r\n\t\tset(start, end) {\r\n\t\t\tthis.start.copy(start);\r\n\t\t\tthis.end.copy(end);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(line) {\r\n\t\t\tthis.start.copy(line.start);\r\n\t\t\tthis.end.copy(line.end);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetCenter(target) {\r\n\t\t\treturn target.addVectors(this.start, this.end).multiplyScalar(0.5);\r\n\t\t}\r\n\r\n\t\tdelta(target) {\r\n\t\t\treturn target.subVectors(this.end, this.start);\r\n\t\t}\r\n\r\n\t\tdistanceSq() {\r\n\t\t\treturn this.start.distanceToSquared(this.end);\r\n\t\t}\r\n\r\n\t\tdistance() {\r\n\t\t\treturn this.start.distanceTo(this.end);\r\n\t\t}\r\n\r\n\t\tat(t, target) {\r\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\r\n\t\t}\r\n\r\n\t\tclosestPointToPointParameter(point, clampToLine) {\r\n\t\t\t_startP.subVectors(point, this.start);\r\n\r\n\t\t\t_startEnd.subVectors(this.end, this.start);\r\n\r\n\t\t\tconst startEnd2 = _startEnd.dot(_startEnd);\r\n\r\n\t\t\tconst startEnd_startP = _startEnd.dot(_startP);\r\n\r\n\t\t\tlet t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif (clampToLine) {\r\n\t\t\t\tt = clamp(t, 0, 1);\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\t\t}\r\n\r\n\t\tclosestPointToPoint(point, clampToLine, target) {\r\n\t\t\tconst t = this.closestPointToPointParameter(point, clampToLine);\r\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(matrix) {\r\n\t\t\tthis.start.applyMatrix4(matrix);\r\n\t\t\tthis.end.applyMatrix4(matrix);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(line) {\r\n\t\t\treturn line.start.equals(this.start) && line.end.equals(this.end);\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass ImmediateRenderObject extends Object3D {\r\n\t\tconstructor(material) {\r\n\t\t\tsuper();\r\n\t\t\tthis.material = material;\r\n\r\n\t\t\tthis.render = function () {};\r\n\r\n\t\t\tthis.hasPositions = false;\r\n\t\t\tthis.hasNormals = false;\r\n\t\t\tthis.hasColors = false;\r\n\t\t\tthis.hasUvs = false;\r\n\t\t\tthis.positionArray = null;\r\n\t\t\tthis.normalArray = null;\r\n\t\t\tthis.colorArray = null;\r\n\t\t\tthis.uvArray = null;\r\n\t\t\tthis.count = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\r\n\r\n\tconst _vector$3 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass SpotLightHelper extends Object3D {\r\n\t\tconstructor(light, color) {\r\n\t\t\tsuper();\r\n\t\t\tthis.light = light;\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\t\t\tthis.matrix = light.matrixWorld;\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t\tthis.color = color;\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tconst positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\r\n\r\n\t\t\tfor (let i = 0, j = 1, l = 32; i < l; i++, j++) {\r\n\t\t\t\tconst p1 = i / l * Math.PI * 2;\r\n\t\t\t\tconst p2 = j / l * Math.PI * 2;\r\n\t\t\t\tpositions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tfog: false,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tthis.cone = new LineSegments(geometry, material);\r\n\t\t\tthis.add(this.cone);\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.cone.geometry.dispose();\r\n\t\t\tthis.cone.material.dispose();\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\t\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\r\n\t\t\tconst coneWidth = coneLength * Math.tan(this.light.angle);\r\n\t\t\tthis.cone.scale.set(coneWidth, coneWidth, coneLength);\r\n\r\n\t\t\t_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\r\n\r\n\t\t\tthis.cone.lookAt(_vector$3);\r\n\r\n\t\t\tif (this.color !== undefined) {\r\n\t\t\t\tthis.cone.material.color.set(this.color);\r\n\t\t\t} else {\r\n\t\t\t\tthis.cone.material.color.copy(this.light.color);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _vector$2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _boneMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _matrixWorldInv = /*@__PURE__*/new Matrix4();\r\n\r\n\tclass SkeletonHelper extends LineSegments {\r\n\t\tconstructor(object) {\r\n\t\t\tconst bones = getBoneList(object);\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst colors = [];\r\n\t\t\tconst color1 = new Color(0, 0, 1);\r\n\t\t\tconst color2 = new Color(0, 1, 0);\r\n\r\n\t\t\tfor (let i = 0; i < bones.length; i++) {\r\n\t\t\t\tconst bone = bones[i];\r\n\r\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\r\n\t\t\t\t\tvertices.push(0, 0, 0);\r\n\t\t\t\t\tvertices.push(0, 0, 0);\r\n\t\t\t\t\tcolors.push(color1.r, color1.g, color1.b);\r\n\t\t\t\t\tcolors.push(color2.r, color2.g, color2.b);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tvertexColors: true,\r\n\t\t\t\tdepthTest: false,\r\n\t\t\t\tdepthWrite: false,\r\n\t\t\t\ttoneMapped: false,\r\n\t\t\t\ttransparent: true\r\n\t\t\t});\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'SkeletonHelper';\r\n\t\t\tthis.isSkeletonHelper = true;\r\n\t\t\tthis.root = object;\r\n\t\t\tthis.bones = bones;\r\n\t\t\tthis.matrix = object.matrixWorld;\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tconst bones = this.bones;\r\n\t\t\tconst geometry = this.geometry;\r\n\t\t\tconst position = geometry.getAttribute('position');\r\n\r\n\t\t\t_matrixWorldInv.copy(this.root.matrixWorld).invert();\r\n\r\n\t\t\tfor (let i = 0, j = 0; i < bones.length; i++) {\r\n\t\t\t\tconst bone = bones[i];\r\n\r\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\r\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\r\n\r\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\r\n\r\n\t\t\t\t\tposition.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\r\n\r\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\r\n\r\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\r\n\r\n\t\t\t\t\tposition.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\r\n\t\t\t\t\tj += 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getBoneList(object) {\r\n\t\tconst boneList = [];\r\n\r\n\t\tif (object && object.isBone) {\r\n\t\t\tboneList.push(object);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < object.children.length; i++) {\r\n\t\t\tboneList.push.apply(boneList, getBoneList(object.children[i]));\r\n\t\t}\r\n\r\n\t\treturn boneList;\r\n\t}\r\n\r\n\tclass PointLightHelper extends Mesh {\r\n\t\tconstructor(light, sphereSize, color) {\r\n\t\t\tconst geometry = new SphereGeometry(sphereSize, 4, 2);\r\n\t\t\tconst material = new MeshBasicMaterial({\r\n\t\t\t\twireframe: true,\r\n\t\t\t\tfog: false,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.light = light;\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\t\t\tthis.color = color;\r\n\t\t\tthis.type = 'PointLightHelper';\r\n\t\t\tthis.matrix = this.light.matrixWorld;\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t\tthis.update();\r\n\t\t\t/*\r\n\t\t\t// TODO: delete this comment?\r\n\t\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\r\n\t\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\t\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\t\t\tconst d = light.distance;\r\n\t\t\tif ( d === 0.0 ) {\r\n\t\t\t\tthis.lightDistance.visible = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\t\t}\r\n\t\t\tthis.add( this.lightDistance );\r\n\t\t\t*/\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.geometry.dispose();\r\n\t\t\tthis.material.dispose();\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tif (this.color !== undefined) {\r\n\t\t\t\tthis.material.color.set(this.color);\r\n\t\t\t} else {\r\n\t\t\t\tthis.material.color.copy(this.light.color);\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\tconst d = this.light.distance;\r\n\t\t\t\tif ( d === 0.0 ) {\r\n\t\t\t\t\tthis.lightDistance.visible = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.lightDistance.visible = true;\r\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _vector$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _color1 = /*@__PURE__*/new Color();\r\n\r\n\tconst _color2 = /*@__PURE__*/new Color();\r\n\r\n\tclass HemisphereLightHelper extends Object3D {\r\n\t\tconstructor(light, size, color) {\r\n\t\t\tsuper();\r\n\t\t\tthis.light = light;\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\t\t\tthis.matrix = light.matrixWorld;\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t\tthis.color = color;\r\n\t\t\tconst geometry = new OctahedronGeometry(size);\r\n\t\t\tgeometry.rotateY(Math.PI * 0.5);\r\n\t\t\tthis.material = new MeshBasicMaterial({\r\n\t\t\t\twireframe: true,\r\n\t\t\t\tfog: false,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tif (this.color === undefined) this.material.vertexColors = true;\r\n\t\t\tconst position = geometry.getAttribute('position');\r\n\t\t\tconst colors = new Float32Array(position.count * 3);\r\n\t\t\tgeometry.setAttribute('color', new BufferAttribute(colors, 3));\r\n\t\t\tthis.add(new Mesh(geometry, this.material));\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.children[0].geometry.dispose();\r\n\t\t\tthis.children[0].material.dispose();\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tconst mesh = this.children[0];\r\n\r\n\t\t\tif (this.color !== undefined) {\r\n\t\t\t\tthis.material.color.set(this.color);\r\n\t\t\t} else {\r\n\t\t\t\tconst colors = mesh.geometry.getAttribute('color');\r\n\r\n\t\t\t\t_color1.copy(this.light.color);\r\n\r\n\t\t\t\t_color2.copy(this.light.groundColor);\r\n\r\n\t\t\t\tfor (let i = 0, l = colors.count; i < l; i++) {\r\n\t\t\t\t\tconst color = i < l / 2 ? _color1 : _color2;\r\n\t\t\t\t\tcolors.setXYZ(i, color.r, color.g, color.b);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolors.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tmesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass GridHelper extends LineSegments {\r\n\t\tconstructor(size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888) {\r\n\t\t\tcolor1 = new Color(color1);\r\n\t\t\tcolor2 = new Color(color2);\r\n\t\t\tconst center = divisions / 2;\r\n\t\t\tconst step = size / divisions;\r\n\t\t\tconst halfSize = size / 2;\r\n\t\t\tconst vertices = [],\r\n\t\t\t\t\t\tcolors = [];\r\n\r\n\t\t\tfor (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\r\n\t\t\t\tvertices.push(-halfSize, 0, k, halfSize, 0, k);\r\n\t\t\t\tvertices.push(k, 0, -halfSize, k, 0, halfSize);\r\n\t\t\t\tconst color = i === center ? color1 : color2;\r\n\t\t\t\tcolor.toArray(colors, j);\r\n\t\t\t\tj += 3;\r\n\t\t\t\tcolor.toArray(colors, j);\r\n\t\t\t\tj += 3;\r\n\t\t\t\tcolor.toArray(colors, j);\r\n\t\t\t\tj += 3;\r\n\t\t\t\tcolor.toArray(colors, j);\r\n\t\t\t\tj += 3;\r\n\t\t\t}\r\n\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tvertexColors: true,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'GridHelper';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass PolarGridHelper extends LineSegments {\r\n\t\tconstructor(radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888) {\r\n\t\t\tcolor1 = new Color(color1);\r\n\t\t\tcolor2 = new Color(color2);\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst colors = []; // create the radials\r\n\r\n\t\t\tfor (let i = 0; i <= radials; i++) {\r\n\t\t\t\tconst v = i / radials * (Math.PI * 2);\r\n\t\t\t\tconst x = Math.sin(v) * radius;\r\n\t\t\t\tconst z = Math.cos(v) * radius;\r\n\t\t\t\tvertices.push(0, 0, 0);\r\n\t\t\t\tvertices.push(x, 0, z);\r\n\t\t\t\tconst color = i & 1 ? color1 : color2;\r\n\t\t\t\tcolors.push(color.r, color.g, color.b);\r\n\t\t\t\tcolors.push(color.r, color.g, color.b);\r\n\t\t\t} // create the circles\r\n\r\n\r\n\t\t\tfor (let i = 0; i <= circles; i++) {\r\n\t\t\t\tconst color = i & 1 ? color1 : color2;\r\n\t\t\t\tconst r = radius - radius / circles * i;\r\n\r\n\t\t\t\tfor (let j = 0; j < divisions; j++) {\r\n\t\t\t\t\t// first vertex\r\n\t\t\t\t\tlet v = j / divisions * (Math.PI * 2);\r\n\t\t\t\t\tlet x = Math.sin(v) * r;\r\n\t\t\t\t\tlet z = Math.cos(v) * r;\r\n\t\t\t\t\tvertices.push(x, 0, z);\r\n\t\t\t\t\tcolors.push(color.r, color.g, color.b); // second vertex\r\n\r\n\t\t\t\t\tv = (j + 1) / divisions * (Math.PI * 2);\r\n\t\t\t\t\tx = Math.sin(v) * r;\r\n\t\t\t\t\tz = Math.cos(v) * r;\r\n\t\t\t\t\tvertices.push(x, 0, z);\r\n\t\t\t\t\tcolors.push(color.r, color.g, color.b);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tvertexColors: true,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'PolarGridHelper';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _v1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v3 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass DirectionalLightHelper extends Object3D {\r\n\t\tconstructor(light, size, color) {\r\n\t\t\tsuper();\r\n\t\t\tthis.light = light;\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\t\t\tthis.matrix = light.matrixWorld;\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t\tthis.color = color;\r\n\t\t\tif (size === undefined) size = 1;\r\n\t\t\tlet geometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tfog: false,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tthis.lightPlane = new Line(geometry, material);\r\n\t\t\tthis.add(this.lightPlane);\r\n\t\t\tgeometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\r\n\t\t\tthis.targetLine = new Line(geometry, material);\r\n\t\t\tthis.add(this.targetLine);\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.lightPlane.geometry.dispose();\r\n\t\t\tthis.lightPlane.material.dispose();\r\n\t\t\tthis.targetLine.geometry.dispose();\r\n\t\t\tthis.targetLine.material.dispose();\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\t_v1.setFromMatrixPosition(this.light.matrixWorld);\r\n\r\n\t\t\t_v2.setFromMatrixPosition(this.light.target.matrixWorld);\r\n\r\n\t\t\t_v3.subVectors(_v2, _v1);\r\n\r\n\t\t\tthis.lightPlane.lookAt(_v2);\r\n\r\n\t\t\tif (this.color !== undefined) {\r\n\t\t\t\tthis.lightPlane.material.color.set(this.color);\r\n\t\t\t\tthis.targetLine.material.color.set(this.color);\r\n\t\t\t} else {\r\n\t\t\t\tthis.lightPlane.material.color.copy(this.light.color);\r\n\t\t\t\tthis.targetLine.material.color.copy(this.light.color);\r\n\t\t\t}\r\n\r\n\t\t\tthis.targetLine.lookAt(_v2);\r\n\t\t\tthis.targetLine.scale.z = _v3.length();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _vector = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _camera = /*@__PURE__*/new Camera();\r\n\t/**\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\r\n\r\n\tclass CameraHelper extends LineSegments {\r\n\t\tconstructor(camera) {\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tcolor: 0xffffff,\r\n\t\t\t\tvertexColors: true,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst colors = [];\r\n\t\t\tconst pointMap = {}; // colors\r\n\r\n\t\t\tconst colorFrustum = new Color(0xffaa00);\r\n\t\t\tconst colorCone = new Color(0xff0000);\r\n\t\t\tconst colorUp = new Color(0x00aaff);\r\n\t\t\tconst colorTarget = new Color(0xffffff);\r\n\t\t\tconst colorCross = new Color(0x333333); // near\r\n\r\n\t\t\taddLine('n1', 'n2', colorFrustum);\r\n\t\t\taddLine('n2', 'n4', colorFrustum);\r\n\t\t\taddLine('n4', 'n3', colorFrustum);\r\n\t\t\taddLine('n3', 'n1', colorFrustum); // far\r\n\r\n\t\t\taddLine('f1', 'f2', colorFrustum);\r\n\t\t\taddLine('f2', 'f4', colorFrustum);\r\n\t\t\taddLine('f4', 'f3', colorFrustum);\r\n\t\t\taddLine('f3', 'f1', colorFrustum); // sides\r\n\r\n\t\t\taddLine('n1', 'f1', colorFrustum);\r\n\t\t\taddLine('n2', 'f2', colorFrustum);\r\n\t\t\taddLine('n3', 'f3', colorFrustum);\r\n\t\t\taddLine('n4', 'f4', colorFrustum); // cone\r\n\r\n\t\t\taddLine('p', 'n1', colorCone);\r\n\t\t\taddLine('p', 'n2', colorCone);\r\n\t\t\taddLine('p', 'n3', colorCone);\r\n\t\t\taddLine('p', 'n4', colorCone); // up\r\n\r\n\t\t\taddLine('u1', 'u2', colorUp);\r\n\t\t\taddLine('u2', 'u3', colorUp);\r\n\t\t\taddLine('u3', 'u1', colorUp); // target\r\n\r\n\t\t\taddLine('c', 't', colorTarget);\r\n\t\t\taddLine('p', 'c', colorCross); // cross\r\n\r\n\t\t\taddLine('cn1', 'cn2', colorCross);\r\n\t\t\taddLine('cn3', 'cn4', colorCross);\r\n\t\t\taddLine('cf1', 'cf2', colorCross);\r\n\t\t\taddLine('cf3', 'cf4', colorCross);\r\n\r\n\t\t\tfunction addLine(a, b, color) {\r\n\t\t\t\taddPoint(a, color);\r\n\t\t\t\taddPoint(b, color);\r\n\t\t\t}\r\n\r\n\t\t\tfunction addPoint(id, color) {\r\n\t\t\t\tvertices.push(0, 0, 0);\r\n\t\t\t\tcolors.push(color.r, color.g, color.b);\r\n\r\n\t\t\t\tif (pointMap[id] === undefined) {\r\n\t\t\t\t\tpointMap[id] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpointMap[id].push(vertices.length / 3 - 1);\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'CameraHelper';\r\n\t\t\tthis.camera = camera;\r\n\t\t\tif (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\r\n\t\t\tthis.matrix = camera.matrixWorld;\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t\tthis.pointMap = pointMap;\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tconst geometry = this.geometry;\r\n\t\t\tconst pointMap = this.pointMap;\r\n\t\t\tconst w = 1,\r\n\t\t\t\t\t\th = 1; // we need just camera projection matrix inverse\r\n\t\t\t// world matrix must be identity\r\n\r\n\t\t\t_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\r\n\r\n\r\n\t\t\tsetPoint('c', pointMap, geometry, _camera, 0, 0, -1);\r\n\t\t\tsetPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\r\n\r\n\t\t\tsetPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\r\n\t\t\tsetPoint('n2', pointMap, geometry, _camera, w, -h, -1);\r\n\t\t\tsetPoint('n3', pointMap, geometry, _camera, -w, h, -1);\r\n\t\t\tsetPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\r\n\r\n\t\t\tsetPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\r\n\t\t\tsetPoint('f2', pointMap, geometry, _camera, w, -h, 1);\r\n\t\t\tsetPoint('f3', pointMap, geometry, _camera, -w, h, 1);\r\n\t\t\tsetPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\r\n\r\n\t\t\tsetPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\r\n\t\t\tsetPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\r\n\t\t\tsetPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\r\n\r\n\t\t\tsetPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\r\n\t\t\tsetPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\r\n\t\t\tsetPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\r\n\t\t\tsetPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\r\n\t\t\tsetPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\r\n\t\t\tsetPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\r\n\t\t\tsetPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\r\n\t\t\tsetPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\r\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.geometry.dispose();\r\n\t\t\tthis.material.dispose();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\r\n\t\t_vector.set(x, y, z).unproject(camera);\r\n\r\n\t\tconst points = pointMap[point];\r\n\r\n\t\tif (points !== undefined) {\r\n\t\t\tconst position = geometry.getAttribute('position');\r\n\r\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\r\n\t\t\t\tposition.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst _box = /*@__PURE__*/new Box3();\r\n\r\n\tclass BoxHelper extends LineSegments {\r\n\t\tconstructor(object, color = 0xffff00) {\r\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\r\n\t\t\tconst positions = new Float32Array(8 * 3);\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\r\n\t\t\tgeometry.setAttribute('position', new BufferAttribute(positions, 3));\r\n\t\t\tsuper(geometry, new LineBasicMaterial({\r\n\t\t\t\tcolor: color,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t}));\r\n\t\t\tthis.object = object;\r\n\t\t\tthis.type = 'BoxHelper';\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\tupdate(object) {\r\n\t\t\tif (object !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.BoxHelper: .update() has no longer arguments.');\r\n\t\t\t}\r\n\r\n\t\t\tif (this.object !== undefined) {\r\n\t\t\t\t_box.setFromObject(this.object);\r\n\t\t\t}\r\n\r\n\t\t\tif (_box.isEmpty()) return;\r\n\t\t\tconst min = _box.min;\r\n\t\t\tconst max = _box.max;\r\n\t\t\t/*\r\n\t\t\t\t5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\t\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\r\n\t\t\tconst position = this.geometry.attributes.position;\r\n\t\t\tconst array = position.array;\r\n\t\t\tarray[0] = max.x;\r\n\t\t\tarray[1] = max.y;\r\n\t\t\tarray[2] = max.z;\r\n\t\t\tarray[3] = min.x;\r\n\t\t\tarray[4] = max.y;\r\n\t\t\tarray[5] = max.z;\r\n\t\t\tarray[6] = min.x;\r\n\t\t\tarray[7] = min.y;\r\n\t\t\tarray[8] = max.z;\r\n\t\t\tarray[9] = max.x;\r\n\t\t\tarray[10] = min.y;\r\n\t\t\tarray[11] = max.z;\r\n\t\t\tarray[12] = max.x;\r\n\t\t\tarray[13] = max.y;\r\n\t\t\tarray[14] = min.z;\r\n\t\t\tarray[15] = min.x;\r\n\t\t\tarray[16] = max.y;\r\n\t\t\tarray[17] = min.z;\r\n\t\t\tarray[18] = min.x;\r\n\t\t\tarray[19] = min.y;\r\n\t\t\tarray[20] = min.z;\r\n\t\t\tarray[21] = max.x;\r\n\t\t\tarray[22] = min.y;\r\n\t\t\tarray[23] = min.z;\r\n\t\t\tposition.needsUpdate = true;\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\t}\r\n\r\n\t\tsetFromObject(object) {\r\n\t\t\tthis.object = object;\r\n\t\t\tthis.update();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tLineSegments.prototype.copy.call(this, source);\r\n\t\t\tthis.object = source.object;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Box3Helper extends LineSegments {\r\n\t\tconstructor(box, color = 0xffff00) {\r\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\r\n\t\t\tconst positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\r\n\t\t\tsuper(geometry, new LineBasicMaterial({\r\n\t\t\t\tcolor: color,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t}));\r\n\t\t\tthis.box = box;\r\n\t\t\tthis.type = 'Box3Helper';\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tconst box = this.box;\r\n\t\t\tif (box.isEmpty()) return;\r\n\t\t\tbox.getCenter(this.position);\r\n\t\t\tbox.getSize(this.scale);\r\n\t\t\tthis.scale.multiplyScalar(0.5);\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass PlaneHelper extends Line {\r\n\t\tconstructor(plane, size = 1, hex = 0xffff00) {\r\n\t\t\tconst color = hex;\r\n\t\t\tconst positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\t\t\tsuper(geometry, new LineBasicMaterial({\r\n\t\t\t\tcolor: color,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t}));\r\n\t\t\tthis.type = 'PlaneHelper';\r\n\t\t\tthis.plane = plane;\r\n\t\t\tthis.size = size;\r\n\t\t\tconst positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\r\n\t\t\tconst geometry2 = new BufferGeometry();\r\n\t\t\tgeometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\r\n\t\t\tgeometry2.computeBoundingSphere();\r\n\t\t\tthis.add(new Mesh(geometry2, new MeshBasicMaterial({\r\n\t\t\t\tcolor: color,\r\n\t\t\t\topacity: 0.2,\r\n\t\t\t\ttransparent: true,\r\n\t\t\t\tdepthWrite: false,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t})));\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tlet scale = -this.plane.constant;\r\n\t\t\tif (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\r\n\r\n\t\t\tthis.scale.set(0.5 * this.size, 0.5 * this.size, scale);\r\n\t\t\tthis.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\r\n\r\n\t\t\tthis.lookAt(this.plane.normal);\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _axis = /*@__PURE__*/new Vector3();\r\n\r\n\tlet _lineGeometry, _coneGeometry;\r\n\r\n\tclass ArrowHelper extends Object3D {\r\n\t\t// dir is assumed to be normalized\r\n\t\tconstructor(dir = new Vector3(0, 0, 1), origin = new Vector3(0, 0, 0), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'ArrowHelper';\r\n\r\n\t\t\tif (_lineGeometry === undefined) {\r\n\t\t\t\t_lineGeometry = new BufferGeometry();\r\n\r\n\t\t\t\t_lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\r\n\r\n\t\t\t\t_coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\r\n\r\n\t\t\t\t_coneGeometry.translate(0, -0.5, 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.position.copy(origin);\r\n\t\t\tthis.line = new Line(_lineGeometry, new LineBasicMaterial({\r\n\t\t\t\tcolor: color,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t}));\r\n\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\tthis.add(this.line);\r\n\t\t\tthis.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\r\n\t\t\t\tcolor: color,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t}));\r\n\t\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\t\tthis.add(this.cone);\r\n\t\t\tthis.setDirection(dir);\r\n\t\t\tthis.setLength(length, headLength, headWidth);\r\n\t\t}\r\n\r\n\t\tsetDirection(dir) {\r\n\t\t\t// dir is assumed to be normalized\r\n\t\t\tif (dir.y > 0.99999) {\r\n\t\t\t\tthis.quaternion.set(0, 0, 0, 1);\r\n\t\t\t} else if (dir.y < -0.99999) {\r\n\t\t\t\tthis.quaternion.set(1, 0, 0, 0);\r\n\t\t\t} else {\r\n\t\t\t\t_axis.set(dir.z, 0, -dir.x).normalize();\r\n\r\n\t\t\t\tconst radians = Math.acos(dir.y);\r\n\t\t\t\tthis.quaternion.setFromAxisAngle(_axis, radians);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetLength(length, headLength = length * 0.2, headWidth = headLength * 0.2) {\r\n\t\t\tthis.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\r\n\r\n\t\t\tthis.line.updateMatrix();\r\n\t\t\tthis.cone.scale.set(headWidth, headLength, headWidth);\r\n\t\t\tthis.cone.position.y = length;\r\n\t\t\tthis.cone.updateMatrix();\r\n\t\t}\r\n\r\n\t\tsetColor(color) {\r\n\t\t\tthis.line.material.color.set(color);\r\n\t\t\tthis.cone.material.color.set(color);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source, false);\r\n\t\t\tthis.line.copy(source.line);\r\n\t\t\tthis.cone.copy(source.cone);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass AxesHelper extends LineSegments {\r\n\t\tconstructor(size = 1) {\r\n\t\t\tconst vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\r\n\t\t\tconst colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tvertexColors: true,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'AxesHelper';\r\n\t\t}\r\n\r\n\t\tsetColors(xAxisColor, yAxisColor, zAxisColor) {\r\n\t\t\tconst color = new Color();\r\n\t\t\tconst array = this.geometry.attributes.color.array;\r\n\t\t\tcolor.set(xAxisColor);\r\n\t\t\tcolor.toArray(array, 0);\r\n\t\t\tcolor.toArray(array, 3);\r\n\t\t\tcolor.set(yAxisColor);\r\n\t\t\tcolor.toArray(array, 6);\r\n\t\t\tcolor.toArray(array, 9);\r\n\t\t\tcolor.set(zAxisColor);\r\n\t\t\tcolor.toArray(array, 12);\r\n\t\t\tcolor.toArray(array, 15);\r\n\t\t\tthis.geometry.attributes.color.needsUpdate = true;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.geometry.dispose();\r\n\t\t\tthis.material.dispose();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass ShapePath {\r\n\t\tconstructor() {\r\n\t\t\tthis.type = 'ShapePath';\r\n\t\t\tthis.color = new Color();\r\n\t\t\tthis.subPaths = [];\r\n\t\t\tthis.currentPath = null;\r\n\t\t}\r\n\r\n\t\tmoveTo(x, y) {\r\n\t\t\tthis.currentPath = new Path();\r\n\t\t\tthis.subPaths.push(this.currentPath);\r\n\t\t\tthis.currentPath.moveTo(x, y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlineTo(x, y) {\r\n\t\t\tthis.currentPath.lineTo(x, y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\r\n\t\t\tthis.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\r\n\t\t\tthis.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsplineThru(pts) {\r\n\t\t\tthis.currentPath.splineThru(pts);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoShapes(isCCW, noHoles) {\r\n\t\t\tfunction toShapesNoHoles(inSubpaths) {\r\n\t\t\t\tconst shapes = [];\r\n\r\n\t\t\t\tfor (let i = 0, l = inSubpaths.length; i < l; i++) {\r\n\t\t\t\t\tconst tmpPath = inSubpaths[i];\r\n\t\t\t\t\tconst tmpShape = new Shape();\r\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\t\t\tshapes.push(tmpShape);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn shapes;\r\n\t\t\t}\r\n\r\n\t\t\tfunction isPointInsidePolygon(inPt, inPolygon) {\r\n\t\t\t\tconst polyLen = inPolygon.length; // inPt on polygon contour => immediate success\t\tor\r\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t\t//\twith the horizontal line through inPt, left of inPt\r\n\t\t\t\t//\tnot counting lowerY endpoints of edges and whole edges on that line\r\n\r\n\t\t\t\tlet inside = false;\r\n\r\n\t\t\t\tfor (let p = polyLen - 1, q = 0; q < polyLen; p = q++) {\r\n\t\t\t\t\tlet edgeLowPt = inPolygon[p];\r\n\t\t\t\t\tlet edgeHighPt = inPolygon[q];\r\n\t\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\t\t\tif (Math.abs(edgeDy) > Number.EPSILON) {\r\n\t\t\t\t\t\t// not parallel\r\n\t\t\t\t\t\tif (edgeDy < 0) {\r\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[q];\r\n\t\t\t\t\t\t\tedgeDx = -edgeDx;\r\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[p];\r\n\t\t\t\t\t\t\tedgeDy = -edgeDy;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\r\n\r\n\t\t\t\t\t\tif (inPt.y === edgeLowPt.y) {\r\n\t\t\t\t\t\t\tif (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\r\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\r\n\t\t\t\t\t\t\tif (perpEdge === 0) return true; // inPt is on contour ?\r\n\r\n\t\t\t\t\t\t\tif (perpEdge < 0) continue;\r\n\t\t\t\t\t\t\tinside = !inside; // true intersection left of inPt\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\t\tif (inPt.y !== edgeLowPt.y) continue; // parallel\r\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\r\n\t\t\t\t\t\tif (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\r\n\t\t\t\t\t\t// continue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn inside;\r\n\t\t\t}\r\n\r\n\t\t\tconst isClockWise = ShapeUtils.isClockWise;\r\n\t\t\tconst subPaths = this.subPaths;\r\n\t\t\tif (subPaths.length === 0) return [];\r\n\t\t\tif (noHoles === true) return toShapesNoHoles(subPaths);\r\n\t\t\tlet solid, tmpPath, tmpShape;\r\n\t\t\tconst shapes = [];\r\n\r\n\t\t\tif (subPaths.length === 1) {\r\n\t\t\t\ttmpPath = subPaths[0];\r\n\t\t\t\ttmpShape = new Shape();\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\t\tshapes.push(tmpShape);\r\n\t\t\t\treturn shapes;\r\n\t\t\t}\r\n\r\n\t\t\tlet holesFirst = !isClockWise(subPaths[0].getPoints());\r\n\t\t\tholesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\r\n\r\n\t\t\tconst betterShapeHoles = [];\r\n\t\t\tconst newShapes = [];\r\n\t\t\tlet newShapeHoles = [];\r\n\t\t\tlet mainIdx = 0;\r\n\t\t\tlet tmpPoints;\r\n\t\t\tnewShapes[mainIdx] = undefined;\r\n\t\t\tnewShapeHoles[mainIdx] = [];\r\n\r\n\t\t\tfor (let i = 0, l = subPaths.length; i < l; i++) {\r\n\t\t\t\ttmpPath = subPaths[i];\r\n\t\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\t\tsolid = isClockWise(tmpPoints);\r\n\t\t\t\tsolid = isCCW ? !solid : solid;\r\n\r\n\t\t\t\tif (solid) {\r\n\t\t\t\t\tif (!holesFirst && newShapes[mainIdx]) mainIdx++;\r\n\t\t\t\t\tnewShapes[mainIdx] = {\r\n\t\t\t\t\t\ts: new Shape(),\r\n\t\t\t\t\t\tp: tmpPoints\r\n\t\t\t\t\t};\r\n\t\t\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\r\n\t\t\t\t\tif (holesFirst) mainIdx++;\r\n\t\t\t\t\tnewShapeHoles[mainIdx] = []; //console.log('cw', i);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewShapeHoles[mainIdx].push({\r\n\t\t\t\t\t\th: tmpPath,\r\n\t\t\t\t\t\tp: tmpPoints[0]\r\n\t\t\t\t\t}); //console.log('ccw', i);\r\n\t\t\t\t}\r\n\t\t\t} // only Holes? -> probably all Shapes with wrong orientation\r\n\r\n\r\n\t\t\tif (!newShapes[0]) return toShapesNoHoles(subPaths);\r\n\r\n\t\t\tif (newShapes.length > 1) {\r\n\t\t\t\tlet ambiguous = false;\r\n\t\t\t\tconst toChange = [];\r\n\r\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\r\n\t\t\t\t\tbetterShapeHoles[sIdx] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\r\n\t\t\t\t\tconst sho = newShapeHoles[sIdx];\r\n\r\n\t\t\t\t\tfor (let hIdx = 0; hIdx < sho.length; hIdx++) {\r\n\t\t\t\t\t\tconst ho = sho[hIdx];\r\n\t\t\t\t\t\tlet hole_unassigned = true;\r\n\r\n\t\t\t\t\t\tfor (let s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\r\n\t\t\t\t\t\t\tif (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\r\n\t\t\t\t\t\t\t\tif (sIdx !== s2Idx) toChange.push({\r\n\t\t\t\t\t\t\t\t\tfroms: sIdx,\r\n\t\t\t\t\t\t\t\t\ttos: s2Idx,\r\n\t\t\t\t\t\t\t\t\thole: hIdx\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tif (hole_unassigned) {\r\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push(ho);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tambiguous = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (hole_unassigned) {\r\n\t\t\t\t\t\t\tbetterShapeHoles[sIdx].push(ho);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} // console.log(\"ambiguous: \", ambiguous);\r\n\r\n\r\n\t\t\t\tif (toChange.length > 0) {\r\n\t\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\t\tif (!ambiguous) newShapeHoles = betterShapeHoles;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet tmpHoles;\r\n\r\n\t\t\tfor (let i = 0, il = newShapes.length; i < il; i++) {\r\n\t\t\t\ttmpShape = newShapes[i].s;\r\n\t\t\t\tshapes.push(tmpShape);\r\n\t\t\t\ttmpHoles = newShapeHoles[i];\r\n\r\n\t\t\t\tfor (let j = 0, jl = tmpHoles.length; j < jl; j++) {\r\n\t\t\t\t\ttmpShape.holes.push(tmpHoles[j].h);\r\n\t\t\t\t}\r\n\t\t\t} //console.log(\"shape\", shapes);\r\n\r\n\r\n\t\t\treturn shapes;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _floatView = new Float32Array(1);\r\n\r\n\tconst _int32View = new Int32Array(_floatView.buffer);\r\n\r\n\tclass DataUtils {\r\n\t\t// Converts float32 to float16 (stored as uint16 value).\r\n\t\tstatic toHalfFloat(val) {\r\n\t\t\tif (val > 65504) {\r\n\t\t\t\tconsole.warn('THREE.DataUtils.toHalfFloat(): value exceeds 65504.');\r\n\t\t\t\tval = 65504; // maximum representable value in float16\r\n\t\t\t} // Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\r\n\r\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\r\n\t\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\r\n\t\t\t* by James Tursa?s half-precision code. */\r\n\r\n\r\n\t\t\t_floatView[0] = val;\r\n\t\t\tconst x = _int32View[0];\r\n\t\t\tlet bits = x >> 16 & 0x8000;\r\n\t\t\t/* Get the sign */\r\n\r\n\t\t\tlet m = x >> 12 & 0x07ff;\r\n\t\t\t/* Keep one extra bit for rounding */\r\n\r\n\t\t\tconst e = x >> 23 & 0xff;\r\n\t\t\t/* Using int is faster here */\r\n\r\n\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\r\n\t\t\t\t* half, return signed zero. */\r\n\r\n\t\t\tif (e < 103) return bits;\r\n\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\r\n\r\n\t\t\tif (e > 142) {\r\n\t\t\t\tbits |= 0x7c00;\r\n\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\r\n\t\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\r\n\r\n\t\t\t\tbits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\r\n\t\t\t\treturn bits;\r\n\t\t\t}\r\n\t\t\t/* If exponent underflows but not too much, return a denormal */\r\n\r\n\r\n\t\t\tif (e < 113) {\r\n\t\t\t\tm |= 0x0800;\r\n\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\r\n\t\t\t\t\t* to 1, which is OK. */\r\n\r\n\t\t\t\tbits |= (m >> 114 - e) + (m >> 113 - e & 1);\r\n\t\t\t\treturn bits;\r\n\t\t\t}\r\n\r\n\t\t\tbits |= e - 112 << 10 | m >> 1;\r\n\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\r\n\t\t\t\t* the exponent, which is OK. */\r\n\r\n\t\t\tbits += m & 1;\r\n\t\t\treturn bits;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst LineStrip = 0;\r\n\tconst LinePieces = 1;\r\n\tconst NoColors = 0;\r\n\tconst FaceColors = 1;\r\n\tconst VertexColors = 2;\r\n\tfunction MeshFaceMaterial(materials) {\r\n\t\tconsole.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\r\n\t\treturn materials;\r\n\t}\r\n\tfunction MultiMaterial(materials = []) {\r\n\t\tconsole.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\r\n\t\tmaterials.isMultiMaterial = true;\r\n\t\tmaterials.materials = materials;\r\n\r\n\t\tmaterials.clone = function () {\r\n\t\t\treturn materials.slice();\r\n\t\t};\r\n\r\n\t\treturn materials;\r\n\t}\r\n\tfunction PointCloud(geometry, material) {\r\n\t\tconsole.warn('THREE.PointCloud has been renamed to THREE.Points.');\r\n\t\treturn new Points(geometry, material);\r\n\t}\r\n\tfunction Particle(material) {\r\n\t\tconsole.warn('THREE.Particle has been renamed to THREE.Sprite.');\r\n\t\treturn new Sprite(material);\r\n\t}\r\n\tfunction ParticleSystem(geometry, material) {\r\n\t\tconsole.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\r\n\t\treturn new Points(geometry, material);\r\n\t}\r\n\tfunction PointCloudMaterial(parameters) {\r\n\t\tconsole.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\r\n\t\treturn new PointsMaterial(parameters);\r\n\t}\r\n\tfunction ParticleBasicMaterial(parameters) {\r\n\t\tconsole.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\r\n\t\treturn new PointsMaterial(parameters);\r\n\t}\r\n\tfunction ParticleSystemMaterial(parameters) {\r\n\t\tconsole.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\r\n\t\treturn new PointsMaterial(parameters);\r\n\t}\r\n\tfunction Vertex(x, y, z) {\r\n\t\tconsole.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\r\n\t\treturn new Vector3(x, y, z);\r\n\t} //\r\n\r\n\tfunction DynamicBufferAttribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');\r\n\t\treturn new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\r\n\t}\r\n\tfunction Int8Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\r\n\t\treturn new Int8BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Uint8Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\r\n\t\treturn new Uint8BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Uint8ClampedAttribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\r\n\t\treturn new Uint8ClampedBufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Int16Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\r\n\t\treturn new Int16BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Uint16Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\r\n\t\treturn new Uint16BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Int32Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\r\n\t\treturn new Int32BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Uint32Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\r\n\t\treturn new Uint32BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Float32Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\r\n\t\treturn new Float32BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Float64Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\r\n\t\treturn new Float64BufferAttribute(array, itemSize);\r\n\t} //\r\n\r\n\tCurve.create = function (construct, getPoint) {\r\n\t\tconsole.log('THREE.Curve.create() has been deprecated');\r\n\t\tconstruct.prototype = Object.create(Curve.prototype);\r\n\t\tconstruct.prototype.constructor = construct;\r\n\t\tconstruct.prototype.getPoint = getPoint;\r\n\t\treturn construct;\r\n\t}; //\r\n\r\n\r\n\tPath.prototype.fromPoints = function (points) {\r\n\t\tconsole.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\r\n\t\treturn this.setFromPoints(points);\r\n\t}; //\r\n\r\n\r\n\tfunction AxisHelper(size) {\r\n\t\tconsole.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\r\n\t\treturn new AxesHelper(size);\r\n\t}\r\n\tfunction BoundingBoxHelper(object, color) {\r\n\t\tconsole.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\r\n\t\treturn new BoxHelper(object, color);\r\n\t}\r\n\tfunction EdgesHelper(object, hex) {\r\n\t\tconsole.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\r\n\t\treturn new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\r\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\r\n\t\t}));\r\n\t}\r\n\r\n\tGridHelper.prototype.setColors = function () {\r\n\t\tconsole.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\r\n\t};\r\n\r\n\tSkeletonHelper.prototype.update = function () {\r\n\t\tconsole.error('THREE.SkeletonHelper: update() no longer needs to be called.');\r\n\t};\r\n\r\n\tfunction WireframeHelper(object, hex) {\r\n\t\tconsole.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\r\n\t\treturn new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\r\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\r\n\t\t}));\r\n\t} //\r\n\r\n\tLoader.prototype.extractUrlBase = function (url) {\r\n\t\tconsole.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\r\n\t\treturn LoaderUtils.extractUrlBase(url);\r\n\t};\r\n\r\n\tLoader.Handlers = {\r\n\t\tadd: function () {\r\n\t\t\tconsole.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');\r\n\t\t},\r\n\t\tget: function () {\r\n\t\t\tconsole.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');\r\n\t\t}\r\n\t};\r\n\tfunction XHRLoader(manager) {\r\n\t\tconsole.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\r\n\t\treturn new FileLoader(manager);\r\n\t}\r\n\tfunction BinaryTextureLoader(manager) {\r\n\t\tconsole.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\r\n\t\treturn new DataTextureLoader(manager);\r\n\t} //\r\n\r\n\tBox2.prototype.center = function (optionalTarget) {\r\n\t\tconsole.warn('THREE.Box2: .center() has been renamed to .getCenter().');\r\n\t\treturn this.getCenter(optionalTarget);\r\n\t};\r\n\r\n\tBox2.prototype.empty = function () {\r\n\t\tconsole.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\r\n\t\treturn this.isEmpty();\r\n\t};\r\n\r\n\tBox2.prototype.isIntersectionBox = function (box) {\r\n\t\tconsole.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\r\n\t\treturn this.intersectsBox(box);\r\n\t};\r\n\r\n\tBox2.prototype.size = function (optionalTarget) {\r\n\t\tconsole.warn('THREE.Box2: .size() has been renamed to .getSize().');\r\n\t\treturn this.getSize(optionalTarget);\r\n\t}; //\r\n\r\n\r\n\tBox3.prototype.center = function (optionalTarget) {\r\n\t\tconsole.warn('THREE.Box3: .center() has been renamed to .getCenter().');\r\n\t\treturn this.getCenter(optionalTarget);\r\n\t};\r\n\r\n\tBox3.prototype.empty = function () {\r\n\t\tconsole.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\r\n\t\treturn this.isEmpty();\r\n\t};\r\n\r\n\tBox3.prototype.isIntersectionBox = function (box) {\r\n\t\tconsole.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\r\n\t\treturn this.intersectsBox(box);\r\n\t};\r\n\r\n\tBox3.prototype.isIntersectionSphere = function (sphere) {\r\n\t\tconsole.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\r\n\t\treturn this.intersectsSphere(sphere);\r\n\t};\r\n\r\n\tBox3.prototype.size = function (optionalTarget) {\r\n\t\tconsole.warn('THREE.Box3: .size() has been renamed to .getSize().');\r\n\t\treturn this.getSize(optionalTarget);\r\n\t}; //\r\n\r\n\r\n\tSphere.prototype.empty = function () {\r\n\t\tconsole.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');\r\n\t\treturn this.isEmpty();\r\n\t}; //\r\n\r\n\r\n\tFrustum.prototype.setFromMatrix = function (m) {\r\n\t\tconsole.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');\r\n\t\treturn this.setFromProjectionMatrix(m);\r\n\t}; //\r\n\r\n\r\n\tLine3.prototype.center = function (optionalTarget) {\r\n\t\tconsole.warn('THREE.Line3: .center() has been renamed to .getCenter().');\r\n\t\treturn this.getCenter(optionalTarget);\r\n\t}; //\r\n\r\n\r\n\tMatrix3.prototype.flattenToArrayOffset = function (array, offset) {\r\n\t\tconsole.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\r\n\t\treturn this.toArray(array, offset);\r\n\t};\r\n\r\n\tMatrix3.prototype.multiplyVector3 = function (vector) {\r\n\t\tconsole.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\r\n\t\treturn vector.applyMatrix3(this);\r\n\t};\r\n\r\n\tMatrix3.prototype.multiplyVector3Array = function () {\r\n\t\tconsole.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\r\n\t};\r\n\r\n\tMatrix3.prototype.applyToBufferAttribute = function (attribute) {\r\n\t\tconsole.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');\r\n\t\treturn attribute.applyMatrix3(this);\r\n\t};\r\n\r\n\tMatrix3.prototype.applyToVector3Array = function () {\r\n\t\tconsole.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\r\n\t};\r\n\r\n\tMatrix3.prototype.getInverse = function (matrix) {\r\n\t\tconsole.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\r\n\t\treturn this.copy(matrix).invert();\r\n\t}; //\r\n\r\n\r\n\tMatrix4.prototype.extractPosition = function (m) {\r\n\t\tconsole.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\r\n\t\treturn this.copyPosition(m);\r\n\t};\r\n\r\n\tMatrix4.prototype.flattenToArrayOffset = function (array, offset) {\r\n\t\tconsole.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\r\n\t\treturn this.toArray(array, offset);\r\n\t};\r\n\r\n\tMatrix4.prototype.getPosition = function () {\r\n\t\tconsole.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\r\n\t\treturn new Vector3().setFromMatrixColumn(this, 3);\r\n\t};\r\n\r\n\tMatrix4.prototype.setRotationFromQuaternion = function (q) {\r\n\t\tconsole.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\r\n\t\treturn this.makeRotationFromQuaternion(q);\r\n\t};\r\n\r\n\tMatrix4.prototype.multiplyToArray = function () {\r\n\t\tconsole.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.multiplyVector3 = function (vector) {\r\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\r\n\t\treturn vector.applyMatrix4(this);\r\n\t};\r\n\r\n\tMatrix4.prototype.multiplyVector4 = function (vector) {\r\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\r\n\t\treturn vector.applyMatrix4(this);\r\n\t};\r\n\r\n\tMatrix4.prototype.multiplyVector3Array = function () {\r\n\t\tconsole.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.rotateAxis = function (v) {\r\n\t\tconsole.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\r\n\t\tv.transformDirection(this);\r\n\t};\r\n\r\n\tMatrix4.prototype.crossVector = function (vector) {\r\n\t\tconsole.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\r\n\t\treturn vector.applyMatrix4(this);\r\n\t};\r\n\r\n\tMatrix4.prototype.translate = function () {\r\n\t\tconsole.error('THREE.Matrix4: .translate() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.rotateX = function () {\r\n\t\tconsole.error('THREE.Matrix4: .rotateX() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.rotateY = function () {\r\n\t\tconsole.error('THREE.Matrix4: .rotateY() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.rotateZ = function () {\r\n\t\tconsole.error('THREE.Matrix4: .rotateZ() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.rotateByAxis = function () {\r\n\t\tconsole.error('THREE.Matrix4: .rotateByAxis() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.applyToBufferAttribute = function (attribute) {\r\n\t\tconsole.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');\r\n\t\treturn attribute.applyMatrix4(this);\r\n\t};\r\n\r\n\tMatrix4.prototype.applyToVector3Array = function () {\r\n\t\tconsole.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.makeFrustum = function (left, right, bottom, top, near, far) {\r\n\t\tconsole.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\r\n\t\treturn this.makePerspective(left, right, top, bottom, near, far);\r\n\t};\r\n\r\n\tMatrix4.prototype.getInverse = function (matrix) {\r\n\t\tconsole.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\r\n\t\treturn this.copy(matrix).invert();\r\n\t}; //\r\n\r\n\r\n\tPlane.prototype.isIntersectionLine = function (line) {\r\n\t\tconsole.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\r\n\t\treturn this.intersectsLine(line);\r\n\t}; //\r\n\r\n\r\n\tQuaternion.prototype.multiplyVector3 = function (vector) {\r\n\t\tconsole.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\r\n\t\treturn vector.applyQuaternion(this);\r\n\t};\r\n\r\n\tQuaternion.prototype.inverse = function () {\r\n\t\tconsole.warn('THREE.Quaternion: .inverse() has been renamed to invert().');\r\n\t\treturn this.invert();\r\n\t}; //\r\n\r\n\r\n\tRay.prototype.isIntersectionBox = function (box) {\r\n\t\tconsole.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\r\n\t\treturn this.intersectsBox(box);\r\n\t};\r\n\r\n\tRay.prototype.isIntersectionPlane = function (plane) {\r\n\t\tconsole.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\r\n\t\treturn this.intersectsPlane(plane);\r\n\t};\r\n\r\n\tRay.prototype.isIntersectionSphere = function (sphere) {\r\n\t\tconsole.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\r\n\t\treturn this.intersectsSphere(sphere);\r\n\t}; //\r\n\r\n\r\n\tTriangle.prototype.area = function () {\r\n\t\tconsole.warn('THREE.Triangle: .area() has been renamed to .getArea().');\r\n\t\treturn this.getArea();\r\n\t};\r\n\r\n\tTriangle.prototype.barycoordFromPoint = function (point, target) {\r\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\r\n\t\treturn this.getBarycoord(point, target);\r\n\t};\r\n\r\n\tTriangle.prototype.midpoint = function (target) {\r\n\t\tconsole.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\r\n\t\treturn this.getMidpoint(target);\r\n\t};\r\n\r\n\tTriangle.prototypenormal = function (target) {\r\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\r\n\t\treturn this.getNormal(target);\r\n\t};\r\n\r\n\tTriangle.prototype.plane = function (target) {\r\n\t\tconsole.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\r\n\t\treturn this.getPlane(target);\r\n\t};\r\n\r\n\tTriangle.barycoordFromPoint = function (point, a, b, c, target) {\r\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\r\n\t\treturn Triangle.getBarycoord(point, a, b, c, target);\r\n\t};\r\n\r\n\tTriangle.normal = function (a, b, c, target) {\r\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\r\n\t\treturn Triangle.getNormal(a, b, c, target);\r\n\t}; //\r\n\r\n\r\n\tShape.prototype.extractAllPoints = function (divisions) {\r\n\t\tconsole.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\r\n\t\treturn this.extractPoints(divisions);\r\n\t};\r\n\r\n\tShape.prototype.extrude = function (options) {\r\n\t\tconsole.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\r\n\t\treturn new ExtrudeGeometry(this, options);\r\n\t};\r\n\r\n\tShape.prototype.makeGeometry = function (options) {\r\n\t\tconsole.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\r\n\t\treturn new ShapeGeometry(this, options);\r\n\t}; //\r\n\r\n\r\n\tVector2.prototype.fromAttribute = function (attribute, index, offset) {\r\n\t\tconsole.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\r\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\r\n\t};\r\n\r\n\tVector2.prototype.distanceToManhattan = function (v) {\r\n\t\tconsole.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\r\n\t\treturn this.manhattanDistanceTo(v);\r\n\t};\r\n\r\n\tVector2.prototype.lengthManhattan = function () {\r\n\t\tconsole.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\r\n\t\treturn this.manhattanLength();\r\n\t}; //\r\n\r\n\r\n\tVector3.prototype.setEulerFromRotationMatrix = function () {\r\n\t\tconsole.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\r\n\t};\r\n\r\n\tVector3.prototype.setEulerFromQuaternion = function () {\r\n\t\tconsole.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\r\n\t};\r\n\r\n\tVector3.prototype.getPositionFromMatrix = function (m) {\r\n\t\tconsole.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\r\n\t\treturn this.setFromMatrixPosition(m);\r\n\t};\r\n\r\n\tVector3.prototype.getScaleFromMatrix = function (m) {\r\n\t\tconsole.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\r\n\t\treturn this.setFromMatrixScale(m);\r\n\t};\r\n\r\n\tVector3.prototype.getColumnFromMatrix = function (index, matrix) {\r\n\t\tconsole.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\r\n\t\treturn this.setFromMatrixColumn(matrix, index);\r\n\t};\r\n\r\n\tVector3.prototype.applyProjection = function (m) {\r\n\t\tconsole.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\r\n\t\treturn this.applyMatrix4(m);\r\n\t};\r\n\r\n\tVector3.prototype.fromAttribute = function (attribute, index, offset) {\r\n\t\tconsole.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\r\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\r\n\t};\r\n\r\n\tVector3.prototype.distanceToManhattan = function (v) {\r\n\t\tconsole.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\r\n\t\treturn this.manhattanDistanceTo(v);\r\n\t};\r\n\r\n\tVector3.prototype.lengthManhattan = function () {\r\n\t\tconsole.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\r\n\t\treturn this.manhattanLength();\r\n\t}; //\r\n\r\n\r\n\tVector4.prototype.fromAttribute = function (attribute, index, offset) {\r\n\t\tconsole.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\r\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\r\n\t};\r\n\r\n\tVector4.prototype.lengthManhattan = function () {\r\n\t\tconsole.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\r\n\t\treturn this.manhattanLength();\r\n\t}; //\r\n\r\n\r\n\tObject3D.prototype.getChildByName = function (name) {\r\n\t\tconsole.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\r\n\t\treturn this.getObjectByName(name);\r\n\t};\r\n\r\n\tObject3D.prototype.renderDepth = function () {\r\n\t\tconsole.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\r\n\t};\r\n\r\n\tObject3D.prototype.translate = function (distance, axis) {\r\n\t\tconsole.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\r\n\t\treturn this.translateOnAxis(axis, distance);\r\n\t};\r\n\r\n\tObject3D.prototype.getWorldRotation = function () {\r\n\t\tconsole.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\r\n\t};\r\n\r\n\tObject3D.prototype.applyMatrix = function (matrix) {\r\n\t\tconsole.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');\r\n\t\treturn this.applyMatrix4(matrix);\r\n\t};\r\n\r\n\tObject.defineProperties(Object3D.prototype, {\r\n\t\teulerOrder: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\r\n\t\t\t\treturn this.rotation.order;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\r\n\t\t\t\tthis.rotation.order = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tuseQuaternion: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tMesh.prototype.setDrawMode = function () {\r\n\t\tconsole.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\r\n\t};\r\n\r\n\tObject.defineProperties(Mesh.prototype, {\r\n\t\tdrawMode: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');\r\n\t\t\t\treturn TrianglesDrawMode;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tSkinnedMesh.prototype.initBones = function () {\r\n\t\tconsole.error('THREE.SkinnedMesh: initBones() has been removed.');\r\n\t}; //\r\n\r\n\r\n\tPerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\r\n\t\tconsole.warn('THREE.PerspectiveCamera.setLens is deprecated. ' + 'Use .setFocalLength and .filmGauge for a photographic setup.');\r\n\t\tif (filmGauge !== undefined) this.filmGauge = filmGauge;\r\n\t\tthis.setFocalLength(focalLength);\r\n\t}; //\r\n\r\n\r\n\tObject.defineProperties(Light.prototype, {\r\n\t\tonlyShadow: {\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.Light: .onlyShadow has been removed.');\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFov: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\r\n\t\t\t\tthis.shadow.camera.fov = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraLeft: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\r\n\t\t\t\tthis.shadow.camera.left = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraRight: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\r\n\t\t\t\tthis.shadow.camera.right = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraTop: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\r\n\t\t\t\tthis.shadow.camera.top = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraBottom: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\r\n\t\t\t\tthis.shadow.camera.bottom = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraNear: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\r\n\t\t\t\tthis.shadow.camera.near = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFar: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\r\n\t\t\t\tthis.shadow.camera.far = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraVisible: {\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowBias: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowBias is now .shadow.bias.');\r\n\t\t\t\tthis.shadow.bias = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowDarkness: {\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowDarkness has been removed.');\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapWidth: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\r\n\t\t\t\tthis.shadow.mapSize.width = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapHeight: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\r\n\t\t\t\tthis.shadow.mapSize.height = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}); //\r\n\r\n\tObject.defineProperties(BufferAttribute.prototype, {\r\n\t\tlength: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\r\n\t\t\t\treturn this.array.length;\r\n\t\t\t}\r\n\t\t},\r\n\t\tdynamic: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\r\n\t\t\t\treturn this.usage === DynamicDrawUsage;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\r\n\t\t\t\tthis.setUsage(DynamicDrawUsage);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tBufferAttribute.prototype.setDynamic = function (value) {\r\n\t\tconsole.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');\r\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\r\n\t\treturn this;\r\n\t};\r\n\r\n\tBufferAttribute.prototype.copyIndicesArray = function () {\r\n\t\tconsole.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\r\n\t}, BufferAttribute.prototype.setArray = function () {\r\n\t\tconsole.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\r\n\t}; //\r\n\r\n\tBufferGeometry.prototype.addIndex = function (index) {\r\n\t\tconsole.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\r\n\t\tthis.setIndex(index);\r\n\t};\r\n\r\n\tBufferGeometry.prototype.addAttribute = function (name, attribute) {\r\n\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\r\n\r\n\t\tif (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\r\n\t\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\r\n\t\t\treturn this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\r\n\t\t}\r\n\r\n\t\tif (name === 'index') {\r\n\t\t\tconsole.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\r\n\t\t\tthis.setIndex(attribute);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this.setAttribute(name, attribute);\r\n\t};\r\n\r\n\tBufferGeometry.prototype.addDrawCall = function (start, count, indexOffset) {\r\n\t\tif (indexOffset !== undefined) {\r\n\t\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\r\n\t\t}\r\n\r\n\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\r\n\t\tthis.addGroup(start, count);\r\n\t};\r\n\r\n\tBufferGeometry.prototype.clearDrawCalls = function () {\r\n\t\tconsole.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\r\n\t\tthis.clearGroups();\r\n\t};\r\n\r\n\tBufferGeometry.prototype.computeOffsets = function () {\r\n\t\tconsole.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\r\n\t};\r\n\r\n\tBufferGeometry.prototype.removeAttribute = function (name) {\r\n\t\tconsole.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');\r\n\t\treturn this.deleteAttribute(name);\r\n\t};\r\n\r\n\tBufferGeometry.prototype.applyMatrix = function (matrix) {\r\n\t\tconsole.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');\r\n\t\treturn this.applyMatrix4(matrix);\r\n\t};\r\n\r\n\tObject.defineProperties(BufferGeometry.prototype, {\r\n\t\tdrawcalls: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\r\n\t\t\t\treturn this.groups;\r\n\t\t\t}\r\n\t\t},\r\n\t\toffsets: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\r\n\t\t\t\treturn this.groups;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tInterleavedBuffer.prototype.setDynamic = function (value) {\r\n\t\tconsole.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');\r\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\r\n\t\treturn this;\r\n\t};\r\n\r\n\tInterleavedBuffer.prototype.setArray = function () {\r\n\t\tconsole.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\r\n\t}; //\r\n\r\n\r\n\tExtrudeGeometry.prototype.getArrays = function () {\r\n\t\tconsole.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');\r\n\t};\r\n\r\n\tExtrudeGeometry.prototype.addShapeList = function () {\r\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');\r\n\t};\r\n\r\n\tExtrudeGeometry.prototype.addShape = function () {\r\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShape() has been removed.');\r\n\t}; //\r\n\r\n\r\n\tScene.prototype.dispose = function () {\r\n\t\tconsole.error('THREE.Scene: .dispose() has been removed.');\r\n\t}; //\r\n\r\n\r\n\tUniform.prototype.onUpdate = function () {\r\n\t\tconsole.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\r\n\t\treturn this;\r\n\t}; //\r\n\r\n\r\n\tObject.defineProperties(Material.prototype, {\r\n\t\twrapAround: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\r\n\t\t\t}\r\n\t\t},\r\n\t\toverdraw: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\r\n\t\t\t}\r\n\t\t},\r\n\t\twrapRGB: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.Material: .wrapRGB has been removed.');\r\n\t\t\t\treturn new Color();\r\n\t\t\t}\r\n\t\t},\r\n\t\tshading: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\r\n\t\t\t\tthis.flatShading = value === FlatShading;\r\n\t\t\t}\r\n\t\t},\r\n\t\tstencilMask: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\r\n\t\t\t\treturn this.stencilFuncMask;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\r\n\t\t\t\tthis.stencilFuncMask = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tvertexTangents: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .vertexTangents has been removed.');\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .vertexTangents has been removed.');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tObject.defineProperties(ShaderMaterial.prototype, {\r\n\t\tderivatives: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\r\n\t\t\t\treturn this.extensions.derivatives;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\r\n\t\t\t\tthis.extensions.derivatives = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}); //\r\n\r\n\tWebGLRenderer.prototype.clearTarget = function (renderTarget, color, depth, stencil) {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\r\n\t\tthis.setRenderTarget(renderTarget);\r\n\t\tthis.clear(color, depth, stencil);\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.animate = function (callback) {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\r\n\t\tthis.setAnimationLoop(callback);\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.getCurrentRenderTarget = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\r\n\t\treturn this.getRenderTarget();\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.getMaxAnisotropy = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\r\n\t\treturn this.capabilities.getMaxAnisotropy();\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.getPrecision = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\r\n\t\treturn this.capabilities.precision;\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.resetGLState = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\r\n\t\treturn this.state.reset();\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsFloatTextures = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\r\n\t\treturn this.extensions.get('OES_texture_float');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\r\n\t\treturn this.extensions.get('OES_texture_half_float');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsStandardDerivatives = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\r\n\t\treturn this.extensions.get('OES_standard_derivatives');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\r\n\t\treturn this.extensions.get('WEBGL_compressed_texture_s3tc');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\r\n\t\treturn this.extensions.get('WEBGL_compressed_texture_pvrtc');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsBlendMinMax = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\r\n\t\treturn this.extensions.get('EXT_blend_minmax');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsVertexTextures = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\r\n\t\treturn this.capabilities.vertexTextures;\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsInstancedArrays = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\r\n\t\treturn this.extensions.get('ANGLE_instanced_arrays');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.enableScissorTest = function (boolean) {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\r\n\t\tthis.setScissorTest(boolean);\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.initMaterial = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.addPrePlugin = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.addPostPlugin = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.updateShadowMap = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.setFaceCulling = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.allocTextureUnit = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.setTexture = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.setTexture2D = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.setTextureCube = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.getActiveMipMapLevel = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\r\n\t\treturn this.getActiveMipmapLevel();\r\n\t};\r\n\r\n\tObject.defineProperties(WebGLRenderer.prototype, {\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn this.shadowMap.enabled;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\r\n\t\t\t\tthis.shadowMap.enabled = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn this.shadowMap.type;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\r\n\t\t\t\tthis.shadowMap.type = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\r\n\t\t\t\treturn undefined;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcontext: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\r\n\t\t\t\treturn this.getContext();\r\n\t\t\t}\r\n\t\t},\r\n\t\tvr: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');\r\n\t\t\t\treturn this.xr;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgammaInput: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\r\n\t\t\t}\r\n\t\t},\r\n\t\tgammaOutput: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\r\n\t\t\t\tthis.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoneMappingWhitePoint: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\r\n\t\t\t\treturn 1.0;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tObject.defineProperties(WebGLShadowMap.prototype, {\r\n\t\tcullFace: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\r\n\t\t\t\treturn undefined;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderReverseSided: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\r\n\t\t\t\treturn undefined;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderSingleSided: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\r\n\t\t\t\treturn undefined;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tfunction WebGLRenderTargetCube(width, height, options) {\r\n\t\tconsole.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');\r\n\t\treturn new WebGLCubeRenderTarget(width, options);\r\n\t} //\r\n\r\n\tObject.defineProperties(WebGLRenderTarget.prototype, {\r\n\t\twrapS: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\r\n\t\t\t\treturn this.texture.wrapS;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\r\n\t\t\t\tthis.texture.wrapS = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\twrapT: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\r\n\t\t\t\treturn this.texture.wrapT;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\r\n\t\t\t\tthis.texture.wrapT = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tmagFilter: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\r\n\t\t\t\treturn this.texture.magFilter;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\r\n\t\t\t\tthis.texture.magFilter = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tminFilter: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\r\n\t\t\t\treturn this.texture.minFilter;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\r\n\t\t\t\tthis.texture.minFilter = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tanisotropy: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\r\n\t\t\t\treturn this.texture.anisotropy;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\r\n\t\t\t\tthis.texture.anisotropy = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\toffset: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\r\n\t\t\t\treturn this.texture.offset;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\r\n\t\t\t\tthis.texture.offset = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\trepeat: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\r\n\t\t\t\treturn this.texture.repeat;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\r\n\t\t\t\tthis.texture.repeat = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tformat: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\r\n\t\t\t\treturn this.texture.format;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\r\n\t\t\t\tthis.texture.format = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttype: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\r\n\t\t\t\treturn this.texture.type;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\r\n\t\t\t\tthis.texture.type = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgenerateMipmaps: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\r\n\t\t\t\treturn this.texture.generateMipmaps;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\r\n\t\t\t\tthis.texture.generateMipmaps = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}); //\r\n\r\n\tAudio.prototype.load = function (file) {\r\n\t\tconsole.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\r\n\t\tconst scope = this;\r\n\t\tconst audioLoader = new AudioLoader();\r\n\t\taudioLoader.load(file, function (buffer) {\r\n\t\t\tscope.setBuffer(buffer);\r\n\t\t});\r\n\t\treturn this;\r\n\t};\r\n\r\n\tAudioAnalyser.prototype.getData = function () {\r\n\t\tconsole.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\r\n\t\treturn this.getFrequencyData();\r\n\t}; //\r\n\r\n\r\n\tCubeCamera.prototype.updateCubeMap = function (renderer, scene) {\r\n\t\tconsole.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\r\n\t\treturn this.update(renderer, scene);\r\n\t};\r\n\r\n\tCubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\r\n\t\tconsole.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');\r\n\t\treturn this.renderTarget.clear(renderer, color, depth, stencil);\r\n\t};\r\n\r\n\tImageUtils.crossOrigin = undefined;\r\n\r\n\tImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\r\n\t\tconsole.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\r\n\t\tconst loader = new TextureLoader();\r\n\t\tloader.setCrossOrigin(this.crossOrigin);\r\n\t\tconst texture = loader.load(url, onLoad, undefined, onError);\r\n\t\tif (mapping) texture.mapping = mapping;\r\n\t\treturn texture;\r\n\t};\r\n\r\n\tImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\r\n\t\tconsole.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\r\n\t\tconst loader = new CubeTextureLoader();\r\n\t\tloader.setCrossOrigin(this.crossOrigin);\r\n\t\tconst texture = loader.load(urls, onLoad, undefined, onError);\r\n\t\tif (mapping) texture.mapping = mapping;\r\n\t\treturn texture;\r\n\t};\r\n\r\n\tImageUtils.loadCompressedTexture = function () {\r\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\r\n\t};\r\n\r\n\tImageUtils.loadCompressedTextureCube = function () {\r\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\r\n\t}; //\r\n\r\n\r\n\tfunction CanvasRenderer() {\r\n\t\tconsole.error('THREE.CanvasRenderer has been removed');\r\n\t} //\r\n\r\n\tfunction JSONLoader() {\r\n\t\tconsole.error('THREE.JSONLoader has been removed.');\r\n\t} //\r\n\r\n\tconst SceneUtils = {\r\n\t\tcreateMultiMaterialObject: function () {\r\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\r\n\t\t},\r\n\t\tdetach: function () {\r\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\r\n\t\t},\r\n\t\tattach: function () {\r\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\r\n\t\t}\r\n\t}; //\r\n\r\n\tfunction LensFlare() {\r\n\t\tconsole.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');\r\n\t} //\r\n\r\n\tfunction ParametricGeometry() {\r\n\t\tconsole.error('THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js');\r\n\t\treturn new BufferGeometry();\r\n\t}\r\n\tfunction TextGeometry() {\r\n\t\tconsole.error('THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js');\r\n\t\treturn new BufferGeometry();\r\n\t}\r\n\tfunction FontLoader() {\r\n\t\tconsole.error('THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js');\r\n\t}\r\n\tfunction Font() {\r\n\t\tconsole.error('THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js');\r\n\t}\r\n\r\n\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\r\n\t\t/* eslint-disable no-undef */\r\n\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\r\n\t\t\tdetail: {\r\n\t\t\t\trevision: REVISION\r\n\t\t\t}\r\n\t\t}));\r\n\t\t/* eslint-enable no-undef */\r\n\r\n\t}\r\n\r\n\tif (typeof window !== 'undefined') {\r\n\t\tif (window.__THREE__) {\r\n\t\t\tconsole.warn('WARNING: Multiple instances of Three.js being imported.');\r\n\t\t} else {\r\n\t\t\twindow.__THREE__ = REVISION;\r\n\t\t}\r\n\t}\r\n\r\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\r\n\texports.AddEquation = AddEquation;\r\n\texports.AddOperation = AddOperation;\r\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\r\n\texports.AdditiveBlending = AdditiveBlending;\r\n\texports.AlphaFormat = AlphaFormat;\r\n\texports.AlwaysDepth = AlwaysDepth;\r\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\r\n\texports.AmbientLight = AmbientLight;\r\n\texports.AmbientLightProbe = AmbientLightProbe;\r\n\texports.AnimationClip = AnimationClip;\r\n\texports.AnimationLoader = AnimationLoader;\r\n\texports.AnimationMixer = AnimationMixer;\r\n\texports.AnimationObjectGroup = AnimationObjectGroup;\r\n\texports.AnimationUtils = AnimationUtils;\r\n\texports.ArcCurve = ArcCurve;\r\n\texports.ArrayCamera = ArrayCamera;\r\n\texports.ArrowHelper = ArrowHelper;\r\n\texports.Audio = Audio;\r\n\texports.AudioAnalyser = AudioAnalyser;\r\n\texports.AudioContext = AudioContext;\r\n\texports.AudioListener = AudioListener;\r\n\texports.AudioLoader = AudioLoader;\r\n\texports.AxesHelper = AxesHelper;\r\n\texports.AxisHelper = AxisHelper;\r\n\texports.BackSide = BackSide;\r\n\texports.BasicDepthPacking = BasicDepthPacking;\r\n\texports.BasicShadowMap = BasicShadowMap;\r\n\texports.BinaryTextureLoader = BinaryTextureLoader;\r\n\texports.Bone = Bone;\r\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\r\n\texports.BoundingBoxHelper = BoundingBoxHelper;\r\n\texports.Box2 = Box2;\r\n\texports.Box3 = Box3;\r\n\texports.Box3Helper = Box3Helper;\r\n\texports.BoxBufferGeometry = BoxGeometry;\r\n\texports.BoxGeometry = BoxGeometry;\r\n\texports.BoxHelper = BoxHelper;\r\n\texports.BufferAttribute = BufferAttribute;\r\n\texports.BufferGeometry = BufferGeometry;\r\n\texports.BufferGeometryLoader = BufferGeometryLoader;\r\n\texports.ByteType = ByteType;\r\n\texports.Cache = Cache;\r\n\texports.Camera = Camera;\r\n\texports.CameraHelper = CameraHelper;\r\n\texports.CanvasRenderer = CanvasRenderer;\r\n\texports.CanvasTexture = CanvasTexture;\r\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\r\n\texports.CineonToneMapping = CineonToneMapping;\r\n\texports.CircleBufferGeometry = CircleGeometry;\r\n\texports.CircleGeometry = CircleGeometry;\r\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\r\n\texports.Clock = Clock;\r\n\texports.Color = Color;\r\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\r\n\texports.CompressedTexture = CompressedTexture;\r\n\texports.CompressedTextureLoader = CompressedTextureLoader;\r\n\texports.ConeBufferGeometry = ConeGeometry;\r\n\texports.ConeGeometry = ConeGeometry;\r\n\texports.CubeCamera = CubeCamera;\r\n\texports.CubeReflectionMapping = CubeReflectionMapping;\r\n\texports.CubeRefractionMapping = CubeRefractionMapping;\r\n\texports.CubeTexture = CubeTexture;\r\n\texports.CubeTextureLoader = CubeTextureLoader;\r\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\r\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\r\n\texports.CubicBezierCurve = CubicBezierCurve;\r\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\r\n\texports.CubicInterpolant = CubicInterpolant;\r\n\texports.CullFaceBack = CullFaceBack;\r\n\texports.CullFaceFront = CullFaceFront;\r\n\texports.CullFaceFrontBack = CullFaceFrontBack;\r\n\texports.CullFaceNone = CullFaceNone;\r\n\texports.Curve = Curve;\r\n\texports.CurvePath = CurvePath;\r\n\texports.CustomBlending = CustomBlending;\r\n\texports.CustomToneMapping = CustomToneMapping;\r\n\texports.CylinderBufferGeometry = CylinderGeometry;\r\n\texports.CylinderGeometry = CylinderGeometry;\r\n\texports.Cylindrical = Cylindrical;\r\n\texports.DataTexture = DataTexture;\r\n\texports.DataTexture2DArray = DataTexture2DArray;\r\n\texports.DataTexture3D = DataTexture3D;\r\n\texports.DataTextureLoader = DataTextureLoader;\r\n\texports.DataUtils = DataUtils;\r\n\texports.DecrementStencilOp = DecrementStencilOp;\r\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\r\n\texports.DefaultLoadingManager = DefaultLoadingManager;\r\n\texports.DepthFormat = DepthFormat;\r\n\texports.DepthStencilFormat = DepthStencilFormat;\r\n\texports.DepthTexture = DepthTexture;\r\n\texports.DirectionalLight = DirectionalLight;\r\n\texports.DirectionalLightHelper = DirectionalLightHelper;\r\n\texports.DiscreteInterpolant = DiscreteInterpolant;\r\n\texports.DodecahedronBufferGeometry = DodecahedronGeometry;\r\n\texports.DodecahedronGeometry = DodecahedronGeometry;\r\n\texports.DoubleSide = DoubleSide;\r\n\texports.DstAlphaFactor = DstAlphaFactor;\r\n\texports.DstColorFactor = DstColorFactor;\r\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\r\n\texports.DynamicCopyUsage = DynamicCopyUsage;\r\n\texports.DynamicDrawUsage = DynamicDrawUsage;\r\n\texports.DynamicReadUsage = DynamicReadUsage;\r\n\texports.EdgesGeometry = EdgesGeometry;\r\n\texports.EdgesHelper = EdgesHelper;\r\n\texports.EllipseCurve = EllipseCurve;\r\n\texports.EqualDepth = EqualDepth;\r\n\texports.EqualStencilFunc = EqualStencilFunc;\r\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\r\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\r\n\texports.Euler = Euler;\r\n\texports.EventDispatcher = EventDispatcher;\r\n\texports.ExtrudeBufferGeometry = ExtrudeGeometry;\r\n\texports.ExtrudeGeometry = ExtrudeGeometry;\r\n\texports.FaceColors = FaceColors;\r\n\texports.FileLoader = FileLoader;\r\n\texports.FlatShading = FlatShading;\r\n\texports.Float16BufferAttribute = Float16BufferAttribute;\r\n\texports.Float32Attribute = Float32Attribute;\r\n\texports.Float32BufferAttribute = Float32BufferAttribute;\r\n\texports.Float64Attribute = Float64Attribute;\r\n\texports.Float64BufferAttribute = Float64BufferAttribute;\r\n\texports.FloatType = FloatType;\r\n\texports.Fog = Fog;\r\n\texports.FogExp2 = FogExp2;\r\n\texports.Font = Font;\r\n\texports.FontLoader = FontLoader;\r\n\texports.FrontSide = FrontSide;\r\n\texports.Frustum = Frustum;\r\n\texports.GLBufferAttribute = GLBufferAttribute;\r\n\texports.GLSL1 = GLSL1;\r\n\texports.GLSL3 = GLSL3;\r\n\texports.GammaEncoding = GammaEncoding;\r\n\texports.GreaterDepth = GreaterDepth;\r\n\texports.GreaterEqualDepth = GreaterEqualDepth;\r\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\r\n\texports.GreaterStencilFunc = GreaterStencilFunc;\r\n\texports.GridHelper = GridHelper;\r\n\texports.Group = Group;\r\n\texports.HalfFloatType = HalfFloatType;\r\n\texports.HemisphereLight = HemisphereLight;\r\n\texports.HemisphereLightHelper = HemisphereLightHelper;\r\n\texports.HemisphereLightProbe = HemisphereLightProbe;\r\n\texports.IcosahedronBufferGeometry = IcosahedronGeometry;\r\n\texports.IcosahedronGeometry = IcosahedronGeometry;\r\n\texports.ImageBitmapLoader = ImageBitmapLoader;\r\n\texports.ImageLoader = ImageLoader;\r\n\texports.ImageUtils = ImageUtils;\r\n\texports.ImmediateRenderObject = ImmediateRenderObject;\r\n\texports.IncrementStencilOp = IncrementStencilOp;\r\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\r\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\r\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\r\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\r\n\texports.InstancedMesh = InstancedMesh;\r\n\texports.Int16Attribute = Int16Attribute;\r\n\texports.Int16BufferAttribute = Int16BufferAttribute;\r\n\texports.Int32Attribute = Int32Attribute;\r\n\texports.Int32BufferAttribute = Int32BufferAttribute;\r\n\texports.Int8Attribute = Int8Attribute;\r\n\texports.Int8BufferAttribute = Int8BufferAttribute;\r\n\texports.IntType = IntType;\r\n\texports.InterleavedBuffer = InterleavedBuffer;\r\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\r\n\texports.Interpolant = Interpolant;\r\n\texports.InterpolateDiscrete = InterpolateDiscrete;\r\n\texports.InterpolateLinear = InterpolateLinear;\r\n\texports.InterpolateSmooth = InterpolateSmooth;\r\n\texports.InvertStencilOp = InvertStencilOp;\r\n\texports.JSONLoader = JSONLoader;\r\n\texports.KeepStencilOp = KeepStencilOp;\r\n\texports.KeyframeTrack = KeyframeTrack;\r\n\texports.LOD = LOD;\r\n\texports.LatheBufferGeometry = LatheGeometry;\r\n\texports.LatheGeometry = LatheGeometry;\r\n\texports.Layers = Layers;\r\n\texports.LensFlare = LensFlare;\r\n\texports.LessDepth = LessDepth;\r\n\texports.LessEqualDepth = LessEqualDepth;\r\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\r\n\texports.LessStencilFunc = LessStencilFunc;\r\n\texports.Light = Light;\r\n\texports.LightProbe = LightProbe;\r\n\texports.Line = Line;\r\n\texports.Line3 = Line3;\r\n\texports.LineBasicMaterial = LineBasicMaterial;\r\n\texports.LineCurve = LineCurve;\r\n\texports.LineCurve3 = LineCurve3;\r\n\texports.LineDashedMaterial = LineDashedMaterial;\r\n\texports.LineLoop = LineLoop;\r\n\texports.LinePieces = LinePieces;\r\n\texports.LineSegments = LineSegments;\r\n\texports.LineStrip = LineStrip;\r\n\texports.LinearEncoding = LinearEncoding;\r\n\texports.LinearFilter = LinearFilter;\r\n\texports.LinearInterpolant = LinearInterpolant;\r\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\r\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\r\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\r\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\r\n\texports.LinearToneMapping = LinearToneMapping;\r\n\texports.Loader = Loader;\r\n\texports.LoaderUtils = LoaderUtils;\r\n\texports.LoadingManager = LoadingManager;\r\n\texports.LogLuvEncoding = LogLuvEncoding;\r\n\texports.LoopOnce = LoopOnce;\r\n\texports.LoopPingPong = LoopPingPong;\r\n\texports.LoopRepeat = LoopRepeat;\r\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\r\n\texports.LuminanceFormat = LuminanceFormat;\r\n\texports.MOUSE = MOUSE;\r\n\texports.Material = Material;\r\n\texports.MaterialLoader = MaterialLoader;\r\n\texports.Math = MathUtils;\r\n\texports.MathUtils = MathUtils;\r\n\texports.Matrix3 = Matrix3;\r\n\texports.Matrix4 = Matrix4;\r\n\texports.MaxEquation = MaxEquation;\r\n\texports.Mesh = Mesh;\r\n\texports.MeshBasicMaterial = MeshBasicMaterial;\r\n\texports.MeshDepthMaterial = MeshDepthMaterial;\r\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\r\n\texports.MeshFaceMaterial = MeshFaceMaterial;\r\n\texports.MeshLambertMaterial = MeshLambertMaterial;\r\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\r\n\texports.MeshNormalMaterial = MeshNormalMaterial;\r\n\texports.MeshPhongMaterial = MeshPhongMaterial;\r\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\r\n\texports.MeshStandardMaterial = MeshStandardMaterial;\r\n\texports.MeshToonMaterial = MeshToonMaterial;\r\n\texports.MinEquation = MinEquation;\r\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\r\n\texports.MixOperation = MixOperation;\r\n\texports.MultiMaterial = MultiMaterial;\r\n\texports.MultiplyBlending = MultiplyBlending;\r\n\texports.MultiplyOperation = MultiplyOperation;\r\n\texports.NearestFilter = NearestFilter;\r\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\r\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\r\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\r\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\r\n\texports.NeverDepth = NeverDepth;\r\n\texports.NeverStencilFunc = NeverStencilFunc;\r\n\texports.NoBlending = NoBlending;\r\n\texports.NoColors = NoColors;\r\n\texports.NoToneMapping = NoToneMapping;\r\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\r\n\texports.NormalBlending = NormalBlending;\r\n\texports.NotEqualDepth = NotEqualDepth;\r\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\r\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\r\n\texports.Object3D = Object3D;\r\n\texports.ObjectLoader = ObjectLoader;\r\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\r\n\texports.OctahedronBufferGeometry = OctahedronGeometry;\r\n\texports.OctahedronGeometry = OctahedronGeometry;\r\n\texports.OneFactor = OneFactor;\r\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\r\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\r\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\r\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\r\n\texports.OrthographicCamera = OrthographicCamera;\r\n\texports.PCFShadowMap = PCFShadowMap;\r\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\r\n\texports.PMREMGenerator = PMREMGenerator;\r\n\texports.ParametricGeometry = ParametricGeometry;\r\n\texports.Particle = Particle;\r\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\r\n\texports.ParticleSystem = ParticleSystem;\r\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\r\n\texports.Path = Path;\r\n\texports.PerspectiveCamera = PerspectiveCamera;\r\n\texports.Plane = Plane;\r\n\texports.PlaneBufferGeometry = PlaneGeometry;\r\n\texports.PlaneGeometry = PlaneGeometry;\r\n\texports.PlaneHelper = PlaneHelper;\r\n\texports.PointCloud = PointCloud;\r\n\texports.PointCloudMaterial = PointCloudMaterial;\r\n\texports.PointLight = PointLight;\r\n\texports.PointLightHelper = PointLightHelper;\r\n\texports.Points = Points;\r\n\texports.PointsMaterial = PointsMaterial;\r\n\texports.PolarGridHelper = PolarGridHelper;\r\n\texports.PolyhedronBufferGeometry = PolyhedronGeometry;\r\n\texports.PolyhedronGeometry = PolyhedronGeometry;\r\n\texports.PositionalAudio = PositionalAudio;\r\n\texports.PropertyBinding = PropertyBinding;\r\n\texports.PropertyMixer = PropertyMixer;\r\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\r\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\r\n\texports.Quaternion = Quaternion;\r\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\r\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\r\n\texports.REVISION = REVISION;\r\n\texports.RGBADepthPacking = RGBADepthPacking;\r\n\texports.RGBAFormat = RGBAFormat;\r\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\r\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\r\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\r\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\r\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\r\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\r\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\r\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\r\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\r\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\r\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\r\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\r\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\r\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\r\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\r\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\r\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\r\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\r\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\r\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\r\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\r\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\r\n\texports.RGBDEncoding = RGBDEncoding;\r\n\texports.RGBEEncoding = RGBEEncoding;\r\n\texports.RGBEFormat = RGBEFormat;\r\n\texports.RGBFormat = RGBFormat;\r\n\texports.RGBIntegerFormat = RGBIntegerFormat;\r\n\texports.RGBM16Encoding = RGBM16Encoding;\r\n\texports.RGBM7Encoding = RGBM7Encoding;\r\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\r\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\r\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\r\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\r\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\r\n\texports.RGFormat = RGFormat;\r\n\texports.RGIntegerFormat = RGIntegerFormat;\r\n\texports.RawShaderMaterial = RawShaderMaterial;\r\n\texports.Ray = Ray;\r\n\texports.Raycaster = Raycaster;\r\n\texports.RectAreaLight = RectAreaLight;\r\n\texports.RedFormat = RedFormat;\r\n\texports.RedIntegerFormat = RedIntegerFormat;\r\n\texports.ReinhardToneMapping = ReinhardToneMapping;\r\n\texports.RepeatWrapping = RepeatWrapping;\r\n\texports.ReplaceStencilOp = ReplaceStencilOp;\r\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\r\n\texports.RingBufferGeometry = RingGeometry;\r\n\texports.RingGeometry = RingGeometry;\r\n\texports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\r\n\texports.Scene = Scene;\r\n\texports.SceneUtils = SceneUtils;\r\n\texports.ShaderChunk = ShaderChunk;\r\n\texports.ShaderLib = ShaderLib;\r\n\texports.ShaderMaterial = ShaderMaterial;\r\n\texports.ShadowMaterial = ShadowMaterial;\r\n\texports.Shape = Shape;\r\n\texports.ShapeBufferGeometry = ShapeGeometry;\r\n\texports.ShapeGeometry = ShapeGeometry;\r\n\texports.ShapePath = ShapePath;\r\n\texports.ShapeUtils = ShapeUtils;\r\n\texports.ShortType = ShortType;\r\n\texports.Skeleton = Skeleton;\r\n\texports.SkeletonHelper = SkeletonHelper;\r\n\texports.SkinnedMesh = SkinnedMesh;\r\n\texports.SmoothShading = SmoothShading;\r\n\texports.Sphere = Sphere;\r\n\texports.SphereBufferGeometry = SphereGeometry;\r\n\texports.SphereGeometry = SphereGeometry;\r\n\texports.Spherical = Spherical;\r\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\r\n\texports.SplineCurve = SplineCurve;\r\n\texports.SpotLight = SpotLight;\r\n\texports.SpotLightHelper = SpotLightHelper;\r\n\texports.Sprite = Sprite;\r\n\texports.SpriteMaterial = SpriteMaterial;\r\n\texports.SrcAlphaFactor = SrcAlphaFactor;\r\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\r\n\texports.SrcColorFactor = SrcColorFactor;\r\n\texports.StaticCopyUsage = StaticCopyUsage;\r\n\texports.StaticDrawUsage = StaticDrawUsage;\r\n\texports.StaticReadUsage = StaticReadUsage;\r\n\texports.StereoCamera = StereoCamera;\r\n\texports.StreamCopyUsage = StreamCopyUsage;\r\n\texports.StreamDrawUsage = StreamDrawUsage;\r\n\texports.StreamReadUsage = StreamReadUsage;\r\n\texports.StringKeyframeTrack = StringKeyframeTrack;\r\n\texports.SubtractEquation = SubtractEquation;\r\n\texports.SubtractiveBlending = SubtractiveBlending;\r\n\texports.TOUCH = TOUCH;\r\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\r\n\texports.TetrahedronBufferGeometry = TetrahedronGeometry;\r\n\texports.TetrahedronGeometry = TetrahedronGeometry;\r\n\texports.TextGeometry = TextGeometry;\r\n\texports.Texture = Texture;\r\n\texports.TextureLoader = TextureLoader;\r\n\texports.TorusBufferGeometry = TorusGeometry;\r\n\texports.TorusGeometry = TorusGeometry;\r\n\texports.TorusKnotBufferGeometry = TorusKnotGeometry;\r\n\texports.TorusKnotGeometry = TorusKnotGeometry;\r\n\texports.Triangle = Triangle;\r\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\r\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\r\n\texports.TrianglesDrawMode = TrianglesDrawMode;\r\n\texports.TubeBufferGeometry = TubeGeometry;\r\n\texports.TubeGeometry = TubeGeometry;\r\n\texports.UVMapping = UVMapping;\r\n\texports.Uint16Attribute = Uint16Attribute;\r\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\r\n\texports.Uint32Attribute = Uint32Attribute;\r\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\r\n\texports.Uint8Attribute = Uint8Attribute;\r\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\r\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\r\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\r\n\texports.Uniform = Uniform;\r\n\texports.UniformsLib = UniformsLib;\r\n\texports.UniformsUtils = UniformsUtils;\r\n\texports.UnsignedByteType = UnsignedByteType;\r\n\texports.UnsignedInt248Type = UnsignedInt248Type;\r\n\texports.UnsignedIntType = UnsignedIntType;\r\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\r\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\r\n\texports.UnsignedShort565Type = UnsignedShort565Type;\r\n\texports.UnsignedShortType = UnsignedShortType;\r\n\texports.VSMShadowMap = VSMShadowMap;\r\n\texports.Vector2 = Vector2;\r\n\texports.Vector3 = Vector3;\r\n\texports.Vector4 = Vector4;\r\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\r\n\texports.Vertex = Vertex;\r\n\texports.VertexColors = VertexColors;\r\n\texports.VideoTexture = VideoTexture;\r\n\texports.WebGL1Renderer = WebGL1Renderer;\r\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\r\n\texports.WebGLMultipleRenderTargets = WebGLMultipleRenderTargets;\r\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\r\n\texports.WebGLRenderTarget = WebGLRenderTarget;\r\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\r\n\texports.WebGLRenderer = WebGLRenderer;\r\n\texports.WebGLUtils = WebGLUtils;\r\n\texports.WireframeGeometry = WireframeGeometry;\r\n\texports.WireframeHelper = WireframeHelper;\r\n\texports.WrapAroundEnding = WrapAroundEnding;\r\n\texports.XHRLoader = XHRLoader;\r\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\r\n\texports.ZeroFactor = ZeroFactor;\r\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\r\n\texports.ZeroStencilOp = ZeroStencilOp;\r\n\texports.sRGBEncoding = sRGBEncoding;\r\n\r\n\tObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\n})));","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}